<launch>

  <!-- To playback from a log, set bag=true and provide a path to bag file -->
  <arg name="bag" default="false" />
  <arg name="path" default="" />

  <!-- RGBD camera driver -->
  <include file="$(find openni2_launch)/launch/openni2.launch" unless="$(arg bag)" />

  <!-- Bag file playback -->
  <include file="$(find slim_perception)/launch/playback_bag.launch" if="$(arg bag)">
    <arg name="path" value="$(arg path)" />
  </include>

  <!-- Main Point Cloud Perception Processing node -->
  <node name="slim_perception" pkg="slim_perception" type="slim_perception_node">
    <!-- Filter points outside this minimum and maximum range -->
    <param name="limit_min" value="0.3" />
    <param name="limit_max" value="1.0" />
    <!-- Uncomment to publish point cloud after passthrough range filter -->
    <param name="passthrough_output_cloud_topic" value="/camera/depth/points_passthrough" />

    <!-- Filter points using outlier removal -->
    <param name="inlier_output_cloud_topic" value="/camera/depth/points_inliers" />

    <!-- Voxel size after subsampling passthrough filtered point cloud -->
    <param name="subsampled_voxel_size" value="0.01" />
    <!-- Uncomment to publish point cloud after voxel grid filter -->
    <param name="subsampled_output_cloud_topic" value="/camera/depth/points_subsampled" />

    <param name="plane_output_cloud_topic" value="/camera/depth/points_non_plane" />
  </node>

<!--
  <node pkg="tf" type="static_transform_publisher" name="camera_base_link_broadcaster"
        args="1 0 0 0 0 0 1 base_link camera_link 100" />
-->
</launch>
