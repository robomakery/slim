<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false"/>
  <arg name="world_name" default="$(find slim_gazebo)/worlds/warehouse.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->

  <!-- set use_sim_time flag -->
  <group if="$(arg use_sim_time)">
    <param name="/use_sim_time" value="true" />
  </group>

  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg headless)" name="command_arg2" value=""/>
  <arg     if="$(arg headless)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>

  <!-- copy over model files if necessary -->
  <!-- <node name="copy-model-files" pkg="slim_gazebo" type="scripts/copy-model-files.sh" /> -->

  <!-- start gazebo server-->
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="false" output="screen"
	args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) $(arg world_name)" />
	
  <!-- start gazebo client -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
  </group>

  <param name="robot_description" command="$(find xacro)/xacro.py '$(find slim_description)/urdf/slim.urdf.xacro'" />
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -urdf -z 1.017 -y -1 -model slim" />

  <!-- ros_control controllers -->
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find slim_gazebo)/config/slim_gazebo_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	    output="screen" ns="/slim" args="joint_state_controller
					                     fl_lift_controller
                                         slide_rail_base_controller
					                     shoulder_pan_controller
					                     shoulder_pitch_controller
					                     elbow_roll_controller
					                     elbow_pitch_controller
					                     wrist_roll_controller
					                     wrist_pitch_controller
					                     gripper_roll_controller
					                     gripper_finger_controller" />

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
	respawn="false" output="screen">
    <remap from="/joint_states" to="/slim/joint_states" />
  </node>

  <!-- <include file="$(find slim_moveit_config)/launch/moveit_rviz.launch"/> -->

</launch>
