/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-03-12 17:14:38.942148
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[1]);
x3=IKcos(j[2]);
x4=IKsin(j[2]);
x5=IKcos(j[3]);
x6=IKsin(j[0]);
x7=IKsin(j[3]);
x8=IKcos(j[4]);
x9=IKsin(j[4]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=((IkReal(0.0549798603375872))*(x2));
x13=((IkReal(0.998487463595442))*(x1));
x14=((IkReal(0.00808774845512308))*(x2));
x15=((IkReal(0.247624890971670))*(x2));
x16=((IkReal(1.00000000000000))*(x4));
x17=((IkReal(0.155600000000000))*(x2));
x18=((IkReal(0.0800000000000000))*(x3));
x19=((IkReal(0.0549798603375872))*(x1));
x20=((IkReal(1.00000000000000))*(x5));
x21=((IkReal(0.000445336868734456))*(x2));
x22=((IkReal(0.0800000000000000))*(x4));
x23=((IkReal(0.247624890971670))*(x1));
x24=((IkReal(0.0136350053637216))*(x2));
x25=((IkReal(0.00808774845512308))*(x1));
x26=((IkReal(0.000100000000000000))*(x6));
x27=((IkReal(0.000445336868734456))*(x1));
x28=((IkReal(0.998487463595442))*(x2));
x29=((IkReal(1.00000000000000))*(x3));
x30=((IkReal(0.0136350053637216))*(x1));
x31=((IkReal(-1.00000000000000))*(x7));
x32=((IkReal(-0.000100000000000000))*(x4));
x33=((IkReal(-0.000100000000000000))*(x3));
x34=((x0)*(x1));
x35=((x5)*(x9));
x36=((x0)*(x7));
x37=((IkReal(-0.0800000000000000))*(x5));
x38=((x0)*(x2));
x39=((IkReal(-1.00000000000000))*(x4));
x40=((x0)*(x5));
x41=((x6)*(x7));
x42=((IkReal(-1.00000000000000))*(x5));
x43=((IkReal(1.00000000000000))*(x36));
x44=((((IkReal(-1.00000000000000))*(x12)))+(x13));
x45=((((IkReal(-1.00000000000000))*(x13)))+(x12));
x46=((x19)+(x28));
x47=((x4)*(x44));
x48=((x3)*(x46));
x49=((x0)*(((((IkReal(-1.00000000000000))*(x13)))+(x12))));
x50=((x6)*(((((IkReal(-1.00000000000000))*(x13)))+(x12))));
x51=((x0)*(((x19)+(x28))));
x52=((IkReal(-1.00000000000000))*(x51));
x53=((x6)*(((x19)+(x28))));
x54=((IkReal(-1.00000000000000))*(x53));
x55=((x4)*(x49));
x56=((x48)+(x47));
x57=((((IkReal(-1.00000000000000))*(x16)*(x46)))+(((IkReal(-1.00000000000000))*(x29)*(x45))));
x58=((((x3)*(x49)))+(((x4)*(x51))));
x59=((((x3)*(x50)))+(((x4)*(x53))));
x60=((((IkReal(-1.00000000000000))*(x29)*(x52)))+(((IkReal(-1.00000000000000))*(x16)*(x49))));
x61=((x5)*(x59));
x62=((x5)*(x58));
x63=((((x39)*(x50)))+(((IkReal(-1.00000000000000))*(x3)*(x54))));
x64=((x63)*(x9));
x65=((((x5)*(x56)*(x8)))+(((x57)*(x9))));
x66=((((x60)*(x9)))+(((x8)*(((x41)+(x62))))));
eerot[0]=((((x9)*(((((x31)*(x6)))+(((x42)*(x58)))))))+(((x60)*(x8))));
eerot[1]=((((x11)*(((((x42)*(x6)))+(((x58)*(x7)))))))+(((x10)*(x66))));
eerot[2]=((((x11)*(x66)))+(((x10)*(((((x31)*(x58)))+(((x20)*(x6))))))));
IkReal x67=((IkReal(1.00000000000000))*(x0));
eetrans[0]=((((x4)*(((((IkReal(-1.00000000000000))*(x14)*(x67)))+(((IkReal(-1.00000000000000))*(x27)*(x67)))))))+(((x3)*(((((x0)*(x25)))+(((IkReal(-1.00000000000000))*(x21)*(x67)))))))+(((x0)*(x17)))+(((x3)*(((((x0)*(x15)))+(((x0)*(x30)))))))+(((x7)*(((((x32)*(x51)))+(((x33)*(x49)))))))+(((IkReal(-1.00000000000000))*(x26)))+(((x8)*(((((IkReal(-1.00000000000000))*(x18)*(x52)))+(((IkReal(-1.00000000000000))*(x22)*(x49)))))))+(((x4)*(((((x0)*(x23)))+(((IkReal(-1.00000000000000))*(x24)*(x67)))))))+(((x26)*(x5)))+(((x9)*(((((x37)*(x58)))+(((IkReal(-0.0800000000000000))*(x41))))))));
eerot[3]=((((x9)*(((((IkReal(-1.00000000000000))*(x20)*(x59)))+(x43)))))+(((x63)*(x8))));
eerot[4]=((((x10)*(((((x8)*(((x61)+(((x0)*(x31)))))))+(x64)))))+(((x11)*(((x40)+(((x59)*(x7))))))));
eerot[5]=((((x10)*(((((IkReal(-1.00000000000000))*(x40)))+(((x31)*(x59)))))))+(((x11)*(((x64)+(((x8)*(((((IkReal(-1.00000000000000))*(x43)))+(x61))))))))));
IkReal x68=((IkReal(1.00000000000000))*(x6));
eetrans[1]=((((x4)*(((((IkReal(-1.00000000000000))*(x14)*(x68)))+(((IkReal(-1.00000000000000))*(x27)*(x68)))))))+(((x3)*(((((x30)*(x6)))+(((x15)*(x6)))))))+(((IkReal(0.000100000000000000))*(x0)))+(((x7)*(((((x33)*(x50)))+(((x32)*(x53)))))))+(((x8)*(((((IkReal(-1.00000000000000))*(x18)*(x54)))+(((IkReal(-1.00000000000000))*(x22)*(x50)))))))+(((x4)*(((((IkReal(-1.00000000000000))*(x24)*(x68)))+(((x23)*(x6)))))))+(((x9)*(((((IkReal(0.0800000000000000))*(x36)))+(((x37)*(x59)))))))+(((x17)*(x6)))+(((x3)*(((((IkReal(-1.00000000000000))*(x21)*(x68)))+(((x25)*(x6)))))))+(((IkReal(-0.000100000000000000))*(x40))));
eerot[6]=((((x57)*(x8)))+(((x35)*(((((IkReal(-1.00000000000000))*(x16)*(x44)))+(((IkReal(-1.00000000000000))*(x29)*(x46))))))));
eerot[7]=((((x10)*(x65)))+(((x11)*(x56)*(x7))));
eerot[8]=((((x10)*(x7)*(((((IkReal(-1.00000000000000))*(x48)))+(((x39)*(x44)))))))+(((x11)*(x65))));
IkReal x69=((IkReal(1.00000000000000))*(x18));
IkReal x70=((IkReal(1.00000000000000))*(x22));
eetrans[2]=((IkReal(0.0910000000000000))+(((x3)*(((((IkReal(-1.00000000000000))*(x27)))+(((IkReal(-1.00000000000000))*(x14)))))))+(((x8)*(((((IkReal(-1.00000000000000))*(x45)*(x69)))+(((IkReal(-1.00000000000000))*(x46)*(x70)))))))+(((x4)*(((((IkReal(-1.00000000000000))*(x25)))+(x21)))))+(((x4)*(((((IkReal(-1.00000000000000))*(x30)))+(((IkReal(-1.00000000000000))*(x15)))))))+(((x3)*(((((IkReal(-1.00000000000000))*(x24)))+(x23)))))+(((IkReal(0.155600000000000))*(x1)))+(((x35)*(((((IkReal(-1.00000000000000))*(x44)*(x70)))+(((IkReal(-1.00000000000000))*(x46)*(x69)))))))+(((x7)*(((((x32)*(x44)))+(((x33)*(x46))))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r01;
new_r01=r02;
new_r02=r00;
new_px=((((IkReal(-0.0800000000000000))*(r00)))+(px));
new_r10=r11;
new_r11=r12;
new_r12=r10;
new_py=((((IkReal(-0.0800000000000000))*(r10)))+(py));
new_r20=r21;
new_r21=r22;
new_r22=r20;
new_pz=((IkReal(-0.0910000000000000))+(((IkReal(-0.0800000000000000))*(r20)))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[72], zeror[48];
int numroots;
IkReal x71=((IkReal(0.000100000000000000))*(r10));
IkReal x72=((IkReal(3.31621915422235e-8))*(r10));
IkReal x73=((IkReal(0.0101533623487302))*(rxp0_1));
IkReal x74=((IkReal(0.0372786303700397))*(r20));
IkReal x75=((IkReal(0.000331621915422235))*(npx));
IkReal x76=((IkReal(0.00243773681853759))*(r00));
IkReal x77=((IkReal(0.000200000000000000))*(pz));
IkReal x78=((IkReal(0.000200000000000000))*(rxp0_0));
IkReal x79=((IkReal(1.01533623487302e-6))*(r10));
IkReal x80=((IkReal(0.310868378084578))*(rxp0_1));
IkReal x81=((IkReal(0.00243773681853759))*(r20));
IkReal x82=((IkReal(0.000200000000000000))*(rxp0_2));
IkReal x83=((IkReal(0.0372786303700397))*(r00));
IkReal x84=((IkReal(0.0101533623487302))*(npx));
IkReal x85=((IkReal(0.000200000000000000))*(px));
IkReal x86=((pp)*(r00));
IkReal x87=((IkReal(0.0203067246974603))*(npy));
IkReal x88=((IkReal(0.00487547363707517))*(r21));
IkReal x89=((IkReal(0.000400000000000000))*(rxp1_2));
IkReal x90=((IkReal(0.0745572607400794))*(r01));
IkReal x91=((IkReal(0.621736756169156))*(rxp1_1));
IkReal x92=((IkReal(2.03067246974603e-6))*(r11));
IkReal x93=((IkReal(6.63243830844470e-8))*(r11));
IkReal x94=((IkReal(0.0203067246974603))*(rxp1_1));
IkReal x95=((IkReal(0.000400000000000000))*(rxp1_0));
IkReal x96=((IkReal(0.00487547363707517))*(r01));
IkReal x97=((IkReal(0.000663243830844470))*(npy));
IkReal x98=((IkReal(0.0745572607400794))*(r21));
IkReal x99=((pp)*(r20));
IkReal x100=((IkReal(0.000200000000000000))*(r00));
IkReal x101=((IkReal(2.00000000000000))*(px));
IkReal x102=((IkReal(0.000400000000000000))*(r01));
IkReal x103=((IkReal(0.0745572607400794))*(r10));
IkReal x104=((IkReal(0.000400000000000000))*(py));
IkReal x105=((IkReal(2.03067246974603e-6))*(r00));
IkReal x106=((IkReal(0.621736756169156))*(rxp0_0));
IkReal x107=((IkReal(6.63243830844470e-8))*(r00));
IkReal x108=((IkReal(0.0203067246974603))*(rxp0_0));
IkReal x109=((IkReal(0.00487547363707517))*(r10));
IkReal x110=((IkReal(0.000400000000000000))*(rxp0_1));
IkReal x111=((IkReal(1.24347351233831))*(rxp1_0));
IkReal x112=((IkReal(0.149114521480159))*(r11));
IkReal x113=((IkReal(4.06134493949206e-6))*(r01));
IkReal x114=((IkReal(0.000800000000000000))*(rxp1_1));
IkReal x115=((IkReal(0.00975094727415035))*(r11));
IkReal x116=((IkReal(1.32648766168894e-7))*(r01));
IkReal x117=((IkReal(0.0406134493949206))*(rxp1_0));
IkReal x118=((IkReal(1.00000000000000))*(py));
IkReal x119=((IkReal(0.000200000000000000))*(r11));
IkReal x120=((IkReal(2.00000000000000))*(npx));
IkReal x121=((IkReal(1.00000000000000))*(pp));
IkReal x122=((IkReal(4.00000000000000))*(npy));
IkReal x123=((IkReal(2.00000000000000))*(pp));
IkReal x124=((IkReal(-0.000200000000000000))*(r11));
IkReal x125=((IkReal(-0.000100000000000000))+(((IkReal(-1.00000000000000))*(x71)))+(py));
IkReal x126=((pz)*(x120));
IkReal x127=((npx)*(x101));
IkReal x128=((IkReal(1.00000000000000))*(x99));
IkReal x129=((px)*(x122));
IkReal x130=((r01)*(x123));
IkReal x131=((r21)*(x123));
IkReal x132=((pz)*(x122));
IkReal x133=((IkReal(1.00000000000000))*(x86));
IkReal x134=((((IkReal(-1.00000000000000))*(x101)))+(x100));
IkReal x135=((IkReal(4.00000000000000))*(npx)*(py));
IkReal x136=((r10)*(x123));
IkReal x137=((IkReal(8.00000000000000))*(npy)*(py));
IkReal x138=((IkReal(4.00000000000000))*(pp)*(r11));
IkReal x139=((IkReal(3.31621915422235e-8))+(x75));
IkReal x140=((IkReal(-0.000100000000000000))+(x71));
IkReal x141=((IkReal(3.31621915422235e-8))+(x99));
IkReal x142=((x140)+(py));
IkReal x143=((((IkReal(-1.00000000000000))*(x101)))+(((IkReal(-1.00000000000000))*(x100))));
IkReal x144=((x110)+(x109));
IkReal x145=((x108)+(x107));
IkReal x146=((IkReal(-0.000100000000000000))+(((IkReal(-1.00000000000000))*(x71)))+(((IkReal(-1.00000000000000))*(x118))));
IkReal x147=((((IkReal(-1.00000000000000))*(x118)))+(x140));
IkReal x148=((x93)+(x94));
IkReal x149=((x95)+(x96));
IkReal x150=((x76)+(x78));
IkReal x151=((x117)+(x116));
IkReal x152=((x105)+(x106));
IkReal x153=((x82)+(x81));
IkReal x154=((x113)+(x111));
IkReal x155=((x73)+(x72));
IkReal x156=((x88)+(x89));
IkReal x157=((x86)+(x84));
IkReal x158=((x115)+(x114));
IkReal x159=((x84)+(x85));
IkReal x160=((x91)+(x92));
IkReal x161=((x79)+(x80));
IkReal x162=((x132)+(x98));
IkReal x163=((x128)+(x77));
IkReal x164=((x126)+(x74));
IkReal x165=((x135)+(x103));
IkReal x166=((x137)+(x112));
IkReal x167=((x127)+(x83));
IkReal x168=((x129)+(x90));
IkReal x169=((x136)+(x104));
IkReal x170=((x131)+(x97));
IkReal x171=((x155)+(x75));
IkReal x172=((x161)+(x85));
IkReal x173=((x161)+(x84));
IkReal x174=((x160)+(x130));
IkReal x175=((x144)+(x145));
IkReal x176=((x164)+(x150)+(x77));
op[0]=x142;
op[1]=IkReal(0);
op[2]=x124;
op[3]=IkReal(0);
op[4]=x125;
op[5]=IkReal(0);
op[6]=IkReal(0);
op[7]=x142;
op[8]=IkReal(0);
op[9]=x124;
op[10]=IkReal(0);
op[11]=x125;
op[12]=((((IkReal(-1.00000000000000))*(x155)))+(((IkReal(-1.00000000000000))*(x164)))+(((IkReal(-1.00000000000000))*(x77)))+(x150)+(x139)+(x99));
op[13]=((IkReal(1.01533623487302e-6))+(((IkReal(-1.00000000000000))*(x153)))+(((IkReal(-1.00000000000000))*(x167)))+(((IkReal(-1.00000000000000))*(x172)))+(x157));
op[14]=((((IkReal(-1.00000000000000))*(x149)))+(((IkReal(-1.00000000000000))*(x170)))+(x162)+(x148));
op[15]=((x168)+(x160)+(x156)+(((IkReal(-1.00000000000000))*(x130)))+(((IkReal(-1.00000000000000))*(x87))));
op[16]=((IkReal(3.31621915422235e-8))+(((IkReal(-1.00000000000000))*(x150)))+(((IkReal(-1.00000000000000))*(x163)))+(((IkReal(-1.00000000000000))*(x75)))+(x164)+(x155));
op[17]=((IkReal(1.01533623487302e-6))+(((IkReal(-1.00000000000000))*(x159)))+(x161)+(x167)+(x153)+(((IkReal(-1.00000000000000))*(x133))));
op[18]=((IkReal(-1.01533623487302e-6))+(((IkReal(-1.00000000000000))*(x153)))+(((IkReal(-1.00000000000000))*(x159)))+(((IkReal(-1.00000000000000))*(x167)))+(x161)+(x86));
op[19]=((((IkReal(-1.00000000000000))*(x150)))+(((IkReal(-1.00000000000000))*(x155)))+(((IkReal(-1.00000000000000))*(x128)))+(x164)+(x139)+(x77));
op[20]=((((IkReal(-1.00000000000000))*(x174)))+(x168)+(x156)+(x87));
op[21]=((((IkReal(-1.00000000000000))*(x162)))+(x148)+(x149)+(x131)+(((IkReal(-1.00000000000000))*(x97))));
op[22]=((IkReal(-1.01533623487302e-6))+(((IkReal(-1.00000000000000))*(x172)))+(x167)+(x153)+(((IkReal(-1.00000000000000))*(x133)))+(x84));
op[23]=((((IkReal(-1.00000000000000))*(x164)))+(((IkReal(-1.00000000000000))*(x75)))+(x155)+(x150)+(x141)+(x77));
op[24]=x143;
op[25]=IkReal(0);
op[26]=x102;
op[27]=IkReal(0);
op[28]=x134;
op[29]=IkReal(0);
op[30]=IkReal(0);
op[31]=x143;
op[32]=IkReal(0);
op[33]=x102;
op[34]=IkReal(0);
op[35]=x134;
op[36]=x175;
op[37]=((((IkReal(-1.00000000000000))*(x165)))+(((IkReal(-1.00000000000000))*(x104)))+(x152)+(x136));
op[38]=((((IkReal(-1.00000000000000))*(x151)))+(((IkReal(-1.00000000000000))*(x158))));
op[39]=((((IkReal(-1.00000000000000))*(x154)))+(x166)+(((IkReal(-1.00000000000000))*(x138))));
op[40]=((IkReal(-1.00000000000000))*(x175));
op[41]=((((IkReal(-1.00000000000000))*(x152)))+(((IkReal(-1.00000000000000))*(x169)))+(x165));
op[42]=((((IkReal(-1.00000000000000))*(x152)))+(((IkReal(-1.00000000000000))*(x165)))+(((IkReal(-1.00000000000000))*(x104)))+(x136));
op[43]=((((IkReal(-1.00000000000000))*(x144)))+(x145));
op[44]=((x166)+(x154)+(((IkReal(-1.00000000000000))*(x138))));
op[45]=((((IkReal(-1.00000000000000))*(x151)))+(x158));
op[46]=((((IkReal(-1.00000000000000))*(x169)))+(x165)+(x152));
op[47]=((((IkReal(-1.00000000000000))*(x145)))+(x144));
op[48]=x146;
op[49]=IkReal(0);
op[50]=x119;
op[51]=IkReal(0);
op[52]=x147;
op[53]=IkReal(0);
op[54]=IkReal(0);
op[55]=x146;
op[56]=IkReal(0);
op[57]=x119;
op[58]=IkReal(0);
op[59]=x147;
op[60]=((((IkReal(-1.00000000000000))*(x176)))+(x155)+(x139)+(x99));
op[61]=((IkReal(1.01533623487302e-6))+(((IkReal(-1.00000000000000))*(x153)))+(x161)+(x167)+(x159)+(((IkReal(-1.00000000000000))*(x133))));
op[62]=((((IkReal(-1.00000000000000))*(x148)))+(((IkReal(-1.00000000000000))*(x170)))+(x162)+(x149));
op[63]=((((IkReal(-1.00000000000000))*(x168)))+(((IkReal(-1.00000000000000))*(x160)))+(x156)+(x130)+(((IkReal(-1.00000000000000))*(x87))));
op[64]=((IkReal(3.31621915422235e-8))+(((IkReal(-1.00000000000000))*(x163)))+(((IkReal(-1.00000000000000))*(x171)))+(x164)+(x150));
op[65]=((IkReal(1.01533623487302e-6))+(((IkReal(-1.00000000000000))*(x167)))+(((IkReal(-1.00000000000000))*(x173)))+(x153)+(x86)+(x85));
op[66]=((IkReal(-1.01533623487302e-6))+(((IkReal(-1.00000000000000))*(x153)))+(((IkReal(-1.00000000000000))*(x173)))+(x167)+(((IkReal(-1.00000000000000))*(x133)))+(x85));
op[67]=((((IkReal(-1.00000000000000))*(x128)))+(x176)+(x155)+(x139));
op[68]=((((IkReal(-1.00000000000000))*(x168)))+(x174)+(x156)+(x87));
op[69]=((((IkReal(-1.00000000000000))*(x149)))+(((IkReal(-1.00000000000000))*(x148)))+(((IkReal(-1.00000000000000))*(x162)))+(x131)+(((IkReal(-1.00000000000000))*(x97))));
op[70]=((IkReal(-1.01533623487302e-6))+(((IkReal(-1.00000000000000))*(x167)))+(x172)+(x157)+(x153));
op[71]=((((IkReal(-1.00000000000000))*(x150)))+(((IkReal(-1.00000000000000))*(x164)))+(((IkReal(-1.00000000000000))*(x171)))+(x141)+(x77));
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j0array[16], cj0array[16], sj0array[16], j6array[16], cj6array[16], sj6array[16], j1array[16], cj1array[16], sj1array[16];
int numsolutions = 0;
for(int ij0 = 0; ij0 < numroots; ij0 += 3)
{
IkReal htj0 = zeror[ij0+0], htj6 = zeror[ij0+1], htj1 = zeror[ij0+2];
j0array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj0)));
j6array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj6)));
j1array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj1)));
IkReal x177=(htj0)*(htj0);
IkReal x178=(htj6)*(htj6);
IkReal x179=(htj1)*(htj1);
cj0array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x177))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x177)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x177))))));
cj6array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x178))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x178)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x178))))));
cj1array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x179))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x179)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x179))))));
sj0array[numsolutions]=((IkReal(2.00000000000000))*(htj0)*(((IKabs(((IkReal(1.00000000000000))+((htj0)*(htj0)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj0)*(htj0))))):(IkReal)1.0e30)));
sj6array[numsolutions]=((IkReal(2.00000000000000))*(htj6)*(((IKabs(((IkReal(1.00000000000000))+((htj6)*(htj6)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj6)*(htj6))))):(IkReal)1.0e30)));
sj1array[numsolutions]=((IkReal(2.00000000000000))*(htj1)*(((IKabs(((IkReal(1.00000000000000))+((htj1)*(htj1)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj1)*(htj1))))):(IkReal)1.0e30)));
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j0valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj0 = 16;
_nj6 = 1;
_nj1 = 1;
for(int ij0 = 0; ij0 < numsolutions; ++ij0)
    {
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
_ij6[0] = 0; _ij6[1] = -1;
_ij1[0] = 0; _ij1[1] = -1;
for(int iij0 = ij0+1; iij0 < numsolutions; ++iij0)
{
if( !j0valid[iij0] ) { continue; }
if( IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj6array[ij0]-cj6array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij0]-sj6array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj1array[ij0]-cj1array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij0]-sj1array[iij0]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j0valid[iij0]=false; _ij0[1] = iij0; _ij6[1] = 0; _ij1[1] = 0;  break; 
}
}
    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

    j6 = j6array[ij0]; cj6 = cj6array[ij0]; sj6 = sj6array[ij0];

    j1 = j1array[ij0]; cj1 = cj1array[ij0]; sj1 = sj1array[ij0];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(((((IkReal(0.0615696100000000))*((cj1)*(cj1))))+(((IkReal(0.0615696100000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal j4array[2], cj4array[2], sj4array[2];
bool j4valid[2]={false};
_nj4 = 2;
cj4array[0]=((((r01)*(sj0)*(sj6)))+(((cj0)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj0))));
if( cj4array[0] >= -1-IKFAST_SINCOS_THRESH && cj4array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j4valid[0] = j4valid[1] = true;
    j4array[0] = IKacos(cj4array[0]);
    sj4array[0] = IKsin(j4array[0]);
    cj4array[1] = cj4array[0];
    j4array[1] = -j4array[0];
    sj4array[1] = -sj4array[0];
}
else if( isnan(cj4array[0]) )
{
    // probably any value will work
    j4valid[0] = true;
    cj4array[0] = 1; sj4array[0] = 0; j4array[0] = 0;
}
for(int ij4 = 0; ij4 < 2; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 2; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x180=(cj6)*(cj6);
IkReal x181=(cj0)*(cj0);
IkReal x182=(sj0)*(sj0);
IkReal x183=(sj6)*(sj6);
IkReal x184=((IkReal(2.00000000000000))*(r11));
IkReal x185=((cj0)*(sj0));
IkReal x186=((cj6)*(sj6));
IkReal x187=((IkReal(2.00000000000000))*(r01));
IkReal x188=((IkReal(1.00000000000000))*(x181));
IkReal x189=((IkReal(1.00000000000000))*(x182));
gconst3=IKsign(((((IkReal(-1.00000000000000))*(x189)*((r02)*(r02))))+(((r10)*(x185)*(x186)*(x187)))+(((IkReal(-1.00000000000000))*(x183)*(x188)*((r10)*(r10))))+(((r00)*(x184)*(x185)*(x186)))+(((r01)*(x180)*(x184)*(x185)))+(((IkReal(-1.00000000000000))*(r10)*(x181)*(x184)*(x186)))+(((IkReal(-1.00000000000000))*(x180)*(x189)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x188)*((r12)*(r12))))+(((IkReal(-1.00000000000000))*(x183)*(x189)*((r00)*(r00))))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x183)*(x185)))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x185)))+(((IkReal(-1.00000000000000))*(r00)*(x182)*(x186)*(x187)))+(((IkReal(-1.00000000000000))*(x180)*(x188)*((r11)*(r11))))));
IkReal x190=(cj6)*(cj6);
IkReal x191=(cj0)*(cj0);
IkReal x192=(sj0)*(sj0);
IkReal x193=(sj6)*(sj6);
IkReal x194=((IkReal(2.00000000000000))*(r11));
IkReal x195=((cj0)*(sj0));
IkReal x196=((cj6)*(sj6));
IkReal x197=((IkReal(2.00000000000000))*(r01));
IkReal x198=((IkReal(1.00000000000000))*(x191));
IkReal x199=((IkReal(1.00000000000000))*(x192));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(x192)*(x196)*(x197)))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x193)*(x195)))+(((IkReal(-1.00000000000000))*(x190)*(x199)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x198)*((r12)*(r12))))+(((r10)*(x195)*(x196)*(x197)))+(((IkReal(-1.00000000000000))*(x193)*(x198)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x193)*(x199)*((r00)*(r00))))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x195)))+(((r01)*(x190)*(x194)*(x195)))+(((IkReal(-1.00000000000000))*(x199)*((r02)*(r02))))+(((r00)*(x194)*(x195)*(x196)))+(((IkReal(-1.00000000000000))*(r10)*(x191)*(x194)*(x196)))+(((IkReal(-1.00000000000000))*(x190)*(x198)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x200=((IkReal(0.248000000000000))*(sj4));
gconst1=IKsign(((((x200)*((sj1)*(sj1))))+(((x200)*((cj1)*(cj1))))));
dummyeval[0]=((((sj4)*((sj1)*(sj1))))+(((sj4)*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x201=(sj4)*(sj4);
gconst2=IKsign(((((x201)*((sj1)*(sj1))))+(((x201)*((cj1)*(cj1))))));
IkReal x202=(sj4)*(sj4);
dummyeval[0]=((((x202)*((cj1)*(cj1))))+(((x202)*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x203=((cj6)*(r10));
IkReal x204=((IkReal(1.00000000000000))*(cj0));
IkReal x205=((sj0)*(sj6));
IkReal x206=((cj6)*(r00));
IkReal x207=((IkReal(0.000100000000000000))*(cj0));
IkReal x208=((r11)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((sj0)*(x206)))+(((IkReal(-1.00000000000000))*(x203)*(x204)))+(((IkReal(-1.00000000000000))*(r01)*(x205)))+(((cj0)*(x208))));
evalcond[2]=((IkReal(0.000100000000000000))+(((IkReal(-1.00000000000000))*(x203)*(x207)))+(((IkReal(-1.00000000000000))*(py)*(x204)))+(((IkReal(-0.000100000000000000))*(r01)*(x205)))+(((px)*(sj0)))+(((IkReal(0.000100000000000000))*(sj0)*(x206)))+(((x207)*(x208))));
evalcond[3]=((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6))));
evalcond[4]=((((sj0)*(x203)))+(((cj0)*(x206)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x204)))+(((IkReal(-1.00000000000000))*(r11)*(x205))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(((((IkReal(0.0615696100000000))*((cj1)*(cj1))))+(((IkReal(0.0615696100000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x209=((IkReal(1.00000000000000))*(cj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r12)*(x209)))+(((r02)*(sj0))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r00)*(sj0)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x209)))+(((cj6)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x209))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x210=IKatan2(((((IkReal(-1.00000000000000))*(r12)*(x209)))+(((r02)*(sj0)))), ((((r00)*(sj0)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x209)))+(((cj6)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x209)))));
j5array[0]=((IkReal(-1.00000000000000))*(x210));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x210))));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x211=IKcos(j5);
IkReal x212=IKsin(j5);
IkReal x213=((IkReal(1.00000000000000))*(cj0));
IkReal x214=((cj6)*(x211));
IkReal x215=((sj6)*(x211));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x213)*(x214)))+(((IkReal(-1.00000000000000))*(r10)*(x213)*(x215)))+(((r01)*(sj0)*(x214)))+(((cj0)*(r12)*(x212)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x212)))+(((r00)*(sj0)*(x215))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((IkReal(0.00810000000000000))*((cj1)*(cj1))))+(((IkReal(0.00810000000000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x216=(cj1)*(cj1);
IkReal x217=((cj1)*(sj1));
IkReal x218=((cj6)*(r20));
IkReal x219=((IkReal(5.49798603375872e-6))*(sj1));
IkReal x220=((IkReal(0.0549798603375872))*(pz));
IkReal x221=((cj1)*(r21));
IkReal x222=((IkReal(0.0217227538188447))*(sj5));
IkReal x223=((IkReal(0.998487463595442))*(pz));
IkReal x224=((r20)*(sj6));
IkReal x225=((cj6)*(r21));
IkReal x226=((IkReal(0.247179554102935))*(sj5));
IkReal x227=((IkReal(9.98487463595442e-5))*(r21)*(sj6));
IkReal x228=((cj5)*(r22)*(sj1));
IkReal x229=((sj1)*(x226));
IkReal x230=((cj1)*(cj5)*(r22));
if( IKabs(((gconst13)*(((((x218)*(x219)))+(((IkReal(0.247179554102935))*(x230)))+(((IkReal(9.98487463595442e-5))*(sj6)*(x221)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x219)))+(((sj1)*(x220)))+(((cj1)*(x224)*(x226)))+(((IkReal(-1.00000000000000))*(cj1)*(x223)))+(((IkReal(-0.0217227538188447))*(x228)))+(((cj6)*(x221)*(x226)))+(((IkReal(0.155364649335451))*(x216)))+(((IkReal(-0.00855486626852856))*(x217)))+(((IkReal(-9.98487463595442e-5))*(cj1)*(x218)))+(((IkReal(-1.00000000000000))*(sj1)*(x222)*(x224)))+(((IkReal(-1.00000000000000))*(sj1)*(x222)*(x225))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((x224)*(x229)))+(((IkReal(-9.98487463595442e-5))*(sj1)*(x218)))+(((IkReal(0.00855486626852856))*(x216)))+(((x225)*(x229)))+(((IkReal(0.247179554102935))*(x228)))+(((IkReal(5.49798603375872e-6))*(sj6)*(x221)))+(((sj1)*(x227)))+(((IkReal(-5.49798603375872e-6))*(cj1)*(x218)))+(((cj1)*(x222)*(x224)))+(((IkReal(-1.00000000000000))*(sj1)*(x223)))+(((IkReal(-1.00000000000000))*(cj1)*(x220)))+(((cj6)*(x221)*(x222)))+(((IkReal(0.155364649335451))*(x217)))+(((IkReal(0.0217227538188447))*(x230))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst13)*(((((x218)*(x219)))+(((IkReal(0.247179554102935))*(x230)))+(((IkReal(9.98487463595442e-5))*(sj6)*(x221)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x219)))+(((sj1)*(x220)))+(((cj1)*(x224)*(x226)))+(((IkReal(-1.00000000000000))*(cj1)*(x223)))+(((IkReal(-0.0217227538188447))*(x228)))+(((cj6)*(x221)*(x226)))+(((IkReal(0.155364649335451))*(x216)))+(((IkReal(-0.00855486626852856))*(x217)))+(((IkReal(-9.98487463595442e-5))*(cj1)*(x218)))+(((IkReal(-1.00000000000000))*(sj1)*(x222)*(x224)))+(((IkReal(-1.00000000000000))*(sj1)*(x222)*(x225)))))), ((gconst13)*(((((x224)*(x229)))+(((IkReal(-9.98487463595442e-5))*(sj1)*(x218)))+(((IkReal(0.00855486626852856))*(x216)))+(((x225)*(x229)))+(((IkReal(0.247179554102935))*(x228)))+(((IkReal(5.49798603375872e-6))*(sj6)*(x221)))+(((sj1)*(x227)))+(((IkReal(-5.49798603375872e-6))*(cj1)*(x218)))+(((cj1)*(x222)*(x224)))+(((IkReal(-1.00000000000000))*(sj1)*(x223)))+(((IkReal(-1.00000000000000))*(cj1)*(x220)))+(((cj6)*(x221)*(x222)))+(((IkReal(0.155364649335451))*(x217)))+(((IkReal(0.0217227538188447))*(x230)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x231=IKsin(j3);
IkReal x232=IKcos(j3);
IkReal x233=((IkReal(0.000100000000000000))*(cj0));
IkReal x234=((sj0)*(sj5));
IkReal x235=((cj6)*(r11));
IkReal x236=((r10)*(sj6));
IkReal x237=((cj5)*(cj6));
IkReal x238=((cj5)*(sj0));
IkReal x239=((IkReal(0.247179554102935))*(cj1));
IkReal x240=((IkReal(1.00000000000000))*(sj5));
IkReal x241=((IkReal(0.000100000000000000))*(sj6));
IkReal x242=((r20)*(sj6));
IkReal x243=((cj0)*(r02));
IkReal x244=((cj0)*(r01));
IkReal x245=((IkReal(0.000100000000000000))*(cj6));
IkReal x246=((cj6)*(sj5));
IkReal x247=((sj1)*(x231));
IkReal x248=((cj0)*(r00)*(sj6));
IkReal x249=((cj1)*(x231));
IkReal x250=((cj1)*(x232));
IkReal x251=((sj1)*(x232));
IkReal x252=((IkReal(0.0549798603375872))*(x247));
IkReal x253=((IkReal(0.998487463595442))*(x249));
IkReal x254=((IkReal(0.998487463595442))*(x251));
IkReal x255=((IkReal(0.0549798603375872))*(x250));
IkReal x256=((IkReal(0.998487463595442))*(x250));
IkReal x257=((IkReal(0.998487463595442))*(x247));
IkReal x258=((IkReal(0.0549798603375872))*(x249));
IkReal x259=((IkReal(0.0549798603375872))*(x251));
IkReal x260=((x254)+(x255)+(x253));
IkReal x261=((x258)+(x259)+(x257));
evalcond[0]=((((IkReal(0.0217227538188447))*(x249)))+(((IkReal(-0.155600000000000))*(cj1)))+(pz)+(((IkReal(0.247179554102935))*(x247)))+(((IkReal(-1.00000000000000))*(r21)*(x241)))+(((IkReal(-1.00000000000000))*(x232)*(x239)))+(((r20)*(x245)))+(((IkReal(0.0217227538188447))*(x251))));
evalcond[1]=((((cj5)*(r22)))+(((sj5)*(x242)))+(x261)+(((r21)*(x246)))+(((IkReal(-1.00000000000000))*(x256))));
evalcond[2]=((((cj5)*(x242)))+(x252)+(((IkReal(-1.00000000000000))*(r22)*(x240)))+(((IkReal(-1.00000000000000))*(x260)))+(((r21)*(x237))));
evalcond[3]=((((cj6)*(r00)*(x233)))+(((IkReal(0.0217227538188447))*(x247)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x241)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(x231)*(x239)))+(((IkReal(-0.247179554102935))*(x251)))+(((IkReal(-0.0217227538188447))*(x250)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x233)))+(((cj0)*(px)))+(((py)*(sj0)))+(((r10)*(sj0)*(x245))));
evalcond[4]=((((x234)*(x235)))+(((x234)*(x236)))+(((sj5)*(x248)))+(((cj5)*(x243)))+(((x244)*(x246)))+(x252)+(((IkReal(-1.00000000000000))*(x260)))+(((r12)*(x238))));
evalcond[5]=((((x237)*(x244)))+(((cj5)*(x248)))+(x256)+(((x235)*(x238)))+(((IkReal(-1.00000000000000))*(r12)*(x234)))+(((IkReal(-1.00000000000000))*(x240)*(x243)))+(((IkReal(-1.00000000000000))*(x261)))+(((x236)*(x238))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x262=((cj1)*(r22));
IkReal x263=((IkReal(0.998487463595442))*(cj5));
IkReal x264=((IkReal(0.0549798603375872))*(sj5));
IkReal x265=((IkReal(0.998487463595442))*(sj5));
IkReal x266=((r22)*(sj1));
IkReal x267=((IkReal(0.0549798603375872))*(cj5));
IkReal x268=((cj1)*(r20)*(sj6));
IkReal x269=((cj1)*(cj6)*(r21));
IkReal x270=((cj6)*(r21)*(sj1));
IkReal x271=((r20)*(sj1)*(sj6));
if( IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x262)*(x265)))+(((IkReal(-1.00000000000000))*(x262)*(x267)))+(((IkReal(-1.00000000000000))*(x263)*(x266)))+(((x264)*(x266)))+(((x263)*(x269)))+(((x263)*(x268)))+(((IkReal(-1.00000000000000))*(x265)*(x270)))+(((IkReal(-1.00000000000000))*(x265)*(x271)))+(((IkReal(-1.00000000000000))*(x267)*(x271)))+(((IkReal(-1.00000000000000))*(x267)*(x270)))+(((IkReal(-1.00000000000000))*(x264)*(x268)))+(((IkReal(-1.00000000000000))*(x264)*(x269))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x262)*(x264)))+(((x267)*(x268)))+(((x267)*(x269)))+(((x262)*(x263)))+(((x263)*(x271)))+(((x263)*(x270)))+(((IkReal(-1.00000000000000))*(x265)*(x266)))+(((IkReal(-1.00000000000000))*(x266)*(x267)))+(((x265)*(x268)))+(((x265)*(x269)))+(((IkReal(-1.00000000000000))*(x264)*(x271)))+(((IkReal(-1.00000000000000))*(x264)*(x270))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst14)*(((((IkReal(-1.00000000000000))*(x262)*(x265)))+(((IkReal(-1.00000000000000))*(x262)*(x267)))+(((IkReal(-1.00000000000000))*(x263)*(x266)))+(((x264)*(x266)))+(((x263)*(x269)))+(((x263)*(x268)))+(((IkReal(-1.00000000000000))*(x265)*(x270)))+(((IkReal(-1.00000000000000))*(x265)*(x271)))+(((IkReal(-1.00000000000000))*(x267)*(x271)))+(((IkReal(-1.00000000000000))*(x267)*(x270)))+(((IkReal(-1.00000000000000))*(x264)*(x268)))+(((IkReal(-1.00000000000000))*(x264)*(x269)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(x262)*(x264)))+(((x267)*(x268)))+(((x267)*(x269)))+(((x262)*(x263)))+(((x263)*(x271)))+(((x263)*(x270)))+(((IkReal(-1.00000000000000))*(x265)*(x266)))+(((IkReal(-1.00000000000000))*(x266)*(x267)))+(((x265)*(x268)))+(((x265)*(x269)))+(((IkReal(-1.00000000000000))*(x264)*(x271)))+(((IkReal(-1.00000000000000))*(x264)*(x270)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x272=IKsin(j3);
IkReal x273=IKcos(j3);
IkReal x274=((IkReal(0.000100000000000000))*(cj0));
IkReal x275=((sj0)*(sj5));
IkReal x276=((cj6)*(r11));
IkReal x277=((r10)*(sj6));
IkReal x278=((cj5)*(cj6));
IkReal x279=((cj5)*(sj0));
IkReal x280=((IkReal(0.247179554102935))*(cj1));
IkReal x281=((IkReal(1.00000000000000))*(sj5));
IkReal x282=((IkReal(0.000100000000000000))*(sj6));
IkReal x283=((r20)*(sj6));
IkReal x284=((cj0)*(r02));
IkReal x285=((cj0)*(r01));
IkReal x286=((IkReal(0.000100000000000000))*(cj6));
IkReal x287=((cj6)*(sj5));
IkReal x288=((sj1)*(x272));
IkReal x289=((cj0)*(r00)*(sj6));
IkReal x290=((cj1)*(x272));
IkReal x291=((cj1)*(x273));
IkReal x292=((sj1)*(x273));
IkReal x293=((IkReal(0.0549798603375872))*(x288));
IkReal x294=((IkReal(0.998487463595442))*(x290));
IkReal x295=((IkReal(0.998487463595442))*(x292));
IkReal x296=((IkReal(0.0549798603375872))*(x291));
IkReal x297=((IkReal(0.998487463595442))*(x291));
IkReal x298=((IkReal(0.998487463595442))*(x288));
IkReal x299=((IkReal(0.0549798603375872))*(x290));
IkReal x300=((IkReal(0.0549798603375872))*(x292));
IkReal x301=((x294)+(x295)+(x296));
IkReal x302=((x300)+(x298)+(x299));
evalcond[0]=((((IkReal(0.0217227538188447))*(x290)))+(((IkReal(0.0217227538188447))*(x292)))+(((IkReal(-1.00000000000000))*(r21)*(x282)))+(((IkReal(-0.155600000000000))*(cj1)))+(pz)+(((IkReal(-1.00000000000000))*(x273)*(x280)))+(((IkReal(0.247179554102935))*(x288)))+(((r20)*(x286))));
evalcond[1]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x297)))+(((r21)*(x287)))+(x302)+(((sj5)*(x283))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r22)*(x281)))+(((r21)*(x278)))+(x293)+(((IkReal(-1.00000000000000))*(x301)))+(((cj5)*(x283))));
evalcond[3]=((((r10)*(sj0)*(x286)))+(((cj6)*(r00)*(x274)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x282)))+(((IkReal(0.0217227538188447))*(x288)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x274)))+(((IkReal(-0.247179554102935))*(x292)))+(((IkReal(-1.00000000000000))*(x272)*(x280)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(-0.0217227538188447))*(x291))));
evalcond[4]=((((x275)*(x277)))+(((x275)*(x276)))+(((x285)*(x287)))+(x293)+(((sj5)*(x289)))+(((r12)*(x279)))+(((IkReal(-1.00000000000000))*(x301)))+(((cj5)*(x284))));
evalcond[5]=((((x278)*(x285)))+(((IkReal(-1.00000000000000))*(r12)*(x275)))+(((IkReal(-1.00000000000000))*(x281)*(x284)))+(x297)+(((x277)*(x279)))+(((x276)*(x279)))+(((IkReal(-1.00000000000000))*(x302)))+(((cj5)*(x289))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x303=(sj1)*(sj1);
IkReal x304=(cj1)*(cj1);
IkReal x305=((IkReal(0.0217227538188447))*(sj1));
IkReal x306=((cj0)*(cj1));
IkReal x307=((IkReal(0.247179554102935))*(px));
IkReal x308=((sj1)*(sj6));
IkReal x309=((IkReal(2.17227538188447e-6))*(cj0));
IkReal x310=((IkReal(2.47179554102935e-5))*(cj1));
IkReal x311=((r21)*(sj6));
IkReal x312=((py)*(sj0));
IkReal x313=((cj6)*(sj1));
IkReal x314=((cj6)*(r20));
IkReal x315=((IkReal(2.17227538188447e-6))*(cj1));
IkReal x316=((r10)*(sj0));
IkReal x317=((cj6)*(r00));
IkReal x318=((IkReal(0.247179554102935))*(sj1));
IkReal x319=((cj1)*(pz));
IkReal x320=((r01)*(sj6));
IkReal x321=((IkReal(2.47179554102935e-5))*(cj0));
IkReal x322=((IkReal(2.47179554102935e-5))*(r11)*(sj0));
IkReal x323=((IkReal(2.17227538188447e-6))*(r11)*(sj0)*(sj6));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj6)*(x310)))+(((cj6)*(x310)*(x316)))+(((IkReal(-2.47179554102935e-5))*(x306)*(x320)))+(((IkReal(2.47179554102935e-5))*(r21)*(x308)))+(((IkReal(-2.47179554102935e-5))*(r20)*(x313)))+(((IkReal(-1.00000000000000))*(cj0)*(px)*(x305)))+(((IkReal(0.247179554102935))*(cj1)*(x312)))+(((r01)*(x308)*(x309)))+(((IkReal(0.00338006049421224))*(x304)))+(((IkReal(0.00338006049421224))*(x303)))+(((IkReal(-1.00000000000000))*(x305)*(x312)))+(((IkReal(-0.0217227538188447))*(x319)))+(((x311)*(x315)))+(((IkReal(-1.00000000000000))*(pz)*(x318)))+(((IkReal(-1.00000000000000))*(r00)*(x309)*(x313)))+(((IkReal(-1.00000000000000))*(x314)*(x315)))+(((IkReal(-2.17227538188447e-6))*(x313)*(x316)))+(((IkReal(2.47179554102935e-5))*(x306)*(x317)))+(((IkReal(2.17227538188447e-6))*(r11)*(sj0)*(x308)))+(((x306)*(x307))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj6)*(x315)))+(((x310)*(x314)))+(((IkReal(-1.00000000000000))*(x310)*(x311)))+(((r00)*(x313)*(x321)))+(((x312)*(x318)))+(((IkReal(0.0217227538188447))*(px)*(x306)))+(((IkReal(2.17227538188447e-6))*(x306)*(x317)))+(((IkReal(-2.17227538188447e-6))*(x306)*(x320)))+(((IkReal(2.47179554102935e-5))*(x313)*(x316)))+(((IkReal(-1.00000000000000))*(pz)*(x305)))+(((IkReal(-0.0384611386184167))*(x304)))+(((IkReal(-0.0384611386184167))*(x303)))+(((IkReal(-1.00000000000000))*(x308)*(x322)))+(((cj6)*(x315)*(x316)))+(((cj0)*(sj1)*(x307)))+(((IkReal(0.247179554102935))*(x319)))+(((IkReal(2.17227538188447e-6))*(r21)*(x308)))+(((IkReal(-2.17227538188447e-6))*(r20)*(x313)))+(((IkReal(-1.00000000000000))*(r01)*(x308)*(x321)))+(((IkReal(0.0217227538188447))*(cj1)*(x312))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj6)*(x310)))+(((cj6)*(x310)*(x316)))+(((IkReal(-2.47179554102935e-5))*(x306)*(x320)))+(((IkReal(2.47179554102935e-5))*(r21)*(x308)))+(((IkReal(-2.47179554102935e-5))*(r20)*(x313)))+(((IkReal(-1.00000000000000))*(cj0)*(px)*(x305)))+(((IkReal(0.247179554102935))*(cj1)*(x312)))+(((r01)*(x308)*(x309)))+(((IkReal(0.00338006049421224))*(x304)))+(((IkReal(0.00338006049421224))*(x303)))+(((IkReal(-1.00000000000000))*(x305)*(x312)))+(((IkReal(-0.0217227538188447))*(x319)))+(((x311)*(x315)))+(((IkReal(-1.00000000000000))*(pz)*(x318)))+(((IkReal(-1.00000000000000))*(r00)*(x309)*(x313)))+(((IkReal(-1.00000000000000))*(x314)*(x315)))+(((IkReal(-2.17227538188447e-6))*(x313)*(x316)))+(((IkReal(2.47179554102935e-5))*(x306)*(x317)))+(((IkReal(2.17227538188447e-6))*(r11)*(sj0)*(x308)))+(((x306)*(x307)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj6)*(x315)))+(((x310)*(x314)))+(((IkReal(-1.00000000000000))*(x310)*(x311)))+(((r00)*(x313)*(x321)))+(((x312)*(x318)))+(((IkReal(0.0217227538188447))*(px)*(x306)))+(((IkReal(2.17227538188447e-6))*(x306)*(x317)))+(((IkReal(-2.17227538188447e-6))*(x306)*(x320)))+(((IkReal(2.47179554102935e-5))*(x313)*(x316)))+(((IkReal(-1.00000000000000))*(pz)*(x305)))+(((IkReal(-0.0384611386184167))*(x304)))+(((IkReal(-0.0384611386184167))*(x303)))+(((IkReal(-1.00000000000000))*(x308)*(x322)))+(((cj6)*(x315)*(x316)))+(((cj0)*(sj1)*(x307)))+(((IkReal(0.247179554102935))*(x319)))+(((IkReal(2.17227538188447e-6))*(r21)*(x308)))+(((IkReal(-2.17227538188447e-6))*(r20)*(x313)))+(((IkReal(-1.00000000000000))*(r01)*(x308)*(x321)))+(((IkReal(0.0217227538188447))*(cj1)*(x312)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x324=IKsin(j3);
IkReal x325=IKcos(j3);
IkReal x326=((IkReal(0.000100000000000000))*(cj6));
IkReal x327=((IkReal(0.000100000000000000))*(sj6));
IkReal x328=((cj1)*(x325));
IkReal x329=((sj1)*(x324));
IkReal x330=((sj1)*(x325));
IkReal x331=((cj1)*(x324));
evalcond[0]=((((IkReal(0.0217227538188447))*(x331)))+(((IkReal(0.0217227538188447))*(x330)))+(((r20)*(x326)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(0.247179554102935))*(x329)))+(pz)+(((IkReal(-0.247179554102935))*(x328)))+(((IkReal(-1.00000000000000))*(r21)*(x327))));
evalcond[1]=((((cj0)*(r00)*(x326)))+(((IkReal(-0.247179554102935))*(x331)))+(((IkReal(-0.247179554102935))*(x330)))+(((IkReal(0.0217227538188447))*(x329)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x327)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-0.0217227538188447))*(x328)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x327)))+(((r10)*(sj0)*(x326)))+(((cj0)*(px)))+(((py)*(sj0))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst15;
IkReal x332=((r20)*(sj6));
IkReal x333=((cj0)*(r12));
IkReal x334=((r22)*(sj0));
IkReal x335=((cj6)*(r21));
IkReal x336=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x337=((IkReal(1.00000000000000))*(r02)*(sj0));
gconst15=IKsign(((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x336)))+(((x332)*(x333)))+(((cj6)*(r01)*(x334)))+(((r00)*(sj6)*(x334)))+(((x333)*(x335)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x336)))+(((IkReal(-1.00000000000000))*(x332)*(x337)))+(((IkReal(-1.00000000000000))*(x335)*(x337)))));
IkReal x338=((r20)*(sj6));
IkReal x339=((cj0)*(r12));
IkReal x340=((r22)*(sj0));
IkReal x341=((cj6)*(r21));
IkReal x342=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x343=((IkReal(1.00000000000000))*(r02)*(sj0));
dummyeval[0]=((((cj6)*(r01)*(x340)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x342)))+(((x338)*(x339)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x342)))+(((IkReal(-1.00000000000000))*(x341)*(x343)))+(((r00)*(sj6)*(x340)))+(((IkReal(-1.00000000000000))*(x338)*(x343)))+(((x339)*(x341))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x344=(cj6)*(cj6);
IkReal x345=(sj6)*(sj6);
IkReal x346=((IkReal(1.00000000000000))*(sj0));
IkReal x347=((cj0)*(r21));
IkReal x348=((cj6)*(sj6));
IkReal x349=((r20)*(x345));
gconst16=IKsign(((((IkReal(-1.00000000000000))*(r02)*(r22)*(x346)))+(((IkReal(-1.00000000000000))*(r01)*(r20)*(x346)*(x348)))+(((IkReal(-1.00000000000000))*(r01)*(r21)*(x344)*(x346)))+(((cj0)*(r10)*(x349)))+(((r11)*(x344)*(x347)))+(((IkReal(-1.00000000000000))*(r00)*(x346)*(x349)))+(((IkReal(-1.00000000000000))*(r00)*(r21)*(x346)*(x348)))+(((cj0)*(r11)*(r20)*(x348)))+(((cj0)*(r12)*(r22)))+(((r10)*(x347)*(x348)))));
IkReal x350=(cj6)*(cj6);
IkReal x351=(sj6)*(sj6);
IkReal x352=((IkReal(1.00000000000000))*(sj0));
IkReal x353=((cj0)*(r21));
IkReal x354=((cj6)*(sj6));
IkReal x355=((r20)*(x351));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r01)*(r21)*(x350)*(x352)))+(((r10)*(x353)*(x354)))+(((cj0)*(r11)*(r20)*(x354)))+(((IkReal(-1.00000000000000))*(r00)*(r21)*(x352)*(x354)))+(((IkReal(-1.00000000000000))*(r02)*(r22)*(x352)))+(((IkReal(-1.00000000000000))*(r00)*(x352)*(x355)))+(((r11)*(x350)*(x353)))+(((IkReal(-1.00000000000000))*(r01)*(r20)*(x352)*(x354)))+(((cj0)*(r12)*(r22)))+(((cj0)*(r10)*(x355))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x356=((r00)*(sj0));
IkReal x357=((IkReal(0.0549798603375872))*(cj6));
IkReal x358=((cj3)*(sj1));
IkReal x359=((cj0)*(r11));
IkReal x360=((cj0)*(r10));
IkReal x361=((IkReal(0.998487463595442))*(sj1));
IkReal x362=((cj0)*(r12));
IkReal x363=((r01)*(sj0));
IkReal x364=((r02)*(sj0));
IkReal x365=((IkReal(0.0549798603375872))*(sj6));
IkReal x366=((sj3)*(x363));
IkReal x367=((IkReal(0.0549798603375872))*(cj1)*(sj3));
IkReal x368=((IkReal(0.998487463595442))*(cj1)*(cj3));
IkReal x369=((sj3)*(sj6)*(x361));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(x360)*(x369)))+(((cj1)*(x357)*(x366)))+(((IkReal(-1.00000000000000))*(x358)*(x360)*(x365)))+(((IkReal(-1.00000000000000))*(x357)*(x358)*(x359)))+(((cj1)*(sj3)*(x356)*(x365)))+(((IkReal(-1.00000000000000))*(cj6)*(sj3)*(x359)*(x361)))+(((x356)*(x369)))+(((x356)*(x358)*(x365)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x357)*(x359)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x360)*(x365)))+(((IkReal(-1.00000000000000))*(sj6)*(x356)*(x368)))+(((cj6)*(x359)*(x368)))+(((sj6)*(x360)*(x368)))+(((IkReal(-1.00000000000000))*(cj6)*(x363)*(x368)))+(((cj6)*(x361)*(x366)))+(((x357)*(x358)*(x363))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(x362)*(x367)))+(((sj3)*(x361)*(x364)))+(((x364)*(x367)))+(((IkReal(-0.0549798603375872))*(x358)*(x362)))+(((IkReal(-1.00000000000000))*(x364)*(x368)))+(((IkReal(-1.00000000000000))*(sj3)*(x361)*(x362)))+(((IkReal(0.0549798603375872))*(x358)*(x364)))+(((x362)*(x368))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(x360)*(x369)))+(((cj1)*(x357)*(x366)))+(((IkReal(-1.00000000000000))*(x358)*(x360)*(x365)))+(((IkReal(-1.00000000000000))*(x357)*(x358)*(x359)))+(((cj1)*(sj3)*(x356)*(x365)))+(((IkReal(-1.00000000000000))*(cj6)*(sj3)*(x359)*(x361)))+(((x356)*(x369)))+(((x356)*(x358)*(x365)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x357)*(x359)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x360)*(x365)))+(((IkReal(-1.00000000000000))*(sj6)*(x356)*(x368)))+(((cj6)*(x359)*(x368)))+(((sj6)*(x360)*(x368)))+(((IkReal(-1.00000000000000))*(cj6)*(x363)*(x368)))+(((cj6)*(x361)*(x366)))+(((x357)*(x358)*(x363)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(x362)*(x367)))+(((sj3)*(x361)*(x364)))+(((x364)*(x367)))+(((IkReal(-0.0549798603375872))*(x358)*(x362)))+(((IkReal(-1.00000000000000))*(x364)*(x368)))+(((IkReal(-1.00000000000000))*(sj3)*(x361)*(x362)))+(((IkReal(0.0549798603375872))*(x358)*(x364)))+(((x362)*(x368)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x370=IKsin(j5);
IkReal x371=IKcos(j5);
IkReal x372=((IkReal(1.00000000000000))*(cj0));
IkReal x373=((r02)*(sj0));
IkReal x374=((IkReal(0.0549798603375872))*(sj3));
IkReal x375=((cj0)*(r01));
IkReal x376=((IkReal(0.998487463595442))*(sj1));
IkReal x377=((r10)*(sj0));
IkReal x378=((IkReal(0.998487463595442))*(cj1));
IkReal x379=((IkReal(0.0549798603375872))*(cj3));
IkReal x380=((r11)*(sj0));
IkReal x381=((r01)*(sj0));
IkReal x382=((sj1)*(x374));
IkReal x383=((cj1)*(x379));
IkReal x384=((cj3)*(x376));
IkReal x385=((sj3)*(x378));
IkReal x386=((cj3)*(x378));
IkReal x387=((cj1)*(x374));
IkReal x388=((sj3)*(x376));
IkReal x389=((sj1)*(x379));
IkReal x390=((cj6)*(x371));
IkReal x391=((sj6)*(x370));
IkReal x392=((IkReal(1.00000000000000))*(x370));
IkReal x393=((r12)*(x371));
IkReal x394=((cj6)*(x370));
IkReal x395=((sj6)*(x371));
IkReal x396=((r00)*(x395));
IkReal x397=((x387)+(x388)+(x389));
IkReal x398=((x384)+(x385)+(x383));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x372)*(x391)))+(((IkReal(-1.00000000000000))*(x372)*(x393)))+(((x381)*(x394)))+(((IkReal(-1.00000000000000))*(r11)*(x372)*(x394)))+(((r00)*(sj0)*(x391)))+(((x371)*(x373))));
evalcond[1]=((((r20)*(x391)))+(x397)+(((IkReal(-1.00000000000000))*(x386)))+(((r22)*(x371)))+(((r21)*(x394))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x372)*(x395)))+(((x381)*(x390)))+(((sj0)*(x396)))+(((cj0)*(r12)*(x370)))+(((IkReal(-1.00000000000000))*(x373)*(x392)))+(((IkReal(-1.00000000000000))*(r11)*(x372)*(x390))));
evalcond[3]=((((r20)*(x395)))+(((IkReal(-1.00000000000000))*(x398)))+(x382)+(((r21)*(x390)))+(((IkReal(-1.00000000000000))*(r22)*(x392))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x398)))+(((x380)*(x394)))+(((x375)*(x394)))+(((sj0)*(x393)))+(((cj0)*(r00)*(x391)))+(x382)+(((x377)*(x391)))+(((cj0)*(r02)*(x371))));
evalcond[5]=((((cj0)*(x396)))+(((IkReal(-1.00000000000000))*(x397)))+(((IkReal(-1.00000000000000))*(r12)*(sj0)*(x392)))+(((IkReal(-1.00000000000000))*(r02)*(x370)*(x372)))+(((x380)*(x390)))+(((x375)*(x390)))+(x386)+(((x377)*(x395))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x399=((r00)*(sj0));
IkReal x400=((IkReal(0.0549798603375872))*(cj6));
IkReal x401=((cj3)*(sj1));
IkReal x402=((cj0)*(r11));
IkReal x403=((cj0)*(r10));
IkReal x404=((IkReal(0.998487463595442))*(sj1));
IkReal x405=((IkReal(0.0549798603375872))*(sj3));
IkReal x406=((r01)*(sj0));
IkReal x407=((r02)*(sj0));
IkReal x408=((IkReal(0.998487463595442))*(cj3));
IkReal x409=((cj1)*(sj6));
IkReal x410=((cj0)*(r12));
IkReal x411=((cj1)*(cj6));
IkReal x412=((IkReal(0.0549798603375872))*(sj6));
IkReal x413=((sj3)*(x406));
IkReal x414=((cj1)*(x410));
IkReal x415=((sj3)*(sj6)*(x404));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(sj3)*(x404)*(x410)))+(((IkReal(-1.00000000000000))*(cj1)*(x407)*(x408)))+(((IkReal(-0.0549798603375872))*(x401)*(x410)))+(((x408)*(x414)))+(((IkReal(0.0549798603375872))*(x401)*(x407)))+(((IkReal(-1.00000000000000))*(x405)*(x414)))+(((sj3)*(x404)*(x407)))+(((cj1)*(x405)*(x407))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((x403)*(x405)*(x409)))+(((cj1)*(sj3)*(x400)*(x402)))+(((IkReal(-1.00000000000000))*(x400)*(x401)*(x406)))+(((x406)*(x408)*(x411)))+(((IkReal(-1.00000000000000))*(x399)*(x401)*(x412)))+(((IkReal(-1.00000000000000))*(x399)*(x405)*(x409)))+(((x401)*(x403)*(x412)))+(((IkReal(-1.00000000000000))*(x403)*(x408)*(x409)))+(((IkReal(-1.00000000000000))*(x399)*(x415)))+(((x400)*(x401)*(x402)))+(((cj6)*(sj3)*(x402)*(x404)))+(((IkReal(-1.00000000000000))*(cj6)*(x404)*(x413)))+(((IkReal(-1.00000000000000))*(x402)*(x408)*(x411)))+(((x403)*(x415)))+(((IkReal(-1.00000000000000))*(cj1)*(x400)*(x413)))+(((x399)*(x408)*(x409))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(sj3)*(x404)*(x410)))+(((IkReal(-1.00000000000000))*(cj1)*(x407)*(x408)))+(((IkReal(-0.0549798603375872))*(x401)*(x410)))+(((x408)*(x414)))+(((IkReal(0.0549798603375872))*(x401)*(x407)))+(((IkReal(-1.00000000000000))*(x405)*(x414)))+(((sj3)*(x404)*(x407)))+(((cj1)*(x405)*(x407)))))), ((gconst15)*(((((x403)*(x405)*(x409)))+(((cj1)*(sj3)*(x400)*(x402)))+(((IkReal(-1.00000000000000))*(x400)*(x401)*(x406)))+(((x406)*(x408)*(x411)))+(((IkReal(-1.00000000000000))*(x399)*(x401)*(x412)))+(((IkReal(-1.00000000000000))*(x399)*(x405)*(x409)))+(((x401)*(x403)*(x412)))+(((IkReal(-1.00000000000000))*(x403)*(x408)*(x409)))+(((IkReal(-1.00000000000000))*(x399)*(x415)))+(((x400)*(x401)*(x402)))+(((cj6)*(sj3)*(x402)*(x404)))+(((IkReal(-1.00000000000000))*(cj6)*(x404)*(x413)))+(((IkReal(-1.00000000000000))*(x402)*(x408)*(x411)))+(((x403)*(x415)))+(((IkReal(-1.00000000000000))*(cj1)*(x400)*(x413)))+(((x399)*(x408)*(x409)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x416=IKsin(j5);
IkReal x417=IKcos(j5);
IkReal x418=((IkReal(1.00000000000000))*(cj0));
IkReal x419=((r02)*(sj0));
IkReal x420=((IkReal(0.0549798603375872))*(sj3));
IkReal x421=((cj0)*(r01));
IkReal x422=((IkReal(0.998487463595442))*(sj1));
IkReal x423=((r10)*(sj0));
IkReal x424=((IkReal(0.998487463595442))*(cj1));
IkReal x425=((IkReal(0.0549798603375872))*(cj3));
IkReal x426=((r11)*(sj0));
IkReal x427=((r01)*(sj0));
IkReal x428=((sj1)*(x420));
IkReal x429=((cj1)*(x425));
IkReal x430=((cj3)*(x422));
IkReal x431=((sj3)*(x424));
IkReal x432=((cj3)*(x424));
IkReal x433=((cj1)*(x420));
IkReal x434=((sj3)*(x422));
IkReal x435=((sj1)*(x425));
IkReal x436=((cj6)*(x417));
IkReal x437=((sj6)*(x416));
IkReal x438=((IkReal(1.00000000000000))*(x416));
IkReal x439=((r12)*(x417));
IkReal x440=((cj6)*(x416));
IkReal x441=((sj6)*(x417));
IkReal x442=((r00)*(x441));
IkReal x443=((x433)+(x434)+(x435));
IkReal x444=((x429)+(x430)+(x431));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x418)*(x437)))+(((x417)*(x419)))+(((IkReal(-1.00000000000000))*(r11)*(x418)*(x440)))+(((r00)*(sj0)*(x437)))+(((x427)*(x440)))+(((IkReal(-1.00000000000000))*(x418)*(x439))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x432)))+(((r22)*(x417)))+(((r21)*(x440)))+(x443)+(((r20)*(x437))));
evalcond[2]=((((sj0)*(x442)))+(((IkReal(-1.00000000000000))*(r10)*(x418)*(x441)))+(((IkReal(-1.00000000000000))*(r11)*(x418)*(x436)))+(((IkReal(-1.00000000000000))*(x419)*(x438)))+(((cj0)*(r12)*(x416)))+(((x427)*(x436))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x444)))+(((r21)*(x436)))+(x428)+(((r20)*(x441)))+(((IkReal(-1.00000000000000))*(r22)*(x438))));
evalcond[4]=((((x421)*(x440)))+(((sj0)*(x439)))+(((IkReal(-1.00000000000000))*(x444)))+(((cj0)*(r00)*(x437)))+(((x426)*(x440)))+(((cj0)*(r02)*(x417)))+(x428)+(((x423)*(x437))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x443)))+(((x421)*(x436)))+(((IkReal(-1.00000000000000))*(r02)*(x416)*(x418)))+(((x426)*(x436)))+(((cj0)*(x442)))+(((IkReal(-1.00000000000000))*(r12)*(sj0)*(x438)))+(x432)+(((x423)*(x441))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x445=((cj6)*(r10));
IkReal x446=((IkReal(1.00000000000000))*(cj0));
IkReal x447=((sj0)*(sj6));
IkReal x448=((cj6)*(r00));
IkReal x449=((IkReal(0.000100000000000000))*(cj0));
IkReal x450=((r11)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((sj0)*(x448)))+(((IkReal(-1.00000000000000))*(x445)*(x446)))+(((IkReal(-1.00000000000000))*(r01)*(x447)))+(((cj0)*(x450))));
evalcond[2]=((IkReal(0.000100000000000000))+(((IkReal(-1.00000000000000))*(x445)*(x449)))+(((x449)*(x450)))+(((IkReal(-1.00000000000000))*(py)*(x446)))+(((IkReal(-0.000100000000000000))*(r01)*(x447)))+(((px)*(sj0)))+(((IkReal(0.000100000000000000))*(sj0)*(x448))));
evalcond[3]=((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6))));
evalcond[4]=((((sj0)*(x445)))+(((IkReal(-1.00000000000000))*(r11)*(x447)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x446)))+(((cj0)*(x448))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign(((((IkReal(0.0615696100000000))*((cj1)*(cj1))))+(((IkReal(0.0615696100000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x451=((IkReal(1.00000000000000))*(cj0));
if( IKabs(((((r02)*(sj0)))+(((IkReal(-1.00000000000000))*(r12)*(x451))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r00)*(sj0)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x451)))+(((cj6)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x451))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x452=IKatan2(((((r02)*(sj0)))+(((IkReal(-1.00000000000000))*(r12)*(x451)))), ((((r00)*(sj0)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x451)))+(((cj6)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x451)))));
j5array[0]=((IkReal(-1.00000000000000))*(x452));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x452))));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x453=IKcos(j5);
IkReal x454=IKsin(j5);
IkReal x455=((IkReal(1.00000000000000))*(cj0));
IkReal x456=((cj6)*(x453));
IkReal x457=((sj6)*(x453));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x455)*(x456)))+(((cj0)*(r12)*(x454)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x454)))+(((IkReal(-1.00000000000000))*(r10)*(x455)*(x457)))+(((r01)*(sj0)*(x456)))+(((r00)*(sj0)*(x457))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign(((((IkReal(0.00810000000000000))*((cj1)*(cj1))))+(((IkReal(0.00810000000000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x458=(cj1)*(cj1);
IkReal x459=((cj1)*(r21));
IkReal x460=((IkReal(9.98487463595442e-5))*(sj6));
IkReal x461=((cj1)*(sj1));
IkReal x462=((cj6)*(r20));
IkReal x463=((IkReal(5.49798603375872e-6))*(sj1));
IkReal x464=((IkReal(0.0549798603375872))*(pz));
IkReal x465=((IkReal(0.0217227538188447))*(sj5));
IkReal x466=((IkReal(0.998487463595442))*(pz));
IkReal x467=((r20)*(sj6));
IkReal x468=((cj6)*(r21));
IkReal x469=((IkReal(0.247179554102935))*(sj5));
IkReal x470=((cj5)*(r22)*(sj1));
IkReal x471=((sj1)*(x469));
IkReal x472=((cj1)*(cj5)*(r22));
if( IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(sj1)*(x465)*(x467)))+(((IkReal(-1.00000000000000))*(sj1)*(x465)*(x468)))+(((IkReal(0.155364649335451))*(x458)))+(((cj6)*(x459)*(x469)))+(((IkReal(-0.0217227538188447))*(x470)))+(((cj1)*(x467)*(x469)))+(((IkReal(0.247179554102935))*(x472)))+(((IkReal(-0.00855486626852856))*(x461)))+(((IkReal(-9.98487463595442e-5))*(cj1)*(x462)))+(((IkReal(-1.00000000000000))*(cj1)*(x466)))+(((sj1)*(x464)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x463)))+(((x459)*(x460)))+(((x462)*(x463))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(5.49798603375872e-6))*(sj6)*(x459)))+(((cj6)*(x459)*(x465)))+(((IkReal(-5.49798603375872e-6))*(cj1)*(x462)))+(((IkReal(0.247179554102935))*(x470)))+(((IkReal(0.0217227538188447))*(x472)))+(((IkReal(-1.00000000000000))*(sj1)*(x466)))+(((x467)*(x471)))+(((IkReal(-1.00000000000000))*(cj1)*(x464)))+(((IkReal(0.00855486626852856))*(x458)))+(((IkReal(-9.98487463595442e-5))*(sj1)*(x462)))+(((x468)*(x471)))+(((IkReal(0.155364649335451))*(x461)))+(((cj1)*(x465)*(x467)))+(((r21)*(sj1)*(x460))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst18)*(((((IkReal(-1.00000000000000))*(sj1)*(x465)*(x467)))+(((IkReal(-1.00000000000000))*(sj1)*(x465)*(x468)))+(((IkReal(0.155364649335451))*(x458)))+(((cj6)*(x459)*(x469)))+(((IkReal(-0.0217227538188447))*(x470)))+(((cj1)*(x467)*(x469)))+(((IkReal(0.247179554102935))*(x472)))+(((IkReal(-0.00855486626852856))*(x461)))+(((IkReal(-9.98487463595442e-5))*(cj1)*(x462)))+(((IkReal(-1.00000000000000))*(cj1)*(x466)))+(((sj1)*(x464)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x463)))+(((x459)*(x460)))+(((x462)*(x463)))))), ((gconst18)*(((((IkReal(5.49798603375872e-6))*(sj6)*(x459)))+(((cj6)*(x459)*(x465)))+(((IkReal(-5.49798603375872e-6))*(cj1)*(x462)))+(((IkReal(0.247179554102935))*(x470)))+(((IkReal(0.0217227538188447))*(x472)))+(((IkReal(-1.00000000000000))*(sj1)*(x466)))+(((x467)*(x471)))+(((IkReal(-1.00000000000000))*(cj1)*(x464)))+(((IkReal(0.00855486626852856))*(x458)))+(((IkReal(-9.98487463595442e-5))*(sj1)*(x462)))+(((x468)*(x471)))+(((IkReal(0.155364649335451))*(x461)))+(((cj1)*(x465)*(x467)))+(((r21)*(sj1)*(x460)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x473=IKsin(j3);
IkReal x474=IKcos(j3);
IkReal x475=((cj5)*(cj6));
IkReal x476=((sj0)*(sj5));
IkReal x477=((r10)*(sj6));
IkReal x478=((IkReal(0.000100000000000000))*(cj0));
IkReal x479=((cj5)*(sj0));
IkReal x480=((IkReal(0.247179554102935))*(cj1));
IkReal x481=((IkReal(1.00000000000000))*(sj5));
IkReal x482=((r11)*(sj0));
IkReal x483=((IkReal(0.000100000000000000))*(sj6));
IkReal x484=((r20)*(sj6));
IkReal x485=((cj0)*(r02));
IkReal x486=((cj0)*(r01));
IkReal x487=((IkReal(0.000100000000000000))*(cj6));
IkReal x488=((cj6)*(sj5));
IkReal x489=((sj1)*(x473));
IkReal x490=((cj0)*(r00)*(sj6));
IkReal x491=((cj1)*(x473));
IkReal x492=((cj1)*(x474));
IkReal x493=((sj1)*(x474));
IkReal x494=((IkReal(0.0549798603375872))*(x489));
IkReal x495=((IkReal(0.998487463595442))*(x491));
IkReal x496=((IkReal(0.998487463595442))*(x493));
IkReal x497=((IkReal(0.0549798603375872))*(x492));
IkReal x498=((IkReal(0.998487463595442))*(x489));
IkReal x499=((IkReal(0.0549798603375872))*(x491));
IkReal x500=((IkReal(0.0549798603375872))*(x493));
IkReal x501=((IkReal(0.998487463595442))*(x492));
IkReal x502=((x496)+(x497)+(x495));
IkReal x503=((x498)+(x499)+(x500));
evalcond[0]=((((r20)*(x487)))+(((IkReal(-1.00000000000000))*(x474)*(x480)))+(((IkReal(0.247179554102935))*(x489)))+(((IkReal(-0.155600000000000))*(cj1)))+(pz)+(((IkReal(0.0217227538188447))*(x493)))+(((IkReal(0.0217227538188447))*(x491)))+(((IkReal(-1.00000000000000))*(r21)*(x483))));
evalcond[1]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x501)))+(((r21)*(x488)))+(x503)+(((sj5)*(x484))));
evalcond[2]=((((r21)*(x475)))+(((IkReal(-1.00000000000000))*(x494)))+(((cj5)*(x484)))+(x502)+(((IkReal(-1.00000000000000))*(r22)*(x481))));
evalcond[3]=((((IkReal(-0.0217227538188447))*(x492)))+(((r10)*(sj0)*(x487)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-0.247179554102935))*(x493)))+(((cj6)*(r00)*(x478)))+(((IkReal(0.0217227538188447))*(x489)))+(((IkReal(-1.00000000000000))*(x482)*(x483)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x478)))+(((IkReal(-1.00000000000000))*(x473)*(x480))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x502)))+(((cj5)*(x485)))+(((cj6)*(r11)*(x476)))+(x494)+(((r12)*(x479)))+(((x486)*(x488)))+(((sj5)*(x490)))+(((x476)*(x477))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x501)))+(((x475)*(x486)))+(((x475)*(x482)))+(((cj5)*(x490)))+(((IkReal(-1.00000000000000))*(x481)*(x485)))+(x503)+(((x477)*(x479)))+(((IkReal(-1.00000000000000))*(r12)*(x476))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x504=((cj1)*(r22));
IkReal x505=((IkReal(0.998487463595442))*(cj5));
IkReal x506=((IkReal(0.0549798603375872))*(sj5));
IkReal x507=((r22)*(sj1));
IkReal x508=((IkReal(0.0549798603375872))*(cj5));
IkReal x509=((IkReal(0.998487463595442))*(sj5));
IkReal x510=((cj1)*(cj6)*(r21));
IkReal x511=((cj1)*(r20)*(sj6));
IkReal x512=((cj6)*(r21)*(sj1));
IkReal x513=((r20)*(sj1)*(sj6));
if( IKabs(((gconst19)*(((((x506)*(x507)))+(((x505)*(x507)))+(((IkReal(-1.00000000000000))*(x504)*(x509)))+(((x506)*(x510)))+(((x506)*(x511)))+(((x505)*(x510)))+(((x505)*(x511)))+(((x504)*(x508)))+(((IkReal(-1.00000000000000))*(x508)*(x512)))+(((IkReal(-1.00000000000000))*(x508)*(x513)))+(((x509)*(x512)))+(((x509)*(x513))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((x507)*(x508)))+(((IkReal(-1.00000000000000))*(x507)*(x509)))+(((IkReal(-1.00000000000000))*(x504)*(x506)))+(((IkReal(-1.00000000000000))*(x504)*(x505)))+(((x506)*(x512)))+(((x506)*(x513)))+(((x508)*(x510)))+(((x508)*(x511)))+(((x505)*(x512)))+(((x505)*(x513)))+(((IkReal(-1.00000000000000))*(x509)*(x511)))+(((IkReal(-1.00000000000000))*(x509)*(x510))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst19)*(((((x506)*(x507)))+(((x505)*(x507)))+(((IkReal(-1.00000000000000))*(x504)*(x509)))+(((x506)*(x510)))+(((x506)*(x511)))+(((x505)*(x510)))+(((x505)*(x511)))+(((x504)*(x508)))+(((IkReal(-1.00000000000000))*(x508)*(x512)))+(((IkReal(-1.00000000000000))*(x508)*(x513)))+(((x509)*(x512)))+(((x509)*(x513)))))), ((gconst19)*(((((x507)*(x508)))+(((IkReal(-1.00000000000000))*(x507)*(x509)))+(((IkReal(-1.00000000000000))*(x504)*(x506)))+(((IkReal(-1.00000000000000))*(x504)*(x505)))+(((x506)*(x512)))+(((x506)*(x513)))+(((x508)*(x510)))+(((x508)*(x511)))+(((x505)*(x512)))+(((x505)*(x513)))+(((IkReal(-1.00000000000000))*(x509)*(x511)))+(((IkReal(-1.00000000000000))*(x509)*(x510)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x514=IKsin(j3);
IkReal x515=IKcos(j3);
IkReal x516=((cj5)*(cj6));
IkReal x517=((sj0)*(sj5));
IkReal x518=((r10)*(sj6));
IkReal x519=((IkReal(0.000100000000000000))*(cj0));
IkReal x520=((cj5)*(sj0));
IkReal x521=((IkReal(0.247179554102935))*(cj1));
IkReal x522=((IkReal(1.00000000000000))*(sj5));
IkReal x523=((r11)*(sj0));
IkReal x524=((IkReal(0.000100000000000000))*(sj6));
IkReal x525=((r20)*(sj6));
IkReal x526=((cj0)*(r02));
IkReal x527=((cj0)*(r01));
IkReal x528=((IkReal(0.000100000000000000))*(cj6));
IkReal x529=((cj6)*(sj5));
IkReal x530=((sj1)*(x514));
IkReal x531=((cj0)*(r00)*(sj6));
IkReal x532=((cj1)*(x514));
IkReal x533=((cj1)*(x515));
IkReal x534=((sj1)*(x515));
IkReal x535=((IkReal(0.0549798603375872))*(x530));
IkReal x536=((IkReal(0.998487463595442))*(x532));
IkReal x537=((IkReal(0.998487463595442))*(x534));
IkReal x538=((IkReal(0.0549798603375872))*(x533));
IkReal x539=((IkReal(0.998487463595442))*(x530));
IkReal x540=((IkReal(0.0549798603375872))*(x532));
IkReal x541=((IkReal(0.0549798603375872))*(x534));
IkReal x542=((IkReal(0.998487463595442))*(x533));
IkReal x543=((x537)+(x536)+(x538));
IkReal x544=((x540)+(x541)+(x539));
evalcond[0]=((((r20)*(x528)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(r21)*(x524)))+(((IkReal(-1.00000000000000))*(x515)*(x521)))+(pz)+(((IkReal(0.0217227538188447))*(x534)))+(((IkReal(0.0217227538188447))*(x532)))+(((IkReal(0.247179554102935))*(x530))));
evalcond[1]=((((r21)*(x529)))+(((cj5)*(r22)))+(((sj5)*(x525)))+(((IkReal(-1.00000000000000))*(x542)))+(x544));
evalcond[2]=((((cj5)*(x525)))+(((IkReal(-1.00000000000000))*(x535)))+(x543)+(((r21)*(x516)))+(((IkReal(-1.00000000000000))*(r22)*(x522))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x523)*(x524)))+(((IkReal(-0.247179554102935))*(x534)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-0.0217227538188447))*(x533)))+(((cj6)*(r00)*(x519)))+(((r10)*(sj0)*(x528)))+(((IkReal(0.0217227538188447))*(x530)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x519)))+(((IkReal(-1.00000000000000))*(x514)*(x521))));
evalcond[4]=((((cj5)*(x526)))+(((r12)*(x520)))+(((sj5)*(x531)))+(((IkReal(-1.00000000000000))*(x543)))+(((x517)*(x518)))+(x535)+(((x527)*(x529)))+(((cj6)*(r11)*(x517))));
evalcond[5]=((((cj5)*(x531)))+(((IkReal(-1.00000000000000))*(r12)*(x517)))+(((x516)*(x523)))+(((x516)*(x527)))+(((IkReal(-1.00000000000000))*(x542)))+(((x518)*(x520)))+(x544)+(((IkReal(-1.00000000000000))*(x522)*(x526))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x545=(sj1)*(sj1);
IkReal x546=(cj1)*(cj1);
IkReal x547=((IkReal(0.0217227538188447))*(sj1));
IkReal x548=((cj0)*(cj1));
IkReal x549=((IkReal(0.247179554102935))*(px));
IkReal x550=((sj1)*(sj6));
IkReal x551=((IkReal(2.17227538188447e-6))*(cj0));
IkReal x552=((IkReal(2.47179554102935e-5))*(cj1));
IkReal x553=((r21)*(sj6));
IkReal x554=((py)*(sj0));
IkReal x555=((cj6)*(sj1));
IkReal x556=((IkReal(2.17227538188447e-6))*(cj6));
IkReal x557=((r10)*(sj0));
IkReal x558=((IkReal(0.247179554102935))*(sj1));
IkReal x559=((cj1)*(pz));
IkReal x560=((IkReal(2.47179554102935e-5))*(cj0));
IkReal x561=((r01)*(sj6));
IkReal x562=((IkReal(2.47179554102935e-5))*(r11)*(sj0));
IkReal x563=((IkReal(2.17227538188447e-6))*(r11)*(sj0)*(sj6));
if( IKabs(((gconst17)*(((((IkReal(-2.47179554102935e-5))*(r20)*(x555)))+(((IkReal(-1.00000000000000))*(cj0)*(px)*(x547)))+(((IkReal(-0.0217227538188447))*(x559)))+(((IkReal(-1.00000000000000))*(x547)*(x554)))+(((IkReal(0.247179554102935))*(cj1)*(x554)))+(((IkReal(2.47179554102935e-5))*(cj6)*(r00)*(x548)))+(((IkReal(0.00338006049421224))*(x546)))+(((IkReal(0.00338006049421224))*(x545)))+(((IkReal(-1.00000000000000))*(r00)*(x551)*(x555)))+(((r01)*(x550)*(x551)))+(((IkReal(-2.17227538188447e-6))*(x555)*(x557)))+(((IkReal(2.17227538188447e-6))*(r11)*(sj0)*(x550)))+(((IkReal(-2.47179554102935e-5))*(x548)*(x561)))+(((cj6)*(x552)*(x557)))+(((IkReal(2.47179554102935e-5))*(r21)*(x550)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj6)*(x552)))+(((IkReal(2.17227538188447e-6))*(cj1)*(x553)))+(((IkReal(-1.00000000000000))*(pz)*(x558)))+(((x548)*(x549)))+(((IkReal(-1.00000000000000))*(cj1)*(r20)*(x556))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(0.0217227538188447))*(px)*(x548)))+(((r00)*(x555)*(x560)))+(((IkReal(0.0217227538188447))*(cj1)*(x554)))+(((IkReal(2.17227538188447e-6))*(r21)*(x550)))+(((IkReal(-2.17227538188447e-6))*(x548)*(x561)))+(((x554)*(x558)))+(((IkReal(-1.00000000000000))*(r01)*(x550)*(x560)))+(((r00)*(x548)*(x556)))+(((cj6)*(r20)*(x552)))+(((IkReal(-2.17227538188447e-6))*(r20)*(x555)))+(((IkReal(-1.00000000000000))*(x552)*(x553)))+(((IkReal(-1.00000000000000))*(cj1)*(x563)))+(((IkReal(-1.00000000000000))*(pz)*(x547)))+(((IkReal(0.247179554102935))*(x559)))+(((cj0)*(sj1)*(x549)))+(((IkReal(-1.00000000000000))*(x550)*(x562)))+(((cj1)*(x556)*(x557)))+(((IkReal(-0.0384611386184167))*(x546)))+(((IkReal(-0.0384611386184167))*(x545)))+(((IkReal(2.47179554102935e-5))*(x555)*(x557))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst17)*(((((IkReal(-2.47179554102935e-5))*(r20)*(x555)))+(((IkReal(-1.00000000000000))*(cj0)*(px)*(x547)))+(((IkReal(-0.0217227538188447))*(x559)))+(((IkReal(-1.00000000000000))*(x547)*(x554)))+(((IkReal(0.247179554102935))*(cj1)*(x554)))+(((IkReal(2.47179554102935e-5))*(cj6)*(r00)*(x548)))+(((IkReal(0.00338006049421224))*(x546)))+(((IkReal(0.00338006049421224))*(x545)))+(((IkReal(-1.00000000000000))*(r00)*(x551)*(x555)))+(((r01)*(x550)*(x551)))+(((IkReal(-2.17227538188447e-6))*(x555)*(x557)))+(((IkReal(2.17227538188447e-6))*(r11)*(sj0)*(x550)))+(((IkReal(-2.47179554102935e-5))*(x548)*(x561)))+(((cj6)*(x552)*(x557)))+(((IkReal(2.47179554102935e-5))*(r21)*(x550)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj6)*(x552)))+(((IkReal(2.17227538188447e-6))*(cj1)*(x553)))+(((IkReal(-1.00000000000000))*(pz)*(x558)))+(((x548)*(x549)))+(((IkReal(-1.00000000000000))*(cj1)*(r20)*(x556)))))), ((gconst17)*(((((IkReal(0.0217227538188447))*(px)*(x548)))+(((r00)*(x555)*(x560)))+(((IkReal(0.0217227538188447))*(cj1)*(x554)))+(((IkReal(2.17227538188447e-6))*(r21)*(x550)))+(((IkReal(-2.17227538188447e-6))*(x548)*(x561)))+(((x554)*(x558)))+(((IkReal(-1.00000000000000))*(r01)*(x550)*(x560)))+(((r00)*(x548)*(x556)))+(((cj6)*(r20)*(x552)))+(((IkReal(-2.17227538188447e-6))*(r20)*(x555)))+(((IkReal(-1.00000000000000))*(x552)*(x553)))+(((IkReal(-1.00000000000000))*(cj1)*(x563)))+(((IkReal(-1.00000000000000))*(pz)*(x547)))+(((IkReal(0.247179554102935))*(x559)))+(((cj0)*(sj1)*(x549)))+(((IkReal(-1.00000000000000))*(x550)*(x562)))+(((cj1)*(x556)*(x557)))+(((IkReal(-0.0384611386184167))*(x546)))+(((IkReal(-0.0384611386184167))*(x545)))+(((IkReal(2.47179554102935e-5))*(x555)*(x557)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x564=IKsin(j3);
IkReal x565=IKcos(j3);
IkReal x566=((IkReal(0.000100000000000000))*(cj6));
IkReal x567=((IkReal(0.000100000000000000))*(sj6));
IkReal x568=((cj1)*(x565));
IkReal x569=((sj1)*(x564));
IkReal x570=((sj1)*(x565));
IkReal x571=((cj1)*(x564));
evalcond[0]=((((IkReal(0.247179554102935))*(x569)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(-0.247179554102935))*(x568)))+(pz)+(((r20)*(x566)))+(((IkReal(-1.00000000000000))*(r21)*(x567)))+(((IkReal(0.0217227538188447))*(x571)))+(((IkReal(0.0217227538188447))*(x570))));
evalcond[1]=((((IkReal(-0.247179554102935))*(x571)))+(((IkReal(-0.247179554102935))*(x570)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x567)))+(((IkReal(-0.155600000000000))*(sj1)))+(((cj0)*(r00)*(x566)))+(((r10)*(sj0)*(x566)))+(((IkReal(-0.0217227538188447))*(x568)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x567)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.0217227538188447))*(x569))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst20;
IkReal x572=((r20)*(sj6));
IkReal x573=((cj0)*(r12));
IkReal x574=((r22)*(sj0));
IkReal x575=((cj6)*(r21));
IkReal x576=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x577=((IkReal(1.00000000000000))*(r02)*(sj0));
gconst20=IKsign(((((r00)*(sj6)*(x574)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x576)))+(((x573)*(x575)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x576)))+(((cj6)*(r01)*(x574)))+(((IkReal(-1.00000000000000))*(x575)*(x577)))+(((x572)*(x573)))+(((IkReal(-1.00000000000000))*(x572)*(x577)))));
IkReal x578=((r20)*(sj6));
IkReal x579=((cj0)*(r12));
IkReal x580=((r22)*(sj0));
IkReal x581=((cj6)*(r21));
IkReal x582=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x583=((IkReal(1.00000000000000))*(r02)*(sj0));
dummyeval[0]=((((x579)*(x581)))+(((IkReal(-1.00000000000000))*(x578)*(x583)))+(((r00)*(sj6)*(x580)))+(((x578)*(x579)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x582)))+(((cj6)*(r01)*(x580)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x582)))+(((IkReal(-1.00000000000000))*(x581)*(x583))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst21;
IkReal x584=(cj6)*(cj6);
IkReal x585=(sj6)*(sj6);
IkReal x586=((IkReal(1.00000000000000))*(sj0));
IkReal x587=((cj0)*(r21));
IkReal x588=((cj6)*(sj6));
IkReal x589=((r20)*(x585));
gconst21=IKsign(((((IkReal(-1.00000000000000))*(r02)*(r22)*(x586)))+(((IkReal(-1.00000000000000))*(r00)*(x586)*(x589)))+(((r10)*(x587)*(x588)))+(((IkReal(-1.00000000000000))*(r01)*(r20)*(x586)*(x588)))+(((cj0)*(r10)*(x589)))+(((cj0)*(r11)*(r20)*(x588)))+(((r11)*(x584)*(x587)))+(((cj0)*(r12)*(r22)))+(((IkReal(-1.00000000000000))*(r00)*(r21)*(x586)*(x588)))+(((IkReal(-1.00000000000000))*(r01)*(r21)*(x584)*(x586)))));
IkReal x590=(cj6)*(cj6);
IkReal x591=(sj6)*(sj6);
IkReal x592=((IkReal(1.00000000000000))*(sj0));
IkReal x593=((cj0)*(r21));
IkReal x594=((cj6)*(sj6));
IkReal x595=((r20)*(x591));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r21)*(x592)*(x594)))+(((r10)*(x593)*(x594)))+(((r11)*(x590)*(x593)))+(((IkReal(-1.00000000000000))*(r01)*(r21)*(x590)*(x592)))+(((IkReal(-1.00000000000000))*(r02)*(r22)*(x592)))+(((cj0)*(r10)*(x595)))+(((IkReal(-1.00000000000000))*(r00)*(x592)*(x595)))+(((cj0)*(r11)*(r20)*(x594)))+(((cj0)*(r12)*(r22)))+(((IkReal(-1.00000000000000))*(r01)*(r20)*(x592)*(x594))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x596=((r00)*(sj0));
IkReal x597=((IkReal(0.0549798603375872))*(cj6));
IkReal x598=((cj3)*(sj1));
IkReal x599=((cj0)*(r11));
IkReal x600=((cj0)*(r10));
IkReal x601=((IkReal(0.998487463595442))*(sj1));
IkReal x602=((cj0)*(r12));
IkReal x603=((r01)*(sj0));
IkReal x604=((r02)*(sj0));
IkReal x605=((IkReal(0.0549798603375872))*(sj6));
IkReal x606=((sj3)*(x603));
IkReal x607=((IkReal(0.0549798603375872))*(cj1)*(sj3));
IkReal x608=((IkReal(0.998487463595442))*(cj1)*(cj3));
IkReal x609=((sj3)*(sj6)*(x601));
if( IKabs(((gconst21)*(((((cj1)*(x597)*(x606)))+(((cj6)*(x599)*(x608)))+(((IkReal(-1.00000000000000))*(cj6)*(sj3)*(x599)*(x601)))+(((x596)*(x598)*(x605)))+(((IkReal(-1.00000000000000))*(cj6)*(x603)*(x608)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x597)*(x599)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x600)*(x605)))+(((IkReal(-1.00000000000000))*(x598)*(x600)*(x605)))+(((IkReal(-1.00000000000000))*(x600)*(x609)))+(((x596)*(x609)))+(((IkReal(-1.00000000000000))*(x597)*(x598)*(x599)))+(((cj1)*(sj3)*(x596)*(x605)))+(((IkReal(-1.00000000000000))*(sj6)*(x596)*(x608)))+(((x597)*(x598)*(x603)))+(((cj6)*(x601)*(x606)))+(((sj6)*(x600)*(x608))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(x602)*(x607)))+(((sj3)*(x601)*(x604)))+(((x604)*(x607)))+(((IkReal(-1.00000000000000))*(sj3)*(x601)*(x602)))+(((IkReal(-0.0549798603375872))*(x598)*(x602)))+(((IkReal(-1.00000000000000))*(x604)*(x608)))+(((IkReal(0.0549798603375872))*(x598)*(x604)))+(((x602)*(x608))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst21)*(((((cj1)*(x597)*(x606)))+(((cj6)*(x599)*(x608)))+(((IkReal(-1.00000000000000))*(cj6)*(sj3)*(x599)*(x601)))+(((x596)*(x598)*(x605)))+(((IkReal(-1.00000000000000))*(cj6)*(x603)*(x608)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x597)*(x599)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x600)*(x605)))+(((IkReal(-1.00000000000000))*(x598)*(x600)*(x605)))+(((IkReal(-1.00000000000000))*(x600)*(x609)))+(((x596)*(x609)))+(((IkReal(-1.00000000000000))*(x597)*(x598)*(x599)))+(((cj1)*(sj3)*(x596)*(x605)))+(((IkReal(-1.00000000000000))*(sj6)*(x596)*(x608)))+(((x597)*(x598)*(x603)))+(((cj6)*(x601)*(x606)))+(((sj6)*(x600)*(x608)))))), ((gconst21)*(((((IkReal(-1.00000000000000))*(x602)*(x607)))+(((sj3)*(x601)*(x604)))+(((x604)*(x607)))+(((IkReal(-1.00000000000000))*(sj3)*(x601)*(x602)))+(((IkReal(-0.0549798603375872))*(x598)*(x602)))+(((IkReal(-1.00000000000000))*(x604)*(x608)))+(((IkReal(0.0549798603375872))*(x598)*(x604)))+(((x602)*(x608)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x610=IKsin(j5);
IkReal x611=IKcos(j5);
IkReal x612=((IkReal(1.00000000000000))*(cj0));
IkReal x613=((IkReal(1.00000000000000))*(sj0));
IkReal x614=((IkReal(0.998487463595442))*(cj3));
IkReal x615=((IkReal(0.998487463595442))*(sj3));
IkReal x616=((cj0)*(r01));
IkReal x617=((IkReal(0.0549798603375872))*(sj3));
IkReal x618=((r10)*(sj0));
IkReal x619=((IkReal(0.0549798603375872))*(cj3));
IkReal x620=((r11)*(sj0));
IkReal x621=((r01)*(sj0));
IkReal x622=((sj1)*(x617));
IkReal x623=((cj1)*(x619));
IkReal x624=((sj1)*(x614));
IkReal x625=((cj1)*(x615));
IkReal x626=((cj1)*(x617));
IkReal x627=((sj1)*(x615));
IkReal x628=((sj1)*(x619));
IkReal x629=((cj1)*(x614));
IkReal x630=((cj6)*(x611));
IkReal x631=((sj6)*(x610));
IkReal x632=((r02)*(x610));
IkReal x633=((r12)*(x611));
IkReal x634=((cj6)*(x610));
IkReal x635=((r02)*(x611));
IkReal x636=((r12)*(x610));
IkReal x637=((sj6)*(x611));
IkReal x638=((r00)*(x637));
IkReal x639=((x627)+(x626)+(x628));
IkReal x640=((x625)+(x624)+(x623));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x612)*(x631)))+(((r00)*(sj0)*(x631)))+(((sj0)*(x635)))+(((IkReal(-1.00000000000000))*(x612)*(x633)))+(((x621)*(x634)))+(((IkReal(-1.00000000000000))*(r11)*(x612)*(x634))));
evalcond[1]=((((r21)*(x634)))+(((IkReal(-1.00000000000000))*(x629)))+(x639)+(((r22)*(x611)))+(((r20)*(x631))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x612)*(x637)))+(((cj0)*(x636)))+(((sj0)*(x638)))+(((x621)*(x630)))+(((IkReal(-1.00000000000000))*(r11)*(x612)*(x630)))+(((IkReal(-1.00000000000000))*(x613)*(x632))));
evalcond[3]=((((r21)*(x630)))+(((IkReal(-1.00000000000000))*(x622)))+(((IkReal(-1.00000000000000))*(r22)*(x610)))+(x640)+(((r20)*(x637))));
evalcond[4]=((((x616)*(x634)))+(((x618)*(x631)))+(((IkReal(-1.00000000000000))*(x640)))+(((cj0)*(x635)))+(((sj0)*(x633)))+(x622)+(((cj0)*(r00)*(x631)))+(((x620)*(x634))));
evalcond[5]=((((x616)*(x630)))+(((IkReal(-1.00000000000000))*(x629)))+(((x618)*(x637)))+(((cj0)*(x638)))+(((IkReal(-1.00000000000000))*(x612)*(x632)))+(x639)+(((x620)*(x630)))+(((IkReal(-1.00000000000000))*(x613)*(x636))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x641=((r00)*(sj0));
IkReal x642=((IkReal(0.0549798603375872))*(cj6));
IkReal x643=((cj3)*(sj1));
IkReal x644=((cj0)*(r11));
IkReal x645=((cj0)*(r10));
IkReal x646=((IkReal(0.998487463595442))*(sj1));
IkReal x647=((IkReal(0.0549798603375872))*(sj3));
IkReal x648=((r01)*(sj0));
IkReal x649=((r02)*(sj0));
IkReal x650=((IkReal(0.998487463595442))*(cj3));
IkReal x651=((cj1)*(sj6));
IkReal x652=((cj0)*(r12));
IkReal x653=((cj1)*(cj6));
IkReal x654=((IkReal(0.0549798603375872))*(sj6));
IkReal x655=((sj3)*(x648));
IkReal x656=((cj1)*(x652));
IkReal x657=((sj3)*(sj6)*(x646));
if( IKabs(((gconst20)*(((((IkReal(0.0549798603375872))*(x643)*(x649)))+(((cj1)*(x647)*(x649)))+(((IkReal(-0.0549798603375872))*(x643)*(x652)))+(((sj3)*(x646)*(x649)))+(((IkReal(-1.00000000000000))*(x647)*(x656)))+(((IkReal(-1.00000000000000))*(sj3)*(x646)*(x652)))+(((x650)*(x656)))+(((IkReal(-1.00000000000000))*(cj1)*(x649)*(x650))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(x641)*(x657)))+(((IkReal(-1.00000000000000))*(x641)*(x643)*(x654)))+(((IkReal(-1.00000000000000))*(x644)*(x650)*(x653)))+(((x642)*(x643)*(x644)))+(((x643)*(x645)*(x654)))+(((x645)*(x657)))+(((cj6)*(sj3)*(x644)*(x646)))+(((IkReal(-1.00000000000000))*(cj1)*(x642)*(x655)))+(((cj1)*(sj3)*(x642)*(x644)))+(((x645)*(x647)*(x651)))+(((IkReal(-1.00000000000000))*(x642)*(x643)*(x648)))+(((IkReal(-1.00000000000000))*(x641)*(x647)*(x651)))+(((IkReal(-1.00000000000000))*(cj6)*(x646)*(x655)))+(((x648)*(x650)*(x653)))+(((x641)*(x650)*(x651)))+(((IkReal(-1.00000000000000))*(x645)*(x650)*(x651))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst20)*(((((IkReal(0.0549798603375872))*(x643)*(x649)))+(((cj1)*(x647)*(x649)))+(((IkReal(-0.0549798603375872))*(x643)*(x652)))+(((sj3)*(x646)*(x649)))+(((IkReal(-1.00000000000000))*(x647)*(x656)))+(((IkReal(-1.00000000000000))*(sj3)*(x646)*(x652)))+(((x650)*(x656)))+(((IkReal(-1.00000000000000))*(cj1)*(x649)*(x650)))))), ((gconst20)*(((((IkReal(-1.00000000000000))*(x641)*(x657)))+(((IkReal(-1.00000000000000))*(x641)*(x643)*(x654)))+(((IkReal(-1.00000000000000))*(x644)*(x650)*(x653)))+(((x642)*(x643)*(x644)))+(((x643)*(x645)*(x654)))+(((x645)*(x657)))+(((cj6)*(sj3)*(x644)*(x646)))+(((IkReal(-1.00000000000000))*(cj1)*(x642)*(x655)))+(((cj1)*(sj3)*(x642)*(x644)))+(((x645)*(x647)*(x651)))+(((IkReal(-1.00000000000000))*(x642)*(x643)*(x648)))+(((IkReal(-1.00000000000000))*(x641)*(x647)*(x651)))+(((IkReal(-1.00000000000000))*(cj6)*(x646)*(x655)))+(((x648)*(x650)*(x653)))+(((x641)*(x650)*(x651)))+(((IkReal(-1.00000000000000))*(x645)*(x650)*(x651)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x658=IKsin(j5);
IkReal x659=IKcos(j5);
IkReal x660=((IkReal(1.00000000000000))*(cj0));
IkReal x661=((IkReal(1.00000000000000))*(sj0));
IkReal x662=((IkReal(0.998487463595442))*(cj3));
IkReal x663=((IkReal(0.998487463595442))*(sj3));
IkReal x664=((cj0)*(r01));
IkReal x665=((IkReal(0.0549798603375872))*(sj3));
IkReal x666=((r10)*(sj0));
IkReal x667=((IkReal(0.0549798603375872))*(cj3));
IkReal x668=((r11)*(sj0));
IkReal x669=((r01)*(sj0));
IkReal x670=((sj1)*(x665));
IkReal x671=((cj1)*(x667));
IkReal x672=((sj1)*(x662));
IkReal x673=((cj1)*(x663));
IkReal x674=((cj1)*(x665));
IkReal x675=((sj1)*(x663));
IkReal x676=((sj1)*(x667));
IkReal x677=((cj1)*(x662));
IkReal x678=((cj6)*(x659));
IkReal x679=((sj6)*(x658));
IkReal x680=((r02)*(x658));
IkReal x681=((r12)*(x659));
IkReal x682=((cj6)*(x658));
IkReal x683=((r02)*(x659));
IkReal x684=((r12)*(x658));
IkReal x685=((sj6)*(x659));
IkReal x686=((r00)*(x685));
IkReal x687=((x676)+(x674)+(x675));
IkReal x688=((x672)+(x673)+(x671));
evalcond[0]=((((x669)*(x682)))+(((r00)*(sj0)*(x679)))+(((IkReal(-1.00000000000000))*(x660)*(x681)))+(((sj0)*(x683)))+(((IkReal(-1.00000000000000))*(r10)*(x660)*(x679)))+(((IkReal(-1.00000000000000))*(r11)*(x660)*(x682))));
evalcond[1]=((((r21)*(x682)))+(((r22)*(x659)))+(((r20)*(x679)))+(x687)+(((IkReal(-1.00000000000000))*(x677))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x660)*(x685)))+(((IkReal(-1.00000000000000))*(r11)*(x660)*(x678)))+(((x669)*(x678)))+(((IkReal(-1.00000000000000))*(x661)*(x680)))+(((cj0)*(x684)))+(((sj0)*(x686))));
evalcond[3]=((((r21)*(x678)))+(x688)+(((r20)*(x685)))+(((IkReal(-1.00000000000000))*(r22)*(x658)))+(((IkReal(-1.00000000000000))*(x670))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x688)))+(((x666)*(x679)))+(((x664)*(x682)))+(x670)+(((cj0)*(x683)))+(((sj0)*(x681)))+(((cj0)*(r00)*(x679)))+(((x668)*(x682))));
evalcond[5]=((((x664)*(x678)))+(((IkReal(-1.00000000000000))*(x660)*(x680)))+(((x666)*(x685)))+(((IkReal(-1.00000000000000))*(x661)*(x684)))+(((x668)*(x678)))+(x687)+(((cj0)*(x686)))+(((IkReal(-1.00000000000000))*(x677))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x689=((cj0)*(sj4));
IkReal x690=((IkReal(0.0549798603375872))*(sj1));
IkReal x691=((r01)*(sj6));
IkReal x692=((IkReal(0.998487463595442))*(cj1));
IkReal x693=((cj6)*(r00));
IkReal x694=((sj4)*(sj6));
IkReal x695=((IkReal(0.998487463595442))*(sj1));
IkReal x696=((cj6)*(sj4));
IkReal x697=((r11)*(sj0));
IkReal x698=((IkReal(0.0549798603375872))*(cj1));
IkReal x699=((r10)*(sj0));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x694)*(x695)*(x697)))+(((IkReal(-1.00000000000000))*(x694)*(x697)*(x698)))+(((x696)*(x698)*(x699)))+(((r20)*(x692)*(x696)))+(((x689)*(x693)*(x698)))+(((x689)*(x693)*(x695)))+(((r21)*(x690)*(x694)))+(((IkReal(-1.00000000000000))*(r20)*(x690)*(x696)))+(((IkReal(-1.00000000000000))*(x689)*(x691)*(x695)))+(((IkReal(-1.00000000000000))*(x689)*(x691)*(x698)))+(((IkReal(-1.00000000000000))*(r21)*(x692)*(x694)))+(((x695)*(x696)*(x699))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((x692)*(x694)*(x697)))+(((IkReal(-1.00000000000000))*(x692)*(x696)*(x699)))+(((IkReal(-1.00000000000000))*(x690)*(x694)*(x697)))+(((x689)*(x691)*(x692)))+(((IkReal(-1.00000000000000))*(r21)*(x694)*(x695)))+(((IkReal(-1.00000000000000))*(r21)*(x694)*(x698)))+(((r20)*(x696)*(x698)))+(((x689)*(x690)*(x693)))+(((IkReal(-1.00000000000000))*(x689)*(x690)*(x691)))+(((r20)*(x695)*(x696)))+(((IkReal(-1.00000000000000))*(x689)*(x692)*(x693)))+(((x690)*(x696)*(x699))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x694)*(x695)*(x697)))+(((IkReal(-1.00000000000000))*(x694)*(x697)*(x698)))+(((x696)*(x698)*(x699)))+(((r20)*(x692)*(x696)))+(((x689)*(x693)*(x698)))+(((x689)*(x693)*(x695)))+(((r21)*(x690)*(x694)))+(((IkReal(-1.00000000000000))*(r20)*(x690)*(x696)))+(((IkReal(-1.00000000000000))*(x689)*(x691)*(x695)))+(((IkReal(-1.00000000000000))*(x689)*(x691)*(x698)))+(((IkReal(-1.00000000000000))*(r21)*(x692)*(x694)))+(((x695)*(x696)*(x699)))))), ((gconst2)*(((((x692)*(x694)*(x697)))+(((IkReal(-1.00000000000000))*(x692)*(x696)*(x699)))+(((IkReal(-1.00000000000000))*(x690)*(x694)*(x697)))+(((x689)*(x691)*(x692)))+(((IkReal(-1.00000000000000))*(r21)*(x694)*(x695)))+(((IkReal(-1.00000000000000))*(r21)*(x694)*(x698)))+(((r20)*(x696)*(x698)))+(((x689)*(x690)*(x693)))+(((IkReal(-1.00000000000000))*(x689)*(x690)*(x691)))+(((r20)*(x695)*(x696)))+(((IkReal(-1.00000000000000))*(x689)*(x692)*(x693)))+(((x690)*(x696)*(x699)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x700=IKsin(j3);
IkReal x701=IKcos(j3);
IkReal x702=((IkReal(0.000100000000000000))*(cj0));
IkReal x703=((cj6)*(r00));
IkReal x704=((IkReal(0.998487463595442))*(sj4));
IkReal x705=((r01)*(sj6));
IkReal x706=((IkReal(0.247179554102935))*(cj1));
IkReal x707=((IkReal(0.000100000000000000))*(sj0));
IkReal x708=((r11)*(sj6));
IkReal x709=((cj6)*(r10));
IkReal x710=((IkReal(0.0549798603375872))*(sj4));
IkReal x711=((cj6)*(r20));
IkReal x712=((r21)*(sj6));
IkReal x713=((sj1)*(x700));
IkReal x714=((sj1)*(x701));
IkReal x715=((cj1)*(x701));
IkReal x716=((cj1)*(x700));
evalcond[0]=((((IkReal(0.247179554102935))*(x713)))+(((IkReal(-0.000100000000000000))*(x712)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(0.000100000000000000))*(x711)))+(pz)+(((IkReal(0.0217227538188447))*(x716)))+(((IkReal(0.0217227538188447))*(x714)))+(((IkReal(-1.00000000000000))*(x701)*(x706))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x710)*(x715)))+(((IkReal(-1.00000000000000))*(x712)))+(((x710)*(x713)))+(((IkReal(-1.00000000000000))*(x704)*(x714)))+(((IkReal(-1.00000000000000))*(x704)*(x716)))+(x711));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj0)*(x708)))+(((IkReal(-1.00000000000000))*(x710)*(x714)))+(((IkReal(-1.00000000000000))*(x710)*(x716)))+(((cj0)*(x703)))+(((IkReal(-1.00000000000000))*(cj0)*(x705)))+(((IkReal(-1.00000000000000))*(x704)*(x713)))+(((sj0)*(x709)))+(((x704)*(x715))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x707)*(x708)))+(((x702)*(x703)))+(((IkReal(-1.00000000000000))*(x702)*(x705)))+(((x707)*(x709)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(0.0217227538188447))*(x713)))+(((IkReal(-0.247179554102935))*(x714)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(-1.00000000000000))*(x700)*(x706)))+(((IkReal(-0.0217227538188447))*(x715))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x717=(cj6)*(cj6);
IkReal x718=(cj0)*(cj0);
IkReal x719=(sj0)*(sj0);
IkReal x720=(sj6)*(sj6);
IkReal x721=((IkReal(2.00000000000000))*(r11));
IkReal x722=((cj0)*(sj0));
IkReal x723=((cj6)*(sj6));
IkReal x724=((IkReal(2.00000000000000))*(r01));
IkReal x725=((IkReal(1.00000000000000))*(x718));
IkReal x726=((IkReal(1.00000000000000))*(x719));
gconst4=IKsign(((((IkReal(-1.00000000000000))*(x717)*(x725)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x720)*(x726)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x725)*((r12)*(r12))))+(((r10)*(x722)*(x723)*(x724)))+(((IkReal(-1.00000000000000))*(x720)*(x725)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(x719)*(x723)*(x724)))+(((r00)*(x721)*(x722)*(x723)))+(((IkReal(-1.00000000000000))*(r10)*(x718)*(x721)*(x723)))+(((IkReal(-1.00000000000000))*(x726)*((r02)*(r02))))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x720)*(x722)))+(((r01)*(x717)*(x721)*(x722)))+(((IkReal(-1.00000000000000))*(x717)*(x726)*((r01)*(r01))))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x722)))));
IkReal x727=(cj6)*(cj6);
IkReal x728=(cj0)*(cj0);
IkReal x729=(sj0)*(sj0);
IkReal x730=(sj6)*(sj6);
IkReal x731=((IkReal(2.00000000000000))*(r11));
IkReal x732=((cj0)*(sj0));
IkReal x733=((cj6)*(sj6));
IkReal x734=((IkReal(2.00000000000000))*(r01));
IkReal x735=((IkReal(1.00000000000000))*(x728));
IkReal x736=((IkReal(1.00000000000000))*(x729));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x730)*(x736)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x736)*((r02)*(r02))))+(((r00)*(x731)*(x732)*(x733)))+(((r01)*(x727)*(x731)*(x732)))+(((IkReal(-1.00000000000000))*(r00)*(x729)*(x733)*(x734)))+(((IkReal(-1.00000000000000))*(x735)*((r12)*(r12))))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x730)*(x732)))+(((IkReal(-1.00000000000000))*(r10)*(x728)*(x731)*(x733)))+(((IkReal(-1.00000000000000))*(x727)*(x735)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x727)*(x736)*((r01)*(r01))))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x732)))+(((r10)*(x732)*(x733)*(x734)))+(((IkReal(-1.00000000000000))*(x730)*(x735)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x737=((r20)*(sj6));
IkReal x738=((cj0)*(r12));
IkReal x739=((r22)*(sj0));
IkReal x740=((cj6)*(r21));
IkReal x741=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x742=((IkReal(1.00000000000000))*(r02)*(sj0));
gconst5=IKsign(((((x738)*(x740)))+(((cj6)*(r01)*(x739)))+(((IkReal(-1.00000000000000))*(x737)*(x742)))+(((r00)*(sj6)*(x739)))+(((IkReal(-1.00000000000000))*(x740)*(x742)))+(((x737)*(x738)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x741)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x741)))));
IkReal x743=((r20)*(sj6));
IkReal x744=((cj0)*(r12));
IkReal x745=((r22)*(sj0));
IkReal x746=((cj6)*(r21));
IkReal x747=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x748=((IkReal(1.00000000000000))*(r02)*(sj0));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x746)*(x748)))+(((x744)*(x746)))+(((r00)*(sj6)*(x745)))+(((cj6)*(r01)*(x745)))+(((x743)*(x744)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x747)))+(((IkReal(-1.00000000000000))*(x743)*(x748)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x747))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x749=((r00)*(sj0));
IkReal x750=((IkReal(0.0549798603375872))*(cj6));
IkReal x751=((cj3)*(sj1));
IkReal x752=((cj0)*(r11));
IkReal x753=((cj0)*(r10));
IkReal x754=((IkReal(0.998487463595442))*(sj1));
IkReal x755=((IkReal(0.0549798603375872))*(sj3));
IkReal x756=((r01)*(sj0));
IkReal x757=((r02)*(sj0));
IkReal x758=((IkReal(0.998487463595442))*(cj3));
IkReal x759=((cj1)*(sj6));
IkReal x760=((cj0)*(r12));
IkReal x761=((cj1)*(cj6));
IkReal x762=((IkReal(0.0549798603375872))*(sj6));
IkReal x763=((sj3)*(x756));
IkReal x764=((cj1)*(x760));
IkReal x765=((sj3)*(sj6)*(x754));
if( IKabs(((gconst5)*(((((IkReal(0.0549798603375872))*(x751)*(x757)))+(((IkReal(-1.00000000000000))*(x755)*(x764)))+(((x758)*(x764)))+(((sj3)*(x754)*(x757)))+(((IkReal(-1.00000000000000))*(sj3)*(x754)*(x760)))+(((IkReal(-0.0549798603375872))*(x751)*(x760)))+(((cj1)*(x755)*(x757)))+(((IkReal(-1.00000000000000))*(cj1)*(x757)*(x758))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(cj1)*(x750)*(x763)))+(((x753)*(x755)*(x759)))+(((x751)*(x753)*(x762)))+(((x756)*(x758)*(x761)))+(((IkReal(-1.00000000000000))*(x752)*(x758)*(x761)))+(((IkReal(-1.00000000000000))*(cj6)*(x754)*(x763)))+(((cj1)*(sj3)*(x750)*(x752)))+(((IkReal(-1.00000000000000))*(x749)*(x755)*(x759)))+(((x750)*(x751)*(x752)))+(((IkReal(-1.00000000000000))*(x750)*(x751)*(x756)))+(((IkReal(-1.00000000000000))*(x749)*(x751)*(x762)))+(((x749)*(x758)*(x759)))+(((IkReal(-1.00000000000000))*(x753)*(x758)*(x759)))+(((x753)*(x765)))+(((cj6)*(sj3)*(x752)*(x754)))+(((IkReal(-1.00000000000000))*(x749)*(x765))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst5)*(((((IkReal(0.0549798603375872))*(x751)*(x757)))+(((IkReal(-1.00000000000000))*(x755)*(x764)))+(((x758)*(x764)))+(((sj3)*(x754)*(x757)))+(((IkReal(-1.00000000000000))*(sj3)*(x754)*(x760)))+(((IkReal(-0.0549798603375872))*(x751)*(x760)))+(((cj1)*(x755)*(x757)))+(((IkReal(-1.00000000000000))*(cj1)*(x757)*(x758)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(cj1)*(x750)*(x763)))+(((x753)*(x755)*(x759)))+(((x751)*(x753)*(x762)))+(((x756)*(x758)*(x761)))+(((IkReal(-1.00000000000000))*(x752)*(x758)*(x761)))+(((IkReal(-1.00000000000000))*(cj6)*(x754)*(x763)))+(((cj1)*(sj3)*(x750)*(x752)))+(((IkReal(-1.00000000000000))*(x749)*(x755)*(x759)))+(((x750)*(x751)*(x752)))+(((IkReal(-1.00000000000000))*(x750)*(x751)*(x756)))+(((IkReal(-1.00000000000000))*(x749)*(x751)*(x762)))+(((x749)*(x758)*(x759)))+(((IkReal(-1.00000000000000))*(x753)*(x758)*(x759)))+(((x753)*(x765)))+(((cj6)*(sj3)*(x752)*(x754)))+(((IkReal(-1.00000000000000))*(x749)*(x765)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x766=IKsin(j5);
IkReal x767=IKcos(j5);
IkReal x768=((IkReal(1.00000000000000))*(cj0));
IkReal x769=((IkReal(0.998487463595442))*(cj1));
IkReal x770=((cj4)*(sj3));
IkReal x771=((r02)*(sj0));
IkReal x772=((cj0)*(r01));
IkReal x773=((IkReal(0.0549798603375872))*(cj1));
IkReal x774=((r10)*(sj0));
IkReal x775=((IkReal(0.998487463595442))*(sj1));
IkReal x776=((cj3)*(cj4));
IkReal x777=((IkReal(0.0549798603375872))*(sj1));
IkReal x778=((r11)*(sj0));
IkReal x779=((r01)*(sj0));
IkReal x780=((cj6)*(x767));
IkReal x781=((sj6)*(x766));
IkReal x782=((IkReal(1.00000000000000))*(x766));
IkReal x783=((r12)*(x767));
IkReal x784=((cj6)*(x766));
IkReal x785=((cj3)*(x775));
IkReal x786=((sj6)*(x767));
IkReal x787=((r00)*(x786));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x768)*(x781)))+(((x767)*(x771)))+(((x779)*(x784)))+(((IkReal(-1.00000000000000))*(x768)*(x783)))+(((IkReal(-1.00000000000000))*(r11)*(x768)*(x784)))+(((r00)*(sj0)*(x781))));
evalcond[1]=((((r20)*(x781)))+(((IkReal(-1.00000000000000))*(cj3)*(x769)))+(((cj3)*(x777)))+(((r21)*(x784)))+(((sj3)*(x773)))+(((sj3)*(x775)))+(((r22)*(x767))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x768)*(x786)))+(((IkReal(-1.00000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(x771)*(x782)))+(((sj0)*(x787)))+(((x779)*(x780)))+(((cj0)*(r12)*(x766)))+(((IkReal(-1.00000000000000))*(r11)*(x768)*(x780))));
evalcond[3]=((((r20)*(x786)))+(((x770)*(x777)))+(((r21)*(x780)))+(((IkReal(-1.00000000000000))*(x769)*(x770)))+(((IkReal(-1.00000000000000))*(x775)*(x776)))+(((IkReal(-1.00000000000000))*(r22)*(x782)))+(((IkReal(-1.00000000000000))*(x773)*(x776))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj3)*(x773)))+(((IkReal(-1.00000000000000))*(x785)))+(((cj0)*(r02)*(x767)))+(((x774)*(x781)))+(((sj0)*(x783)))+(((x778)*(x784)))+(((cj0)*(r00)*(x781)))+(((sj3)*(x777)))+(((x772)*(x784)))+(((IkReal(-1.00000000000000))*(sj3)*(x769))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x766)*(x768)))+(((IkReal(-1.00000000000000))*(r12)*(sj0)*(x782)))+(((x774)*(x786)))+(((x769)*(x776)))+(((x778)*(x780)))+(((IkReal(-1.00000000000000))*(x776)*(x777)))+(((cj0)*(x787)))+(((x772)*(x780)))+(((IkReal(-1.00000000000000))*(x770)*(x775)))+(((IkReal(-1.00000000000000))*(x770)*(x773))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x788=((cj0)*(sj4));
IkReal x789=((sj0)*(sj4));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r12)*(x788)))+(((r02)*(x789))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x789)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x789)))+(((r10)*(sj6)*(x788)))+(((cj6)*(r11)*(x788))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r12)*(x788)))+(((r02)*(x789)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x789)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x789)))+(((r10)*(sj6)*(x788)))+(((cj6)*(r11)*(x788)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x790=IKsin(j5);
IkReal x791=IKcos(j5);
IkReal x792=((IkReal(1.00000000000000))*(cj0));
IkReal x793=((IkReal(0.998487463595442))*(cj1));
IkReal x794=((cj4)*(sj3));
IkReal x795=((r02)*(sj0));
IkReal x796=((cj0)*(r01));
IkReal x797=((IkReal(0.0549798603375872))*(cj1));
IkReal x798=((r10)*(sj0));
IkReal x799=((IkReal(0.998487463595442))*(sj1));
IkReal x800=((cj3)*(cj4));
IkReal x801=((IkReal(0.0549798603375872))*(sj1));
IkReal x802=((r11)*(sj0));
IkReal x803=((r01)*(sj0));
IkReal x804=((cj6)*(x791));
IkReal x805=((sj6)*(x790));
IkReal x806=((IkReal(1.00000000000000))*(x790));
IkReal x807=((r12)*(x791));
IkReal x808=((cj6)*(x790));
IkReal x809=((cj3)*(x799));
IkReal x810=((sj6)*(x791));
IkReal x811=((r00)*(x810));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x792)*(x808)))+(((x803)*(x808)))+(((r00)*(sj0)*(x805)))+(((IkReal(-1.00000000000000))*(r10)*(x792)*(x805)))+(((IkReal(-1.00000000000000))*(x792)*(x807)))+(((x791)*(x795))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x793)))+(((r21)*(x808)))+(((cj3)*(x801)))+(((r22)*(x791)))+(((r20)*(x805)))+(((sj3)*(x799)))+(((sj3)*(x797))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x792)*(x810)))+(((IkReal(-1.00000000000000))*(sj4)))+(((sj0)*(x811)))+(((IkReal(-1.00000000000000))*(r11)*(x792)*(x804)))+(((x803)*(x804)))+(((cj0)*(r12)*(x790)))+(((IkReal(-1.00000000000000))*(x795)*(x806))));
evalcond[3]=((((r20)*(x810)))+(((r21)*(x804)))+(((IkReal(-1.00000000000000))*(x799)*(x800)))+(((IkReal(-1.00000000000000))*(x797)*(x800)))+(((IkReal(-1.00000000000000))*(x793)*(x794)))+(((IkReal(-1.00000000000000))*(r22)*(x806)))+(((x794)*(x801))));
evalcond[4]=((((cj0)*(r02)*(x791)))+(((IkReal(-1.00000000000000))*(cj3)*(x797)))+(((sj3)*(x801)))+(((x798)*(x805)))+(((sj0)*(x807)))+(((cj0)*(r00)*(x805)))+(((IkReal(-1.00000000000000))*(x809)))+(((IkReal(-1.00000000000000))*(sj3)*(x793)))+(((x802)*(x808)))+(((x796)*(x808))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x794)*(x799)))+(((IkReal(-1.00000000000000))*(x794)*(x797)))+(((x793)*(x800)))+(((cj0)*(x811)))+(((IkReal(-1.00000000000000))*(r12)*(sj0)*(x806)))+(((IkReal(-1.00000000000000))*(r02)*(x790)*(x792)))+(((IkReal(-1.00000000000000))*(x800)*(x801)))+(((x802)*(x804)))+(((x798)*(x810)))+(((x796)*(x804))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x812=(cj1)*(cj1);
IkReal x813=((IkReal(9.98487463595442e-5))*(sj4));
IkReal x814=((IkReal(5.49798603375872e-6))*(sj4));
IkReal x815=((cj1)*(r21)*(sj6));
IkReal x816=((cj6)*(r20)*(sj1));
IkReal x817=((IkReal(0.998487463595442))*(pz)*(sj4));
IkReal x818=((cj1)*(cj6)*(r20));
IkReal x819=((sj4)*(x812));
IkReal x820=((IkReal(0.0549798603375872))*(pz)*(sj4));
IkReal x821=((r21)*(sj1)*(sj6));
IkReal x822=((cj1)*(sj1)*(sj4));
if( IKabs(((gconst1)*(((((IkReal(-0.247179554102935))*(x815)))+(((IkReal(0.00855486626852856))*(x819)))+(((IkReal(-0.0217227538188447))*(x816)))+(((x814)*(x815)))+(((IkReal(-1.00000000000000))*(x814)*(x818)))+(((x813)*(x821)))+(((IkReal(0.155364649335451))*(x822)))+(((IkReal(-1.00000000000000))*(x813)*(x816)))+(((IkReal(0.247179554102935))*(x818)))+(((IkReal(-1.00000000000000))*(sj1)*(x817)))+(((IkReal(-1.00000000000000))*(cj1)*(x820)))+(((IkReal(0.0217227538188447))*(x821))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-0.247179554102935))*(x821)))+(((IkReal(-0.155364649335451))*(x819)))+(((x814)*(x821)))+(((x813)*(x818)))+(((IkReal(-0.0217227538188447))*(x815)))+(((IkReal(-1.00000000000000))*(x814)*(x816)))+(((IkReal(-1.00000000000000))*(x813)*(x815)))+(((IkReal(0.00855486626852856))*(x822)))+(((IkReal(0.247179554102935))*(x816)))+(((IkReal(0.0217227538188447))*(x818)))+(((IkReal(-1.00000000000000))*(sj1)*(x820)))+(((cj1)*(x817))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((IkReal(-0.247179554102935))*(x815)))+(((IkReal(0.00855486626852856))*(x819)))+(((IkReal(-0.0217227538188447))*(x816)))+(((x814)*(x815)))+(((IkReal(-1.00000000000000))*(x814)*(x818)))+(((x813)*(x821)))+(((IkReal(0.155364649335451))*(x822)))+(((IkReal(-1.00000000000000))*(x813)*(x816)))+(((IkReal(0.247179554102935))*(x818)))+(((IkReal(-1.00000000000000))*(sj1)*(x817)))+(((IkReal(-1.00000000000000))*(cj1)*(x820)))+(((IkReal(0.0217227538188447))*(x821)))))), ((gconst1)*(((((IkReal(-0.247179554102935))*(x821)))+(((IkReal(-0.155364649335451))*(x819)))+(((x814)*(x821)))+(((x813)*(x818)))+(((IkReal(-0.0217227538188447))*(x815)))+(((IkReal(-1.00000000000000))*(x814)*(x816)))+(((IkReal(-1.00000000000000))*(x813)*(x815)))+(((IkReal(0.00855486626852856))*(x822)))+(((IkReal(0.247179554102935))*(x816)))+(((IkReal(0.0217227538188447))*(x818)))+(((IkReal(-1.00000000000000))*(sj1)*(x820)))+(((cj1)*(x817)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x823=IKsin(j3);
IkReal x824=IKcos(j3);
IkReal x825=((IkReal(0.000100000000000000))*(cj0));
IkReal x826=((cj6)*(r00));
IkReal x827=((IkReal(0.998487463595442))*(sj4));
IkReal x828=((r01)*(sj6));
IkReal x829=((IkReal(0.247179554102935))*(cj1));
IkReal x830=((IkReal(0.000100000000000000))*(sj0));
IkReal x831=((r11)*(sj6));
IkReal x832=((cj6)*(r10));
IkReal x833=((IkReal(0.0549798603375872))*(sj4));
IkReal x834=((cj6)*(r20));
IkReal x835=((r21)*(sj6));
IkReal x836=((sj1)*(x823));
IkReal x837=((sj1)*(x824));
IkReal x838=((cj1)*(x824));
IkReal x839=((cj1)*(x823));
evalcond[0]=((((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x824)*(x829)))+(pz)+(((IkReal(-0.000100000000000000))*(x835)))+(((IkReal(0.000100000000000000))*(x834)))+(((IkReal(0.247179554102935))*(x836)))+(((IkReal(0.0217227538188447))*(x839)))+(((IkReal(0.0217227538188447))*(x837))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x827)*(x839)))+(((IkReal(-1.00000000000000))*(x827)*(x837)))+(((IkReal(-1.00000000000000))*(x833)*(x838)))+(((x833)*(x836)))+(((IkReal(-1.00000000000000))*(x835)))+(x834));
evalcond[2]=((((IkReal(-1.00000000000000))*(x827)*(x836)))+(((cj0)*(x826)))+(((IkReal(-1.00000000000000))*(x833)*(x837)))+(((IkReal(-1.00000000000000))*(x833)*(x839)))+(((x827)*(x838)))+(((IkReal(-1.00000000000000))*(cj0)*(x828)))+(((IkReal(-1.00000000000000))*(sj0)*(x831)))+(((sj0)*(x832))));
evalcond[3]=((((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(x823)*(x829)))+(((x825)*(x826)))+(((IkReal(-1.00000000000000))*(x830)*(x831)))+(((x830)*(x832)))+(((IkReal(-0.0217227538188447))*(x838)))+(((IkReal(-0.247179554102935))*(x837)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.0217227538188447))*(x836)))+(((IkReal(-1.00000000000000))*(x825)*(x828))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x840=(cj6)*(cj6);
IkReal x841=(cj0)*(cj0);
IkReal x842=(sj0)*(sj0);
IkReal x843=(sj6)*(sj6);
IkReal x844=((IkReal(2.00000000000000))*(r11));
IkReal x845=((cj0)*(sj0));
IkReal x846=((cj6)*(sj6));
IkReal x847=((IkReal(2.00000000000000))*(r01));
IkReal x848=((IkReal(1.00000000000000))*(x841));
IkReal x849=((IkReal(1.00000000000000))*(x842));
gconst4=IKsign(((((IkReal(2.00000000000000))*(r00)*(r10)*(x843)*(x845)))+(((r00)*(x844)*(x845)*(x846)))+(((IkReal(-1.00000000000000))*(x840)*(x848)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x849)*((r02)*(r02))))+(((IkReal(-1.00000000000000))*(x843)*(x849)*((r00)*(r00))))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x845)))+(((IkReal(-1.00000000000000))*(r10)*(x841)*(x844)*(x846)))+(((IkReal(-1.00000000000000))*(x840)*(x849)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(x842)*(x846)*(x847)))+(((r01)*(x840)*(x844)*(x845)))+(((r10)*(x845)*(x846)*(x847)))+(((IkReal(-1.00000000000000))*(x848)*((r12)*(r12))))+(((IkReal(-1.00000000000000))*(x843)*(x848)*((r10)*(r10))))));
IkReal x850=(cj6)*(cj6);
IkReal x851=(cj0)*(cj0);
IkReal x852=(sj0)*(sj0);
IkReal x853=(sj6)*(sj6);
IkReal x854=((IkReal(2.00000000000000))*(r11));
IkReal x855=((cj0)*(sj0));
IkReal x856=((cj6)*(sj6));
IkReal x857=((IkReal(2.00000000000000))*(r01));
IkReal x858=((IkReal(1.00000000000000))*(x851));
IkReal x859=((IkReal(1.00000000000000))*(x852));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x853)*(x858)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(x852)*(x856)*(x857)))+(((IkReal(-1.00000000000000))*(r10)*(x851)*(x854)*(x856)))+(((r10)*(x855)*(x856)*(x857)))+(((IkReal(-1.00000000000000))*(x850)*(x858)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x853)*(x859)*((r00)*(r00))))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x853)*(x855)))+(((r00)*(x854)*(x855)*(x856)))+(((r01)*(x850)*(x854)*(x855)))+(((IkReal(-1.00000000000000))*(x858)*((r12)*(r12))))+(((IkReal(-1.00000000000000))*(x859)*((r02)*(r02))))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x855)))+(((IkReal(-1.00000000000000))*(x850)*(x859)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x860=((r20)*(sj6));
IkReal x861=((cj0)*(r12));
IkReal x862=((r22)*(sj0));
IkReal x863=((cj6)*(r21));
IkReal x864=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x865=((IkReal(1.00000000000000))*(r02)*(sj0));
gconst5=IKsign(((((r00)*(sj6)*(x862)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x864)))+(((IkReal(-1.00000000000000))*(x860)*(x865)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x864)))+(((x861)*(x863)))+(((cj6)*(r01)*(x862)))+(((x860)*(x861)))+(((IkReal(-1.00000000000000))*(x863)*(x865)))));
IkReal x866=((r20)*(sj6));
IkReal x867=((cj0)*(r12));
IkReal x868=((r22)*(sj0));
IkReal x869=((cj6)*(r21));
IkReal x870=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x871=((IkReal(1.00000000000000))*(r02)*(sj0));
dummyeval[0]=((((r00)*(sj6)*(x868)))+(((x867)*(x869)))+(((IkReal(-1.00000000000000))*(x866)*(x871)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x870)))+(((IkReal(-1.00000000000000))*(x869)*(x871)))+(((x866)*(x867)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x870)))+(((cj6)*(r01)*(x868))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x872=((r00)*(sj0));
IkReal x873=((IkReal(0.0549798603375872))*(cj6));
IkReal x874=((cj3)*(sj1));
IkReal x875=((cj0)*(r11));
IkReal x876=((cj0)*(r10));
IkReal x877=((IkReal(0.998487463595442))*(sj1));
IkReal x878=((IkReal(0.0549798603375872))*(sj3));
IkReal x879=((r01)*(sj0));
IkReal x880=((r02)*(sj0));
IkReal x881=((IkReal(0.998487463595442))*(cj3));
IkReal x882=((cj1)*(sj6));
IkReal x883=((cj0)*(r12));
IkReal x884=((cj1)*(cj6));
IkReal x885=((IkReal(0.0549798603375872))*(sj6));
IkReal x886=((sj3)*(x879));
IkReal x887=((cj1)*(x883));
IkReal x888=((sj3)*(sj6)*(x877));
if( IKabs(((gconst5)*(((((x881)*(x887)))+(((IkReal(-1.00000000000000))*(sj3)*(x877)*(x883)))+(((IkReal(0.0549798603375872))*(x874)*(x880)))+(((sj3)*(x877)*(x880)))+(((IkReal(-0.0549798603375872))*(x874)*(x883)))+(((cj1)*(x878)*(x880)))+(((IkReal(-1.00000000000000))*(cj1)*(x880)*(x881)))+(((IkReal(-1.00000000000000))*(x878)*(x887))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((x873)*(x874)*(x875)))+(((IkReal(-1.00000000000000))*(cj6)*(x877)*(x886)))+(((IkReal(-1.00000000000000))*(x872)*(x878)*(x882)))+(((IkReal(-1.00000000000000))*(cj1)*(x873)*(x886)))+(((x874)*(x876)*(x885)))+(((x876)*(x888)))+(((IkReal(-1.00000000000000))*(x875)*(x881)*(x884)))+(((IkReal(-1.00000000000000))*(x876)*(x881)*(x882)))+(((IkReal(-1.00000000000000))*(x872)*(x874)*(x885)))+(((x872)*(x881)*(x882)))+(((cj6)*(sj3)*(x875)*(x877)))+(((IkReal(-1.00000000000000))*(x872)*(x888)))+(((x879)*(x881)*(x884)))+(((x876)*(x878)*(x882)))+(((IkReal(-1.00000000000000))*(x873)*(x874)*(x879)))+(((cj1)*(sj3)*(x873)*(x875))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst5)*(((((x881)*(x887)))+(((IkReal(-1.00000000000000))*(sj3)*(x877)*(x883)))+(((IkReal(0.0549798603375872))*(x874)*(x880)))+(((sj3)*(x877)*(x880)))+(((IkReal(-0.0549798603375872))*(x874)*(x883)))+(((cj1)*(x878)*(x880)))+(((IkReal(-1.00000000000000))*(cj1)*(x880)*(x881)))+(((IkReal(-1.00000000000000))*(x878)*(x887)))))), ((gconst5)*(((((x873)*(x874)*(x875)))+(((IkReal(-1.00000000000000))*(cj6)*(x877)*(x886)))+(((IkReal(-1.00000000000000))*(x872)*(x878)*(x882)))+(((IkReal(-1.00000000000000))*(cj1)*(x873)*(x886)))+(((x874)*(x876)*(x885)))+(((x876)*(x888)))+(((IkReal(-1.00000000000000))*(x875)*(x881)*(x884)))+(((IkReal(-1.00000000000000))*(x876)*(x881)*(x882)))+(((IkReal(-1.00000000000000))*(x872)*(x874)*(x885)))+(((x872)*(x881)*(x882)))+(((cj6)*(sj3)*(x875)*(x877)))+(((IkReal(-1.00000000000000))*(x872)*(x888)))+(((x879)*(x881)*(x884)))+(((x876)*(x878)*(x882)))+(((IkReal(-1.00000000000000))*(x873)*(x874)*(x879)))+(((cj1)*(sj3)*(x873)*(x875)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x889=IKsin(j5);
IkReal x890=IKcos(j5);
IkReal x891=((IkReal(1.00000000000000))*(cj0));
IkReal x892=((IkReal(0.998487463595442))*(cj1));
IkReal x893=((cj4)*(sj3));
IkReal x894=((r02)*(sj0));
IkReal x895=((cj0)*(r01));
IkReal x896=((IkReal(0.0549798603375872))*(cj1));
IkReal x897=((r10)*(sj0));
IkReal x898=((IkReal(0.998487463595442))*(sj1));
IkReal x899=((cj3)*(cj4));
IkReal x900=((IkReal(0.0549798603375872))*(sj1));
IkReal x901=((r11)*(sj0));
IkReal x902=((r01)*(sj0));
IkReal x903=((cj6)*(x890));
IkReal x904=((sj6)*(x889));
IkReal x905=((IkReal(1.00000000000000))*(x889));
IkReal x906=((r12)*(x890));
IkReal x907=((cj6)*(x889));
IkReal x908=((cj3)*(x898));
IkReal x909=((sj6)*(x890));
IkReal x910=((r00)*(x909));
evalcond[0]=((((IkReal(-1.00000000000000))*(x891)*(x906)))+(((IkReal(-1.00000000000000))*(r10)*(x891)*(x904)))+(((r00)*(sj0)*(x904)))+(((IkReal(-1.00000000000000))*(r11)*(x891)*(x907)))+(((x902)*(x907)))+(((x890)*(x894))));
evalcond[1]=((((r21)*(x907)))+(((IkReal(-1.00000000000000))*(cj3)*(x892)))+(((r20)*(x904)))+(((cj3)*(x900)))+(((sj3)*(x896)))+(((sj3)*(x898)))+(((r22)*(x890))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj4)))+(((cj0)*(r12)*(x889)))+(((IkReal(-1.00000000000000))*(r10)*(x891)*(x909)))+(((IkReal(-1.00000000000000))*(r11)*(x891)*(x903)))+(((IkReal(-1.00000000000000))*(x894)*(x905)))+(((x902)*(x903)))+(((sj0)*(x910))));
evalcond[3]=((((r21)*(x903)))+(((IkReal(-1.00000000000000))*(x892)*(x893)))+(((IkReal(-1.00000000000000))*(r22)*(x905)))+(((IkReal(-1.00000000000000))*(x898)*(x899)))+(((IkReal(-1.00000000000000))*(x896)*(x899)))+(((r20)*(x909)))+(((x893)*(x900))));
evalcond[4]=((((sj0)*(x906)))+(((x895)*(x907)))+(((IkReal(-1.00000000000000))*(cj3)*(x896)))+(((sj3)*(x900)))+(((x901)*(x907)))+(((IkReal(-1.00000000000000))*(x908)))+(((x897)*(x904)))+(((cj0)*(r02)*(x890)))+(((IkReal(-1.00000000000000))*(sj3)*(x892)))+(((cj0)*(r00)*(x904))));
evalcond[5]=((((x895)*(x903)))+(((x901)*(x903)))+(((x897)*(x909)))+(((cj0)*(x910)))+(((IkReal(-1.00000000000000))*(r12)*(sj0)*(x905)))+(((x892)*(x899)))+(((IkReal(-1.00000000000000))*(x893)*(x898)))+(((IkReal(-1.00000000000000))*(x893)*(x896)))+(((IkReal(-1.00000000000000))*(x899)*(x900)))+(((IkReal(-1.00000000000000))*(r02)*(x889)*(x891))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x911=((cj0)*(sj4));
IkReal x912=((sj0)*(sj4));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r12)*(x911)))+(((r02)*(x912))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((r10)*(sj6)*(x911)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x912)))+(((cj6)*(r11)*(x911)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x912))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r12)*(x911)))+(((r02)*(x912)))))), ((gconst4)*(((((r10)*(sj6)*(x911)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x912)))+(((cj6)*(r11)*(x911)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x912)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x913=IKsin(j5);
IkReal x914=IKcos(j5);
IkReal x915=((IkReal(1.00000000000000))*(cj0));
IkReal x916=((IkReal(0.998487463595442))*(cj1));
IkReal x917=((cj4)*(sj3));
IkReal x918=((r02)*(sj0));
IkReal x919=((cj0)*(r01));
IkReal x920=((IkReal(0.0549798603375872))*(cj1));
IkReal x921=((r10)*(sj0));
IkReal x922=((IkReal(0.998487463595442))*(sj1));
IkReal x923=((cj3)*(cj4));
IkReal x924=((IkReal(0.0549798603375872))*(sj1));
IkReal x925=((r11)*(sj0));
IkReal x926=((r01)*(sj0));
IkReal x927=((cj6)*(x914));
IkReal x928=((sj6)*(x913));
IkReal x929=((IkReal(1.00000000000000))*(x913));
IkReal x930=((r12)*(x914));
IkReal x931=((cj6)*(x913));
IkReal x932=((cj3)*(x922));
IkReal x933=((sj6)*(x914));
IkReal x934=((r00)*(x933));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x915)*(x931)))+(((x914)*(x918)))+(((IkReal(-1.00000000000000))*(r10)*(x915)*(x928)))+(((IkReal(-1.00000000000000))*(x915)*(x930)))+(((x926)*(x931)))+(((r00)*(sj0)*(x928))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x916)))+(((r21)*(x931)))+(((cj3)*(x924)))+(((r22)*(x914)))+(((r20)*(x928)))+(((sj3)*(x920)))+(((sj3)*(x922))));
evalcond[2]=((((cj0)*(r12)*(x913)))+(((IkReal(-1.00000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(r11)*(x915)*(x927)))+(((sj0)*(x934)))+(((IkReal(-1.00000000000000))*(r10)*(x915)*(x933)))+(((IkReal(-1.00000000000000))*(x918)*(x929)))+(((x926)*(x927))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r22)*(x929)))+(((r21)*(x927)))+(((IkReal(-1.00000000000000))*(x920)*(x923)))+(((x917)*(x924)))+(((r20)*(x933)))+(((IkReal(-1.00000000000000))*(x916)*(x917)))+(((IkReal(-1.00000000000000))*(x922)*(x923))));
evalcond[4]=((((x919)*(x931)))+(((IkReal(-1.00000000000000))*(cj3)*(x920)))+(((sj0)*(x930)))+(((x921)*(x928)))+(((cj0)*(r00)*(x928)))+(((IkReal(-1.00000000000000))*(sj3)*(x916)))+(((cj0)*(r02)*(x914)))+(((x925)*(x931)))+(((sj3)*(x924)))+(((IkReal(-1.00000000000000))*(x932))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(sj0)*(x929)))+(((x919)*(x927)))+(((x916)*(x923)))+(((cj0)*(x934)))+(((x921)*(x933)))+(((IkReal(-1.00000000000000))*(r02)*(x913)*(x915)))+(((x925)*(x927)))+(((IkReal(-1.00000000000000))*(x917)*(x920)))+(((IkReal(-1.00000000000000))*(x917)*(x922)))+(((IkReal(-1.00000000000000))*(x923)*(x924))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x935=((cj0)*(sj4));
IkReal x936=((sj0)*(sj4));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(r12)*(x935)))+(((r02)*(x936))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r10)*(sj6)*(x935)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x936)))+(((cj6)*(r11)*(x935)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x936))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(r12)*(x935)))+(((r02)*(x936)))))), ((gconst3)*(((((r10)*(sj6)*(x935)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x936)))+(((cj6)*(r11)*(x935)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x936)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x937=IKsin(j5);
IkReal x938=IKcos(j5);
IkReal x939=((cj6)*(r11));
IkReal x940=((r00)*(sj6));
IkReal x941=((cj6)*(r01));
IkReal x942=((r10)*(sj6));
IkReal x943=((sj0)*(x938));
IkReal x944=((sj0)*(x937));
IkReal x945=((cj0)*(x937));
IkReal x946=((IkReal(1.00000000000000))*(cj0)*(x938));
evalcond[0]=((((r02)*(x943)))+(((IkReal(-1.00000000000000))*(r12)*(x946)))+(((IkReal(-1.00000000000000))*(x942)*(x945)))+(((IkReal(-1.00000000000000))*(x939)*(x945)))+(((x941)*(x944)))+(((x940)*(x944))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(x939)*(x946)))+(((r12)*(x945)))+(((IkReal(-1.00000000000000))*(x942)*(x946)))+(((IkReal(-1.00000000000000))*(r02)*(x944)))+(((x941)*(x943)))+(((x940)*(x943))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((sj4)*((sj1)*(sj1))))+(((sj4)*((cj1)*(cj1))))));
dummyeval[0]=((((sj4)*((sj1)*(sj1))))+(((sj4)*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((IkReal(0.00810000000000000))*((cj1)*(cj1))))+(((IkReal(0.00810000000000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x947=((sj0)*(sj5));
IkReal x948=((r00)*(sj6));
IkReal x949=((cj6)*(r01));
IkReal x950=((cj5)*(sj0));
IkReal x951=((cj0)*(sj6));
IkReal x952=((IkReal(1.00000000000000))*(r10));
IkReal x953=((cj6)*(r00));
IkReal x954=((cj6)*(r10));
IkReal x955=((cj0)*(cj6));
IkReal x956=((IkReal(1.00000000000000))*(r11));
IkReal x957=((cj0)*(r12));
IkReal x958=((IkReal(0.000100000000000000))*(sj0));
IkReal x959=((IkReal(1.00000000000000))*(sj0)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r01)*(x959)))+(((sj0)*(x953)))+(((r11)*(x951)))+(((IkReal(-1.00000000000000))*(x952)*(x955))));
evalcond[2]=((IkReal(0.000100000000000000))+(((IkReal(0.000100000000000000))*(r11)*(x951)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x958)))+(((IkReal(-0.000100000000000000))*(cj0)*(x954)))+(((px)*(sj0)))+(((x953)*(x958)))+(((IkReal(-1.00000000000000))*(cj0)*(py))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj5)*(x955)*(x956)))+(((IkReal(-1.00000000000000))*(sj5)*(x951)*(x952)))+(((x947)*(x948)))+(((x947)*(x949)))+(((IkReal(-1.00000000000000))*(cj5)*(x957)))+(((r02)*(x950))));
evalcond[4]=((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6))));
evalcond[5]=((((x949)*(x950)))+(((IkReal(-1.00000000000000))*(r02)*(x947)))+(((x948)*(x950)))+(((IkReal(-1.00000000000000))*(cj5)*(x951)*(x952)))+(((sj5)*(x957)))+(((IkReal(-1.00000000000000))*(cj5)*(x955)*(x956))));
evalcond[6]=((((sj0)*(x954)))+(((IkReal(-1.00000000000000))*(r01)*(x951)))+(((IkReal(-1.00000000000000))*(sj0)*(sj6)*(x956)))+(((cj0)*(x953))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((((IkReal(0.00810000000000000))*((cj1)*(cj1))))+(((IkReal(0.00810000000000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x960=(cj1)*(cj1);
IkReal x961=((cj1)*(r21));
IkReal x962=((IkReal(9.98487463595442e-5))*(sj6));
IkReal x963=((cj1)*(sj1));
IkReal x964=((cj6)*(r20));
IkReal x965=((IkReal(5.49798603375872e-6))*(sj1));
IkReal x966=((IkReal(0.0549798603375872))*(pz));
IkReal x967=((IkReal(0.0217227538188447))*(sj5));
IkReal x968=((IkReal(0.998487463595442))*(pz));
IkReal x969=((r20)*(sj6));
IkReal x970=((cj6)*(r21));
IkReal x971=((IkReal(0.247179554102935))*(sj5));
IkReal x972=((cj5)*(r22)*(sj1));
IkReal x973=((sj1)*(x971));
IkReal x974=((cj1)*(cj5)*(r22));
if( IKabs(((gconst8)*(((((IkReal(-0.00855486626852856))*(x963)))+(((IkReal(0.155364649335451))*(x960)))+(((IkReal(-1.00000000000000))*(cj1)*(x968)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x965)))+(((x961)*(x962)))+(((IkReal(-0.0217227538188447))*(x972)))+(((IkReal(-1.00000000000000))*(sj1)*(x967)*(x970)))+(((IkReal(-9.98487463595442e-5))*(cj1)*(x964)))+(((IkReal(-1.00000000000000))*(sj1)*(x967)*(x969)))+(((x964)*(x965)))+(((sj1)*(x966)))+(((cj6)*(x961)*(x971)))+(((IkReal(0.247179554102935))*(x974)))+(((cj1)*(x969)*(x971))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-9.98487463595442e-5))*(sj1)*(x964)))+(((x969)*(x973)))+(((IkReal(0.155364649335451))*(x963)))+(((IkReal(-1.00000000000000))*(cj1)*(x966)))+(((IkReal(0.247179554102935))*(x972)))+(((IkReal(0.0217227538188447))*(x974)))+(((IkReal(-1.00000000000000))*(sj1)*(x968)))+(((IkReal(0.00855486626852856))*(x960)))+(((cj6)*(x961)*(x967)))+(((IkReal(5.49798603375872e-6))*(sj6)*(x961)))+(((x970)*(x973)))+(((IkReal(-5.49798603375872e-6))*(cj1)*(x964)))+(((cj1)*(x967)*(x969)))+(((r21)*(sj1)*(x962))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst8)*(((((IkReal(-0.00855486626852856))*(x963)))+(((IkReal(0.155364649335451))*(x960)))+(((IkReal(-1.00000000000000))*(cj1)*(x968)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x965)))+(((x961)*(x962)))+(((IkReal(-0.0217227538188447))*(x972)))+(((IkReal(-1.00000000000000))*(sj1)*(x967)*(x970)))+(((IkReal(-9.98487463595442e-5))*(cj1)*(x964)))+(((IkReal(-1.00000000000000))*(sj1)*(x967)*(x969)))+(((x964)*(x965)))+(((sj1)*(x966)))+(((cj6)*(x961)*(x971)))+(((IkReal(0.247179554102935))*(x974)))+(((cj1)*(x969)*(x971)))))), ((gconst8)*(((((IkReal(-9.98487463595442e-5))*(sj1)*(x964)))+(((x969)*(x973)))+(((IkReal(0.155364649335451))*(x963)))+(((IkReal(-1.00000000000000))*(cj1)*(x966)))+(((IkReal(0.247179554102935))*(x972)))+(((IkReal(0.0217227538188447))*(x974)))+(((IkReal(-1.00000000000000))*(sj1)*(x968)))+(((IkReal(0.00855486626852856))*(x960)))+(((cj6)*(x961)*(x967)))+(((IkReal(5.49798603375872e-6))*(sj6)*(x961)))+(((x970)*(x973)))+(((IkReal(-5.49798603375872e-6))*(cj1)*(x964)))+(((cj1)*(x967)*(x969)))+(((r21)*(sj1)*(x962)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x975=IKsin(j3);
IkReal x976=IKcos(j3);
IkReal x977=((IkReal(0.000100000000000000))*(cj0));
IkReal x978=((sj0)*(sj5));
IkReal x979=((cj6)*(r11));
IkReal x980=((r10)*(sj6));
IkReal x981=((cj5)*(cj6));
IkReal x982=((cj5)*(sj0));
IkReal x983=((IkReal(0.247179554102935))*(cj1));
IkReal x984=((IkReal(1.00000000000000))*(sj5));
IkReal x985=((IkReal(0.000100000000000000))*(sj6));
IkReal x986=((r20)*(sj6));
IkReal x987=((cj0)*(r02));
IkReal x988=((cj0)*(r01));
IkReal x989=((IkReal(0.000100000000000000))*(cj6));
IkReal x990=((cj6)*(sj5));
IkReal x991=((sj1)*(x975));
IkReal x992=((cj0)*(r00)*(sj6));
IkReal x993=((cj1)*(x975));
IkReal x994=((cj1)*(x976));
IkReal x995=((sj1)*(x976));
IkReal x996=((IkReal(0.0549798603375872))*(x991));
IkReal x997=((IkReal(0.998487463595442))*(x993));
IkReal x998=((IkReal(0.998487463595442))*(x995));
IkReal x999=((IkReal(0.0549798603375872))*(x994));
IkReal x1000=((IkReal(0.998487463595442))*(x994));
IkReal x1001=((IkReal(0.998487463595442))*(x991));
IkReal x1002=((IkReal(0.0549798603375872))*(x993));
IkReal x1003=((IkReal(0.0549798603375872))*(x995));
IkReal x1004=((x997)+(x999)+(x998));
IkReal x1005=((x1003)+(x1002)+(x1001));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x985)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(0.247179554102935))*(x991)))+(((IkReal(0.0217227538188447))*(x995)))+(((IkReal(0.0217227538188447))*(x993)))+(pz)+(((IkReal(-1.00000000000000))*(x976)*(x983)))+(((r20)*(x989))));
evalcond[1]=((((cj5)*(r22)))+(x1005)+(((IkReal(-1.00000000000000))*(x1000)))+(((sj5)*(x986)))+(((r21)*(x990))));
evalcond[2]=((((cj5)*(x986)))+(((IkReal(-1.00000000000000))*(x1004)))+(((r21)*(x981)))+(x996)+(((IkReal(-1.00000000000000))*(r22)*(x984))));
evalcond[3]=((((IkReal(-0.0217227538188447))*(x994)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x977)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x985)))+(((IkReal(0.0217227538188447))*(x991)))+(((cj6)*(r00)*(x977)))+(((IkReal(-0.247179554102935))*(x995)))+(((r10)*(sj0)*(x989)))+(((IkReal(-1.00000000000000))*(x975)*(x983)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[4]=((((x978)*(x979)))+(((cj5)*(x987)))+(((IkReal(-1.00000000000000))*(x1004)))+(((x988)*(x990)))+(((sj5)*(x992)))+(((r12)*(x982)))+(x996)+(((x978)*(x980))));
evalcond[5]=((((x981)*(x988)))+(x1000)+(((IkReal(-1.00000000000000))*(x1005)))+(((cj5)*(x992)))+(((x979)*(x982)))+(((IkReal(-1.00000000000000))*(r12)*(x978)))+(((IkReal(-1.00000000000000))*(x984)*(x987)))+(((x980)*(x982))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1006=((cj1)*(r22));
IkReal x1007=((IkReal(0.998487463595442))*(cj5));
IkReal x1008=((IkReal(0.0549798603375872))*(sj5));
IkReal x1009=((IkReal(0.998487463595442))*(sj5));
IkReal x1010=((r22)*(sj1));
IkReal x1011=((IkReal(0.0549798603375872))*(cj5));
IkReal x1012=((cj1)*(cj6)*(r21));
IkReal x1013=((cj1)*(r20)*(sj6));
IkReal x1014=((cj6)*(r21)*(sj1));
IkReal x1015=((r20)*(sj1)*(sj6));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(x1011)*(x1015)))+(((IkReal(-1.00000000000000))*(x1011)*(x1014)))+(((IkReal(-1.00000000000000))*(x1009)*(x1014)))+(((IkReal(-1.00000000000000))*(x1009)*(x1015)))+(((IkReal(-1.00000000000000))*(x1006)*(x1011)))+(((IkReal(-1.00000000000000))*(x1008)*(x1012)))+(((IkReal(-1.00000000000000))*(x1008)*(x1013)))+(((IkReal(-1.00000000000000))*(x1006)*(x1009)))+(((IkReal(-1.00000000000000))*(x1007)*(x1010)))+(((x1007)*(x1012)))+(((x1007)*(x1013)))+(((x1008)*(x1010))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(x1010)*(x1011)))+(((x1009)*(x1012)))+(((x1009)*(x1013)))+(((IkReal(-1.00000000000000))*(x1009)*(x1010)))+(((IkReal(-1.00000000000000))*(x1008)*(x1014)))+(((IkReal(-1.00000000000000))*(x1008)*(x1015)))+(((IkReal(-1.00000000000000))*(x1006)*(x1008)))+(((x1006)*(x1007)))+(((x1007)*(x1014)))+(((x1007)*(x1015)))+(((x1011)*(x1012)))+(((x1011)*(x1013))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(x1011)*(x1015)))+(((IkReal(-1.00000000000000))*(x1011)*(x1014)))+(((IkReal(-1.00000000000000))*(x1009)*(x1014)))+(((IkReal(-1.00000000000000))*(x1009)*(x1015)))+(((IkReal(-1.00000000000000))*(x1006)*(x1011)))+(((IkReal(-1.00000000000000))*(x1008)*(x1012)))+(((IkReal(-1.00000000000000))*(x1008)*(x1013)))+(((IkReal(-1.00000000000000))*(x1006)*(x1009)))+(((IkReal(-1.00000000000000))*(x1007)*(x1010)))+(((x1007)*(x1012)))+(((x1007)*(x1013)))+(((x1008)*(x1010)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(x1010)*(x1011)))+(((x1009)*(x1012)))+(((x1009)*(x1013)))+(((IkReal(-1.00000000000000))*(x1009)*(x1010)))+(((IkReal(-1.00000000000000))*(x1008)*(x1014)))+(((IkReal(-1.00000000000000))*(x1008)*(x1015)))+(((IkReal(-1.00000000000000))*(x1006)*(x1008)))+(((x1006)*(x1007)))+(((x1007)*(x1014)))+(((x1007)*(x1015)))+(((x1011)*(x1012)))+(((x1011)*(x1013)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1016=IKsin(j3);
IkReal x1017=IKcos(j3);
IkReal x1018=((IkReal(0.000100000000000000))*(cj0));
IkReal x1019=((sj0)*(sj5));
IkReal x1020=((cj6)*(r11));
IkReal x1021=((r10)*(sj6));
IkReal x1022=((cj5)*(cj6));
IkReal x1023=((cj5)*(sj0));
IkReal x1024=((IkReal(0.247179554102935))*(cj1));
IkReal x1025=((IkReal(1.00000000000000))*(sj5));
IkReal x1026=((IkReal(0.000100000000000000))*(sj6));
IkReal x1027=((r20)*(sj6));
IkReal x1028=((cj0)*(r02));
IkReal x1029=((cj0)*(r01));
IkReal x1030=((IkReal(0.000100000000000000))*(cj6));
IkReal x1031=((cj6)*(sj5));
IkReal x1032=((sj1)*(x1016));
IkReal x1033=((cj0)*(r00)*(sj6));
IkReal x1034=((cj1)*(x1016));
IkReal x1035=((cj1)*(x1017));
IkReal x1036=((sj1)*(x1017));
IkReal x1037=((IkReal(0.0549798603375872))*(x1032));
IkReal x1038=((IkReal(0.998487463595442))*(x1034));
IkReal x1039=((IkReal(0.998487463595442))*(x1036));
IkReal x1040=((IkReal(0.0549798603375872))*(x1035));
IkReal x1041=((IkReal(0.998487463595442))*(x1035));
IkReal x1042=((IkReal(0.998487463595442))*(x1032));
IkReal x1043=((IkReal(0.0549798603375872))*(x1034));
IkReal x1044=((IkReal(0.0549798603375872))*(x1036));
IkReal x1045=((x1040)+(x1038)+(x1039));
IkReal x1046=((x1043)+(x1042)+(x1044));
evalcond[0]=((((IkReal(0.247179554102935))*(x1032)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(r21)*(x1026)))+(pz)+(((r20)*(x1030)))+(((IkReal(0.0217227538188447))*(x1034)))+(((IkReal(0.0217227538188447))*(x1036)))+(((IkReal(-1.00000000000000))*(x1017)*(x1024))));
evalcond[1]=((((cj5)*(r22)))+(x1046)+(((r21)*(x1031)))+(((sj5)*(x1027)))+(((IkReal(-1.00000000000000))*(x1041))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r22)*(x1025)))+(((r21)*(x1022)))+(x1037)+(((cj5)*(x1027)))+(((IkReal(-1.00000000000000))*(x1045))));
evalcond[3]=((((cj6)*(r00)*(x1018)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1018)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-0.247179554102935))*(x1036)))+(((IkReal(-0.0217227538188447))*(x1035)))+(((r10)*(sj0)*(x1030)))+(((IkReal(0.0217227538188447))*(x1032)))+(((IkReal(-1.00000000000000))*(x1016)*(x1024)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1026))));
evalcond[4]=((x1037)+(((cj5)*(x1028)))+(((r12)*(x1023)))+(((x1029)*(x1031)))+(((sj5)*(x1033)))+(((x1019)*(x1021)))+(((x1019)*(x1020)))+(((IkReal(-1.00000000000000))*(x1045))));
evalcond[5]=((x1041)+(((cj5)*(x1033)))+(((x1022)*(x1029)))+(((x1021)*(x1023)))+(((x1020)*(x1023)))+(((IkReal(-1.00000000000000))*(r12)*(x1019)))+(((IkReal(-1.00000000000000))*(x1025)*(x1028)))+(((IkReal(-1.00000000000000))*(x1046))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1047=((sj0)*(sj5));
IkReal x1048=((r00)*(sj6));
IkReal x1049=((cj6)*(r01));
IkReal x1050=((cj5)*(sj0));
IkReal x1051=((cj0)*(sj6));
IkReal x1052=((IkReal(1.00000000000000))*(r10));
IkReal x1053=((cj6)*(r00));
IkReal x1054=((cj6)*(r10));
IkReal x1055=((cj0)*(cj6));
IkReal x1056=((IkReal(1.00000000000000))*(r11));
IkReal x1057=((cj0)*(r12));
IkReal x1058=((IkReal(0.000100000000000000))*(sj0));
IkReal x1059=((IkReal(1.00000000000000))*(sj0)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1052)*(x1055)))+(((IkReal(-1.00000000000000))*(r01)*(x1059)))+(((r11)*(x1051)))+(((sj0)*(x1053))));
evalcond[2]=((IkReal(0.000100000000000000))+(((IkReal(-0.000100000000000000))*(cj0)*(x1054)))+(((IkReal(0.000100000000000000))*(r11)*(x1051)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1058)))+(((x1053)*(x1058)))+(((px)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(py))));
evalcond[3]=((((r02)*(x1050)))+(((IkReal(-1.00000000000000))*(sj5)*(x1055)*(x1056)))+(((IkReal(-1.00000000000000))*(cj5)*(x1057)))+(((x1047)*(x1048)))+(((x1047)*(x1049)))+(((IkReal(-1.00000000000000))*(sj5)*(x1051)*(x1052))));
evalcond[4]=((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6))));
evalcond[5]=((((sj5)*(x1057)))+(((IkReal(-1.00000000000000))*(r02)*(x1047)))+(((x1048)*(x1050)))+(((IkReal(-1.00000000000000))*(cj5)*(x1051)*(x1052)))+(((x1049)*(x1050)))+(((IkReal(-1.00000000000000))*(cj5)*(x1055)*(x1056))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r01)*(x1051)))+(((cj0)*(x1053)))+(((sj0)*(x1054)))+(((IkReal(-1.00000000000000))*(sj0)*(sj6)*(x1056))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((IkReal(0.00810000000000000))*((cj1)*(cj1))))+(((IkReal(0.00810000000000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1060=(cj1)*(cj1);
IkReal x1061=((cj1)*(r21));
IkReal x1062=((IkReal(9.98487463595442e-5))*(sj6));
IkReal x1063=((cj1)*(sj1));
IkReal x1064=((cj6)*(r20));
IkReal x1065=((IkReal(5.49798603375872e-6))*(sj1));
IkReal x1066=((IkReal(0.0549798603375872))*(pz));
IkReal x1067=((IkReal(0.0217227538188447))*(sj5));
IkReal x1068=((IkReal(0.998487463595442))*(pz));
IkReal x1069=((r20)*(sj6));
IkReal x1070=((cj6)*(r21));
IkReal x1071=((IkReal(0.247179554102935))*(sj5));
IkReal x1072=((cj5)*(r22)*(sj1));
IkReal x1073=((sj1)*(x1071));
IkReal x1074=((cj1)*(cj5)*(r22));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(r21)*(sj6)*(x1065)))+(((IkReal(-9.98487463595442e-5))*(cj1)*(x1064)))+(((x1061)*(x1062)))+(((IkReal(-0.0217227538188447))*(x1072)))+(((IkReal(-1.00000000000000))*(cj1)*(x1068)))+(((IkReal(-0.00855486626852856))*(x1063)))+(((sj1)*(x1066)))+(((IkReal(-1.00000000000000))*(sj1)*(x1067)*(x1070)))+(((IkReal(-1.00000000000000))*(sj1)*(x1067)*(x1069)))+(((IkReal(0.155364649335451))*(x1060)))+(((cj1)*(x1069)*(x1071)))+(((IkReal(0.247179554102935))*(x1074)))+(((x1064)*(x1065)))+(((cj6)*(x1061)*(x1071))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((cj1)*(x1067)*(x1069)))+(((x1069)*(x1073)))+(((IkReal(0.00855486626852856))*(x1060)))+(((IkReal(5.49798603375872e-6))*(sj6)*(x1061)))+(((x1070)*(x1073)))+(((r21)*(sj1)*(x1062)))+(((IkReal(-1.00000000000000))*(sj1)*(x1068)))+(((IkReal(-1.00000000000000))*(cj1)*(x1066)))+(((IkReal(-5.49798603375872e-6))*(cj1)*(x1064)))+(((IkReal(0.0217227538188447))*(x1074)))+(((IkReal(0.155364649335451))*(x1063)))+(((IkReal(-9.98487463595442e-5))*(sj1)*(x1064)))+(((IkReal(0.247179554102935))*(x1072)))+(((cj6)*(x1061)*(x1067))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(r21)*(sj6)*(x1065)))+(((IkReal(-9.98487463595442e-5))*(cj1)*(x1064)))+(((x1061)*(x1062)))+(((IkReal(-0.0217227538188447))*(x1072)))+(((IkReal(-1.00000000000000))*(cj1)*(x1068)))+(((IkReal(-0.00855486626852856))*(x1063)))+(((sj1)*(x1066)))+(((IkReal(-1.00000000000000))*(sj1)*(x1067)*(x1070)))+(((IkReal(-1.00000000000000))*(sj1)*(x1067)*(x1069)))+(((IkReal(0.155364649335451))*(x1060)))+(((cj1)*(x1069)*(x1071)))+(((IkReal(0.247179554102935))*(x1074)))+(((x1064)*(x1065)))+(((cj6)*(x1061)*(x1071)))))), ((gconst10)*(((((cj1)*(x1067)*(x1069)))+(((x1069)*(x1073)))+(((IkReal(0.00855486626852856))*(x1060)))+(((IkReal(5.49798603375872e-6))*(sj6)*(x1061)))+(((x1070)*(x1073)))+(((r21)*(sj1)*(x1062)))+(((IkReal(-1.00000000000000))*(sj1)*(x1068)))+(((IkReal(-1.00000000000000))*(cj1)*(x1066)))+(((IkReal(-5.49798603375872e-6))*(cj1)*(x1064)))+(((IkReal(0.0217227538188447))*(x1074)))+(((IkReal(0.155364649335451))*(x1063)))+(((IkReal(-9.98487463595442e-5))*(sj1)*(x1064)))+(((IkReal(0.247179554102935))*(x1072)))+(((cj6)*(x1061)*(x1067)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1075=IKsin(j3);
IkReal x1076=IKcos(j3);
IkReal x1077=((cj5)*(cj6));
IkReal x1078=((sj0)*(sj5));
IkReal x1079=((r10)*(sj6));
IkReal x1080=((IkReal(0.000100000000000000))*(cj0));
IkReal x1081=((cj5)*(sj0));
IkReal x1082=((IkReal(0.247179554102935))*(cj1));
IkReal x1083=((IkReal(1.00000000000000))*(sj5));
IkReal x1084=((r11)*(sj0));
IkReal x1085=((IkReal(0.000100000000000000))*(sj6));
IkReal x1086=((r20)*(sj6));
IkReal x1087=((cj0)*(r02));
IkReal x1088=((cj0)*(r01));
IkReal x1089=((IkReal(0.000100000000000000))*(cj6));
IkReal x1090=((cj6)*(sj5));
IkReal x1091=((sj1)*(x1075));
IkReal x1092=((cj0)*(r00)*(sj6));
IkReal x1093=((cj1)*(x1075));
IkReal x1094=((cj1)*(x1076));
IkReal x1095=((sj1)*(x1076));
IkReal x1096=((IkReal(0.0549798603375872))*(x1091));
IkReal x1097=((IkReal(0.998487463595442))*(x1093));
IkReal x1098=((IkReal(0.998487463595442))*(x1095));
IkReal x1099=((IkReal(0.0549798603375872))*(x1094));
IkReal x1100=((IkReal(0.998487463595442))*(x1091));
IkReal x1101=((IkReal(0.0549798603375872))*(x1093));
IkReal x1102=((IkReal(0.0549798603375872))*(x1095));
IkReal x1103=((IkReal(0.998487463595442))*(x1094));
IkReal x1104=((x1097)+(x1098)+(x1099));
IkReal x1105=((x1102)+(x1100)+(x1101));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x1085)))+(((r20)*(x1089)))+(((IkReal(0.247179554102935))*(x1091)))+(((IkReal(-0.155600000000000))*(cj1)))+(pz)+(((IkReal(-1.00000000000000))*(x1076)*(x1082)))+(((IkReal(0.0217227538188447))*(x1095)))+(((IkReal(0.0217227538188447))*(x1093))));
evalcond[1]=((((cj5)*(r22)))+(x1105)+(((sj5)*(x1086)))+(((r21)*(x1090)))+(((IkReal(-1.00000000000000))*(x1103))));
evalcond[2]=((x1104)+(((cj5)*(x1086)))+(((IkReal(-1.00000000000000))*(x1096)))+(((r21)*(x1077)))+(((IkReal(-1.00000000000000))*(r22)*(x1083))));
evalcond[3]=((((IkReal(-0.247179554102935))*(x1095)))+(((r10)*(sj0)*(x1089)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1080)))+(((IkReal(-0.155600000000000))*(sj1)))+(((cj6)*(r00)*(x1080)))+(((IkReal(-0.0217227538188447))*(x1094)))+(((IkReal(-1.00000000000000))*(x1084)*(x1085)))+(((IkReal(0.0217227538188447))*(x1091)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(-1.00000000000000))*(x1075)*(x1082))));
evalcond[4]=((((cj6)*(r11)*(x1078)))+(((cj5)*(x1087)))+(x1096)+(((x1078)*(x1079)))+(((r12)*(x1081)))+(((x1088)*(x1090)))+(((IkReal(-1.00000000000000))*(x1104)))+(((sj5)*(x1092))));
evalcond[5]=((((x1079)*(x1081)))+(x1105)+(((IkReal(-1.00000000000000))*(r12)*(x1078)))+(((cj5)*(x1092)))+(((x1077)*(x1088)))+(((x1077)*(x1084)))+(((IkReal(-1.00000000000000))*(x1103)))+(((IkReal(-1.00000000000000))*(x1083)*(x1087))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1106=((cj1)*(r22));
IkReal x1107=((IkReal(0.998487463595442))*(cj5));
IkReal x1108=((IkReal(0.0549798603375872))*(sj5));
IkReal x1109=((r22)*(sj1));
IkReal x1110=((IkReal(0.0549798603375872))*(cj5));
IkReal x1111=((IkReal(0.998487463595442))*(sj5));
IkReal x1112=((cj1)*(cj6)*(r21));
IkReal x1113=((cj1)*(r20)*(sj6));
IkReal x1114=((cj6)*(r21)*(sj1));
IkReal x1115=((r20)*(sj1)*(sj6));
if( IKabs(((gconst11)*(((((x1108)*(x1109)))+(((x1108)*(x1113)))+(((x1108)*(x1112)))+(((x1111)*(x1114)))+(((x1111)*(x1115)))+(((IkReal(-1.00000000000000))*(x1106)*(x1111)))+(((IkReal(-1.00000000000000))*(x1110)*(x1115)))+(((IkReal(-1.00000000000000))*(x1110)*(x1114)))+(((x1107)*(x1109)))+(((x1107)*(x1112)))+(((x1107)*(x1113)))+(((x1106)*(x1110))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((x1109)*(x1110)))+(((x1108)*(x1115)))+(((x1108)*(x1114)))+(((IkReal(-1.00000000000000))*(x1109)*(x1111)))+(((x1110)*(x1113)))+(((x1110)*(x1112)))+(((IkReal(-1.00000000000000))*(x1106)*(x1107)))+(((IkReal(-1.00000000000000))*(x1106)*(x1108)))+(((IkReal(-1.00000000000000))*(x1111)*(x1113)))+(((IkReal(-1.00000000000000))*(x1111)*(x1112)))+(((x1107)*(x1114)))+(((x1107)*(x1115))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst11)*(((((x1108)*(x1109)))+(((x1108)*(x1113)))+(((x1108)*(x1112)))+(((x1111)*(x1114)))+(((x1111)*(x1115)))+(((IkReal(-1.00000000000000))*(x1106)*(x1111)))+(((IkReal(-1.00000000000000))*(x1110)*(x1115)))+(((IkReal(-1.00000000000000))*(x1110)*(x1114)))+(((x1107)*(x1109)))+(((x1107)*(x1112)))+(((x1107)*(x1113)))+(((x1106)*(x1110)))))), ((gconst11)*(((((x1109)*(x1110)))+(((x1108)*(x1115)))+(((x1108)*(x1114)))+(((IkReal(-1.00000000000000))*(x1109)*(x1111)))+(((x1110)*(x1113)))+(((x1110)*(x1112)))+(((IkReal(-1.00000000000000))*(x1106)*(x1107)))+(((IkReal(-1.00000000000000))*(x1106)*(x1108)))+(((IkReal(-1.00000000000000))*(x1111)*(x1113)))+(((IkReal(-1.00000000000000))*(x1111)*(x1112)))+(((x1107)*(x1114)))+(((x1107)*(x1115)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1116=IKsin(j3);
IkReal x1117=IKcos(j3);
IkReal x1118=((cj5)*(cj6));
IkReal x1119=((sj0)*(sj5));
IkReal x1120=((r10)*(sj6));
IkReal x1121=((IkReal(0.000100000000000000))*(cj0));
IkReal x1122=((cj5)*(sj0));
IkReal x1123=((IkReal(0.247179554102935))*(cj1));
IkReal x1124=((IkReal(1.00000000000000))*(sj5));
IkReal x1125=((r11)*(sj0));
IkReal x1126=((IkReal(0.000100000000000000))*(sj6));
IkReal x1127=((r20)*(sj6));
IkReal x1128=((cj0)*(r02));
IkReal x1129=((cj0)*(r01));
IkReal x1130=((IkReal(0.000100000000000000))*(cj6));
IkReal x1131=((cj6)*(sj5));
IkReal x1132=((sj1)*(x1116));
IkReal x1133=((cj0)*(r00)*(sj6));
IkReal x1134=((cj1)*(x1116));
IkReal x1135=((cj1)*(x1117));
IkReal x1136=((sj1)*(x1117));
IkReal x1137=((IkReal(0.0549798603375872))*(x1132));
IkReal x1138=((IkReal(0.998487463595442))*(x1134));
IkReal x1139=((IkReal(0.998487463595442))*(x1136));
IkReal x1140=((IkReal(0.0549798603375872))*(x1135));
IkReal x1141=((IkReal(0.998487463595442))*(x1132));
IkReal x1142=((IkReal(0.0549798603375872))*(x1134));
IkReal x1143=((IkReal(0.0549798603375872))*(x1136));
IkReal x1144=((IkReal(0.998487463595442))*(x1135));
IkReal x1145=((x1140)+(x1139)+(x1138));
IkReal x1146=((x1142)+(x1143)+(x1141));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1117)*(x1123)))+(((IkReal(0.247179554102935))*(x1132)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(0.0217227538188447))*(x1136)))+(((IkReal(0.0217227538188447))*(x1134)))+(pz)+(((IkReal(-1.00000000000000))*(r21)*(x1126)))+(((r20)*(x1130))));
evalcond[1]=((((cj5)*(r22)))+(x1146)+(((IkReal(-1.00000000000000))*(x1144)))+(((r21)*(x1131)))+(((sj5)*(x1127))));
evalcond[2]=((x1145)+(((cj5)*(x1127)))+(((IkReal(-1.00000000000000))*(x1137)))+(((IkReal(-1.00000000000000))*(r22)*(x1124)))+(((r21)*(x1118))));
evalcond[3]=((((r10)*(sj0)*(x1130)))+(((IkReal(-1.00000000000000))*(x1116)*(x1123)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-0.0217227538188447))*(x1135)))+(((IkReal(0.0217227538188447))*(x1132)))+(((IkReal(-0.247179554102935))*(x1136)))+(((cj0)*(px)))+(((IkReal(-1.00000000000000))*(x1125)*(x1126)))+(((py)*(sj0)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1121)))+(((cj6)*(r00)*(x1121))));
evalcond[4]=((x1137)+(((x1129)*(x1131)))+(((x1119)*(x1120)))+(((IkReal(-1.00000000000000))*(x1145)))+(((cj5)*(x1128)))+(((sj5)*(x1133)))+(((cj6)*(r11)*(x1119)))+(((r12)*(x1122))));
evalcond[5]=((x1146)+(((x1120)*(x1122)))+(((IkReal(-1.00000000000000))*(x1144)))+(((cj5)*(x1133)))+(((IkReal(-1.00000000000000))*(r12)*(x1119)))+(((IkReal(-1.00000000000000))*(x1124)*(x1128)))+(((x1118)*(x1129)))+(((x1118)*(x1125))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1147=(cj1)*(cj1);
IkReal x1148=((cj1)*(r21));
IkReal x1149=((IkReal(9.98487463595442e-5))*(sj6));
IkReal x1150=((cj1)*(sj1));
IkReal x1151=((cj6)*(r20));
IkReal x1152=((IkReal(5.49798603375872e-6))*(sj1));
IkReal x1153=((IkReal(0.0549798603375872))*(pz));
IkReal x1154=((IkReal(0.0217227538188447))*(sj5));
IkReal x1155=((IkReal(0.998487463595442))*(pz));
IkReal x1156=((r20)*(sj6));
IkReal x1157=((cj6)*(r21));
IkReal x1158=((IkReal(0.247179554102935))*(sj5));
IkReal x1159=((cj5)*(r22)*(sj1));
IkReal x1160=((sj1)*(x1158));
IkReal x1161=((cj1)*(cj5)*(r22));
if( IKabs(((gconst7)*(((((IkReal(-0.00855486626852856))*(x1150)))+(((IkReal(-0.0217227538188447))*(x1159)))+(((IkReal(-1.00000000000000))*(cj1)*(x1155)))+(((cj1)*(x1156)*(x1158)))+(((IkReal(0.247179554102935))*(x1161)))+(((IkReal(-1.00000000000000))*(sj1)*(x1154)*(x1156)))+(((IkReal(-1.00000000000000))*(sj1)*(x1154)*(x1157)))+(((x1151)*(x1152)))+(((IkReal(0.155364649335451))*(x1147)))+(((cj6)*(x1148)*(x1158)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x1152)))+(((sj1)*(x1153)))+(((IkReal(-9.98487463595442e-5))*(cj1)*(x1151)))+(((x1148)*(x1149))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(5.49798603375872e-6))*(sj6)*(x1148)))+(((IkReal(0.247179554102935))*(x1159)))+(((IkReal(-1.00000000000000))*(cj1)*(x1153)))+(((x1157)*(x1160)))+(((IkReal(0.155364649335451))*(x1150)))+(((x1156)*(x1160)))+(((r21)*(sj1)*(x1149)))+(((IkReal(-1.00000000000000))*(sj1)*(x1155)))+(((cj6)*(x1148)*(x1154)))+(((IkReal(0.0217227538188447))*(x1161)))+(((IkReal(0.00855486626852856))*(x1147)))+(((cj1)*(x1154)*(x1156)))+(((IkReal(-9.98487463595442e-5))*(sj1)*(x1151)))+(((IkReal(-5.49798603375872e-6))*(cj1)*(x1151))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst7)*(((((IkReal(-0.00855486626852856))*(x1150)))+(((IkReal(-0.0217227538188447))*(x1159)))+(((IkReal(-1.00000000000000))*(cj1)*(x1155)))+(((cj1)*(x1156)*(x1158)))+(((IkReal(0.247179554102935))*(x1161)))+(((IkReal(-1.00000000000000))*(sj1)*(x1154)*(x1156)))+(((IkReal(-1.00000000000000))*(sj1)*(x1154)*(x1157)))+(((x1151)*(x1152)))+(((IkReal(0.155364649335451))*(x1147)))+(((cj6)*(x1148)*(x1158)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x1152)))+(((sj1)*(x1153)))+(((IkReal(-9.98487463595442e-5))*(cj1)*(x1151)))+(((x1148)*(x1149)))))), ((gconst7)*(((((IkReal(5.49798603375872e-6))*(sj6)*(x1148)))+(((IkReal(0.247179554102935))*(x1159)))+(((IkReal(-1.00000000000000))*(cj1)*(x1153)))+(((x1157)*(x1160)))+(((IkReal(0.155364649335451))*(x1150)))+(((x1156)*(x1160)))+(((r21)*(sj1)*(x1149)))+(((IkReal(-1.00000000000000))*(sj1)*(x1155)))+(((cj6)*(x1148)*(x1154)))+(((IkReal(0.0217227538188447))*(x1161)))+(((IkReal(0.00855486626852856))*(x1147)))+(((cj1)*(x1154)*(x1156)))+(((IkReal(-9.98487463595442e-5))*(sj1)*(x1151)))+(((IkReal(-5.49798603375872e-6))*(cj1)*(x1151)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1162=IKsin(j3);
IkReal x1163=IKcos(j3);
IkReal x1164=((cj5)*(cj6));
IkReal x1165=((sj0)*(sj5));
IkReal x1166=((IkReal(0.998487463595442))*(cj4));
IkReal x1167=((r10)*(sj6));
IkReal x1168=((IkReal(0.000100000000000000))*(cj0));
IkReal x1169=((cj6)*(r00));
IkReal x1170=((r01)*(sj6));
IkReal x1171=((sj5)*(sj6));
IkReal x1172=((cj5)*(sj0));
IkReal x1173=((cj0)*(r00));
IkReal x1174=((cj5)*(sj6));
IkReal x1175=((IkReal(1.00000000000000))*(sj5));
IkReal x1176=((IkReal(0.0549798603375872))*(sj4));
IkReal x1177=((cj0)*(r01));
IkReal x1178=((cj6)*(r20));
IkReal x1179=((IkReal(0.998487463595442))*(sj4));
IkReal x1180=((cj0)*(r02));
IkReal x1181=((IkReal(0.0549798603375872))*(cj4));
IkReal x1182=((cj6)*(sj5));
IkReal x1183=((r21)*(sj6));
IkReal x1184=((sj1)*(x1162));
IkReal x1185=((cj1)*(x1162));
IkReal x1186=((r11)*(sj0)*(sj6));
IkReal x1187=((cj1)*(x1163));
IkReal x1188=((sj1)*(x1163));
IkReal x1189=((cj6)*(r10)*(sj0));
IkReal x1190=((x1163)*(x1179));
evalcond[0]=((((IkReal(0.000100000000000000))*(x1178)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(0.247179554102935))*(x1184)))+(((IkReal(-0.000100000000000000))*(x1183)))+(((IkReal(-0.247179554102935))*(x1187)))+(pz)+(((IkReal(0.0217227538188447))*(x1185)))+(((IkReal(0.0217227538188447))*(x1188))));
evalcond[1]=((((cj5)*(r22)))+(((r20)*(x1171)))+(((IkReal(-0.998487463595442))*(x1187)))+(((IkReal(0.998487463595442))*(x1184)))+(((IkReal(0.0549798603375872))*(x1185)))+(((IkReal(0.0549798603375872))*(x1188)))+(((r21)*(x1182))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1176)*(x1187)))+(x1178)+(((x1176)*(x1184)))+(((IkReal(-1.00000000000000))*(x1179)*(x1188)))+(((IkReal(-1.00000000000000))*(x1179)*(x1185)))+(((IkReal(-1.00000000000000))*(x1183))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1181)*(x1187)))+(((r20)*(x1174)))+(((r21)*(x1164)))+(((IkReal(-1.00000000000000))*(r22)*(x1175)))+(((x1181)*(x1184)))+(((IkReal(-1.00000000000000))*(x1166)*(x1185)))+(((IkReal(-1.00000000000000))*(x1166)*(x1188))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1176)*(x1188)))+(((IkReal(-1.00000000000000))*(x1176)*(x1185)))+(x1189)+(((IkReal(-1.00000000000000))*(cj0)*(x1170)))+(((x1179)*(x1187)))+(((IkReal(-1.00000000000000))*(x1179)*(x1184)))+(((cj0)*(x1169)))+(((IkReal(-1.00000000000000))*(x1186))));
evalcond[5]=((((x1168)*(x1169)))+(((IkReal(-1.00000000000000))*(x1168)*(x1170)))+(((IkReal(0.000100000000000000))*(x1189)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-0.000100000000000000))*(x1186)))+(((IkReal(-0.247179554102935))*(x1185)))+(((IkReal(-0.247179554102935))*(x1188)))+(((IkReal(-0.0217227538188447))*(x1187)))+(((IkReal(0.0217227538188447))*(x1184)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[6]=((((x1165)*(x1167)))+(((IkReal(-0.998487463595442))*(x1185)))+(((IkReal(-0.998487463595442))*(x1188)))+(((IkReal(-0.0549798603375872))*(x1187)))+(((cj5)*(x1180)))+(((x1177)*(x1182)))+(((r12)*(x1172)))+(((IkReal(0.0549798603375872))*(x1184)))+(((cj6)*(r11)*(x1165)))+(((x1171)*(x1173))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1181)*(x1188)))+(((IkReal(-1.00000000000000))*(x1181)*(x1185)))+(((x1164)*(x1177)))+(((IkReal(-1.00000000000000))*(x1175)*(x1180)))+(((x1173)*(x1174)))+(((x1166)*(x1187)))+(((r11)*(sj0)*(x1164)))+(((IkReal(-1.00000000000000))*(r12)*(x1165)))+(((x1167)*(x1172)))+(((IkReal(-1.00000000000000))*(x1166)*(x1184))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1191=((IkReal(0.998487463595442))*(sj4));
IkReal x1192=((IkReal(0.0549798603375872))*(r20));
IkReal x1193=((cj1)*(cj6));
IkReal x1194=((cj6)*(sj1));
IkReal x1195=((IkReal(0.998487463595442))*(r20));
IkReal x1196=((IkReal(0.0549798603375872))*(sj4));
IkReal x1197=((r21)*(sj5));
IkReal x1198=((r21)*(sj6));
IkReal x1199=((cj1)*(cj5)*(r22));
IkReal x1200=((sj1)*(sj5)*(sj6));
IkReal x1201=((cj5)*(r22)*(sj1));
IkReal x1202=((cj1)*(sj5)*(sj6));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x1191)*(x1201)))+(((IkReal(0.0549798603375872))*(sj1)*(x1198)))+(((IkReal(-1.00000000000000))*(sj4)*(x1192)*(x1202)))+(((IkReal(-0.998487463595442))*(cj1)*(x1198)))+(((IkReal(-1.00000000000000))*(r20)*(x1191)*(x1200)))+(((IkReal(-1.00000000000000))*(x1196)*(x1199)))+(((x1193)*(x1195)))+(((IkReal(-1.00000000000000))*(x1193)*(x1196)*(x1197)))+(((IkReal(-1.00000000000000))*(x1191)*(x1194)*(x1197)))+(((IkReal(-1.00000000000000))*(x1192)*(x1194))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((x1194)*(x1195)))+(((IkReal(-1.00000000000000))*(x1196)*(x1201)))+(((IkReal(-1.00000000000000))*(sj4)*(x1192)*(x1200)))+(((IkReal(-0.998487463595442))*(sj1)*(x1198)))+(((x1191)*(x1193)*(x1197)))+(((r20)*(x1191)*(x1202)))+(((x1192)*(x1193)))+(((IkReal(-0.0549798603375872))*(cj1)*(x1198)))+(((IkReal(-1.00000000000000))*(x1194)*(x1196)*(x1197)))+(((x1191)*(x1199))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(x1191)*(x1201)))+(((IkReal(0.0549798603375872))*(sj1)*(x1198)))+(((IkReal(-1.00000000000000))*(sj4)*(x1192)*(x1202)))+(((IkReal(-0.998487463595442))*(cj1)*(x1198)))+(((IkReal(-1.00000000000000))*(r20)*(x1191)*(x1200)))+(((IkReal(-1.00000000000000))*(x1196)*(x1199)))+(((x1193)*(x1195)))+(((IkReal(-1.00000000000000))*(x1193)*(x1196)*(x1197)))+(((IkReal(-1.00000000000000))*(x1191)*(x1194)*(x1197)))+(((IkReal(-1.00000000000000))*(x1192)*(x1194)))))), ((gconst6)*(((((x1194)*(x1195)))+(((IkReal(-1.00000000000000))*(x1196)*(x1201)))+(((IkReal(-1.00000000000000))*(sj4)*(x1192)*(x1200)))+(((IkReal(-0.998487463595442))*(sj1)*(x1198)))+(((x1191)*(x1193)*(x1197)))+(((r20)*(x1191)*(x1202)))+(((x1192)*(x1193)))+(((IkReal(-0.0549798603375872))*(cj1)*(x1198)))+(((IkReal(-1.00000000000000))*(x1194)*(x1196)*(x1197)))+(((x1191)*(x1199)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1203=IKsin(j3);
IkReal x1204=IKcos(j3);
IkReal x1205=((cj5)*(cj6));
IkReal x1206=((sj0)*(sj5));
IkReal x1207=((IkReal(0.998487463595442))*(cj4));
IkReal x1208=((r10)*(sj6));
IkReal x1209=((IkReal(0.000100000000000000))*(cj0));
IkReal x1210=((cj6)*(r00));
IkReal x1211=((r01)*(sj6));
IkReal x1212=((sj5)*(sj6));
IkReal x1213=((cj5)*(sj0));
IkReal x1214=((cj0)*(r00));
IkReal x1215=((cj5)*(sj6));
IkReal x1216=((IkReal(1.00000000000000))*(sj5));
IkReal x1217=((IkReal(0.0549798603375872))*(sj4));
IkReal x1218=((cj0)*(r01));
IkReal x1219=((cj6)*(r20));
IkReal x1220=((IkReal(0.998487463595442))*(sj4));
IkReal x1221=((cj0)*(r02));
IkReal x1222=((IkReal(0.0549798603375872))*(cj4));
IkReal x1223=((cj6)*(sj5));
IkReal x1224=((r21)*(sj6));
IkReal x1225=((sj1)*(x1203));
IkReal x1226=((cj1)*(x1203));
IkReal x1227=((r11)*(sj0)*(sj6));
IkReal x1228=((cj1)*(x1204));
IkReal x1229=((sj1)*(x1204));
IkReal x1230=((cj6)*(r10)*(sj0));
IkReal x1231=((x1204)*(x1220));
evalcond[0]=((((IkReal(-0.247179554102935))*(x1228)))+(((IkReal(0.0217227538188447))*(x1229)))+(((IkReal(0.0217227538188447))*(x1226)))+(((IkReal(0.000100000000000000))*(x1219)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(-0.000100000000000000))*(x1224)))+(pz)+(((IkReal(0.247179554102935))*(x1225))));
evalcond[1]=((((cj5)*(r22)))+(((IkReal(-0.998487463595442))*(x1228)))+(((r20)*(x1212)))+(((IkReal(0.0549798603375872))*(x1226)))+(((IkReal(0.0549798603375872))*(x1229)))+(((r21)*(x1223)))+(((IkReal(0.998487463595442))*(x1225))));
evalcond[2]=((x1219)+(((x1217)*(x1225)))+(((IkReal(-1.00000000000000))*(x1224)))+(((IkReal(-1.00000000000000))*(x1220)*(x1229)))+(((IkReal(-1.00000000000000))*(x1220)*(x1226)))+(((IkReal(-1.00000000000000))*(x1217)*(x1228))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r22)*(x1216)))+(((IkReal(-1.00000000000000))*(x1207)*(x1226)))+(((IkReal(-1.00000000000000))*(x1207)*(x1229)))+(((IkReal(-1.00000000000000))*(x1222)*(x1228)))+(((r21)*(x1205)))+(((r20)*(x1215)))+(((x1222)*(x1225))));
evalcond[4]=((x1230)+(((IkReal(-1.00000000000000))*(x1227)))+(((IkReal(-1.00000000000000))*(x1220)*(x1225)))+(((cj0)*(x1210)))+(((x1220)*(x1228)))+(((IkReal(-1.00000000000000))*(cj0)*(x1211)))+(((IkReal(-1.00000000000000))*(x1217)*(x1229)))+(((IkReal(-1.00000000000000))*(x1217)*(x1226))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1209)*(x1211)))+(((IkReal(-0.247179554102935))*(x1226)))+(((IkReal(-0.247179554102935))*(x1229)))+(((IkReal(0.0217227538188447))*(x1225)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(0.000100000000000000))*(x1230)))+(((IkReal(-0.000100000000000000))*(x1227)))+(((x1209)*(x1210)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(-0.0217227538188447))*(x1228))));
evalcond[6]=((((r12)*(x1213)))+(((x1212)*(x1214)))+(((IkReal(-0.0549798603375872))*(x1228)))+(((cj5)*(x1221)))+(((cj6)*(r11)*(x1206)))+(((IkReal(-0.998487463595442))*(x1229)))+(((IkReal(-0.998487463595442))*(x1226)))+(((IkReal(0.0549798603375872))*(x1225)))+(((x1218)*(x1223)))+(((x1206)*(x1208))));
evalcond[7]=((((x1214)*(x1215)))+(((IkReal(-1.00000000000000))*(x1207)*(x1225)))+(((x1207)*(x1228)))+(((IkReal(-1.00000000000000))*(x1222)*(x1229)))+(((IkReal(-1.00000000000000))*(x1222)*(x1226)))+(((IkReal(-1.00000000000000))*(x1216)*(x1221)))+(((x1205)*(x1218)))+(((x1208)*(x1213)))+(((r11)*(sj0)*(x1205)))+(((IkReal(-1.00000000000000))*(r12)*(x1206))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1232=(sj1)*(sj1);
IkReal x1233=(cj1)*(cj1);
IkReal x1234=((IkReal(0.0217227538188447))*(sj1));
IkReal x1235=((sj1)*(sj6));
IkReal x1236=((IkReal(2.17227538188447e-6))*(cj0));
IkReal x1237=((IkReal(2.47179554102935e-5))*(cj1));
IkReal x1238=((r21)*(sj6));
IkReal x1239=((py)*(sj0));
IkReal x1240=((cj6)*(sj1));
IkReal x1241=((cj1)*(cj6));
IkReal x1242=((IkReal(2.17227538188447e-6))*(r20));
IkReal x1243=((IkReal(0.0217227538188447))*(cj1));
IkReal x1244=((cj0)*(px));
IkReal x1245=((IkReal(0.247179554102935))*(sj1));
IkReal x1246=((IkReal(0.247179554102935))*(cj1));
IkReal x1247=((r01)*(sj6));
IkReal x1248=((r10)*(sj0));
IkReal x1249=((IkReal(2.47179554102935e-5))*(cj0));
IkReal x1250=((IkReal(2.47179554102935e-5))*(r11)*(sj0));
IkReal x1251=((IkReal(2.17227538188447e-6))*(x1248));
IkReal x1252=((IkReal(2.17227538188447e-6))*(r11)*(sj0)*(sj6));
if( IKabs(((gconst0)*(((((IkReal(2.47179554102935e-5))*(r21)*(x1235)))+(((IkReal(-1.00000000000000))*(r00)*(x1236)*(x1240)))+(((IkReal(2.17227538188447e-6))*(cj1)*(x1238)))+(((x1239)*(x1246)))+(((cj6)*(x1237)*(x1248)))+(((IkReal(-1.00000000000000))*(pz)*(x1243)))+(((IkReal(-1.00000000000000))*(pz)*(x1245)))+(((IkReal(0.00338006049421224))*(x1232)))+(((IkReal(0.00338006049421224))*(x1233)))+(((r01)*(x1235)*(x1236)))+(((IkReal(-1.00000000000000))*(cj0)*(x1237)*(x1247)))+(((cj0)*(cj6)*(r00)*(x1237)))+(((x1244)*(x1246)))+(((IkReal(-2.47179554102935e-5))*(r20)*(x1240)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj6)*(x1237)))+(((IkReal(-1.00000000000000))*(x1234)*(x1239)))+(((IkReal(-1.00000000000000))*(x1241)*(x1242)))+(((IkReal(2.17227538188447e-6))*(r11)*(sj0)*(x1235)))+(((IkReal(-1.00000000000000))*(x1240)*(x1251)))+(((IkReal(-1.00000000000000))*(x1234)*(x1244))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((cj6)*(r20)*(x1237)))+(((IkReal(-1.00000000000000))*(cj1)*(x1236)*(x1247)))+(((x1241)*(x1251)))+(((IkReal(2.47179554102935e-5))*(x1240)*(x1248)))+(((x1239)*(x1245)))+(((x1239)*(x1243)))+(((IkReal(-0.0384611386184167))*(x1232)))+(((IkReal(-0.0384611386184167))*(x1233)))+(((pz)*(x1246)))+(((IkReal(-1.00000000000000))*(x1237)*(x1238)))+(((IkReal(-1.00000000000000))*(cj1)*(x1252)))+(((IkReal(-1.00000000000000))*(pz)*(x1234)))+(((r00)*(x1240)*(x1249)))+(((IkReal(-1.00000000000000))*(x1240)*(x1242)))+(((x1244)*(x1245)))+(((x1243)*(x1244)))+(((r00)*(x1236)*(x1241)))+(((IkReal(-1.00000000000000))*(r01)*(x1235)*(x1249)))+(((IkReal(-1.00000000000000))*(x1235)*(x1250)))+(((IkReal(2.17227538188447e-6))*(r21)*(x1235))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst0)*(((((IkReal(2.47179554102935e-5))*(r21)*(x1235)))+(((IkReal(-1.00000000000000))*(r00)*(x1236)*(x1240)))+(((IkReal(2.17227538188447e-6))*(cj1)*(x1238)))+(((x1239)*(x1246)))+(((cj6)*(x1237)*(x1248)))+(((IkReal(-1.00000000000000))*(pz)*(x1243)))+(((IkReal(-1.00000000000000))*(pz)*(x1245)))+(((IkReal(0.00338006049421224))*(x1232)))+(((IkReal(0.00338006049421224))*(x1233)))+(((r01)*(x1235)*(x1236)))+(((IkReal(-1.00000000000000))*(cj0)*(x1237)*(x1247)))+(((cj0)*(cj6)*(r00)*(x1237)))+(((x1244)*(x1246)))+(((IkReal(-2.47179554102935e-5))*(r20)*(x1240)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj6)*(x1237)))+(((IkReal(-1.00000000000000))*(x1234)*(x1239)))+(((IkReal(-1.00000000000000))*(x1241)*(x1242)))+(((IkReal(2.17227538188447e-6))*(r11)*(sj0)*(x1235)))+(((IkReal(-1.00000000000000))*(x1240)*(x1251)))+(((IkReal(-1.00000000000000))*(x1234)*(x1244)))))), ((gconst0)*(((((cj6)*(r20)*(x1237)))+(((IkReal(-1.00000000000000))*(cj1)*(x1236)*(x1247)))+(((x1241)*(x1251)))+(((IkReal(2.47179554102935e-5))*(x1240)*(x1248)))+(((x1239)*(x1245)))+(((x1239)*(x1243)))+(((IkReal(-0.0384611386184167))*(x1232)))+(((IkReal(-0.0384611386184167))*(x1233)))+(((pz)*(x1246)))+(((IkReal(-1.00000000000000))*(x1237)*(x1238)))+(((IkReal(-1.00000000000000))*(cj1)*(x1252)))+(((IkReal(-1.00000000000000))*(pz)*(x1234)))+(((r00)*(x1240)*(x1249)))+(((IkReal(-1.00000000000000))*(x1240)*(x1242)))+(((x1244)*(x1245)))+(((x1243)*(x1244)))+(((r00)*(x1236)*(x1241)))+(((IkReal(-1.00000000000000))*(r01)*(x1235)*(x1249)))+(((IkReal(-1.00000000000000))*(x1235)*(x1250)))+(((IkReal(2.17227538188447e-6))*(r21)*(x1235)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x1253=IKsin(j3);
IkReal x1254=IKcos(j3);
IkReal x1255=((IkReal(0.000100000000000000))*(cj6));
IkReal x1256=((IkReal(0.000100000000000000))*(sj6));
IkReal x1257=((cj1)*(x1254));
IkReal x1258=((sj1)*(x1253));
IkReal x1259=((sj1)*(x1254));
IkReal x1260=((cj1)*(x1253));
evalcond[0]=((((IkReal(0.0217227538188447))*(x1260)))+(((IkReal(0.0217227538188447))*(x1259)))+(((IkReal(-1.00000000000000))*(r21)*(x1256)))+(((IkReal(0.247179554102935))*(x1258)))+(((IkReal(-0.247179554102935))*(x1257)))+(((IkReal(-0.155600000000000))*(cj1)))+(pz)+(((r20)*(x1255))));
evalcond[1]=((((IkReal(0.0217227538188447))*(x1258)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-0.247179554102935))*(x1260)))+(((IkReal(-0.247179554102935))*(x1259)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1256)))+(((cj0)*(r00)*(x1255)))+(((r10)*(sj0)*(x1255)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x1256)))+(((IkReal(-0.0217227538188447))*(x1257)))+(((cj0)*(px)))+(((py)*(sj0))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst22;
IkReal x1261=((r20)*(sj6));
IkReal x1262=((cj0)*(r12));
IkReal x1263=((r22)*(sj0));
IkReal x1264=((cj6)*(r21));
IkReal x1265=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x1266=((IkReal(1.00000000000000))*(r02)*(sj0));
gconst22=IKsign(((((IkReal(-1.00000000000000))*(x1264)*(x1266)))+(((IkReal(-1.00000000000000))*(x1261)*(x1266)))+(((x1261)*(x1262)))+(((r00)*(sj6)*(x1263)))+(((x1262)*(x1264)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1265)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1265)))+(((cj6)*(r01)*(x1263)))));
IkReal x1267=((r20)*(sj6));
IkReal x1268=((cj0)*(r12));
IkReal x1269=((r22)*(sj0));
IkReal x1270=((cj6)*(r21));
IkReal x1271=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x1272=((IkReal(1.00000000000000))*(r02)*(sj0));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1267)*(x1272)))+(((IkReal(-1.00000000000000))*(x1270)*(x1272)))+(((r00)*(sj6)*(x1269)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1271)))+(((x1267)*(x1268)))+(((x1268)*(x1270)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1271)))+(((cj6)*(r01)*(x1269))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x1273=(cj0)*(cj0);
IkReal x1274=(sj0)*(sj0);
IkReal x1275=((r01)*(r12));
IkReal x1276=((IkReal(1.00000000000000))*(r02));
IkReal x1277=((r00)*(r12));
IkReal x1278=((cj6)*(x1273));
IkReal x1279=((sj6)*(x1273));
IkReal x1280=((cj6)*(x1274));
IkReal x1281=((sj6)*(x1274));
gconst23=IKsign(((((x1275)*(x1278)))+(((x1277)*(x1279)))+(((IkReal(-1.00000000000000))*(r11)*(x1276)*(x1278)))+(((IkReal(-1.00000000000000))*(r10)*(x1276)*(x1281)))+(((x1275)*(x1280)))+(((x1277)*(x1281)))+(((IkReal(-1.00000000000000))*(r10)*(x1276)*(x1279)))+(((IkReal(-1.00000000000000))*(r11)*(x1276)*(x1280)))));
IkReal x1282=(cj0)*(cj0);
IkReal x1283=(sj0)*(sj0);
IkReal x1284=((r01)*(r12));
IkReal x1285=((IkReal(1.00000000000000))*(r02));
IkReal x1286=((r00)*(r12));
IkReal x1287=((cj6)*(x1282));
IkReal x1288=((sj6)*(x1282));
IkReal x1289=((cj6)*(x1283));
IkReal x1290=((sj6)*(x1283));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(x1285)*(x1288)))+(((x1286)*(x1290)))+(((x1284)*(x1287)))+(((x1284)*(x1289)))+(((x1286)*(x1288)))+(((IkReal(-1.00000000000000))*(r10)*(x1285)*(x1290)))+(((IkReal(-1.00000000000000))*(r11)*(x1285)*(x1289)))+(((IkReal(-1.00000000000000))*(r11)*(x1285)*(x1287))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((IkReal(-18.1609676245908))*(cj3)*(sj1)))+(((IkReal(-18.1609676245908))*(cj1)*(sj3)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)))+(((sj1)*(sj3))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1291=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((((IKabs(((((IkReal(-0.998487463595442))*(cj3)*(sj1)))+(((IkReal(-0.998487463595442))*(cj1)*(sj3)))+(((IkReal(0.0549798603375872))*(sj1)*(sj3)))+(((IkReal(-0.0549798603375872))*(cj1)*(cj3))))) != 0)?((IkReal)1/(((((IkReal(-0.998487463595442))*(cj3)*(sj1)))+(((IkReal(-0.998487463595442))*(cj1)*(sj3)))+(((IkReal(0.0549798603375872))*(sj1)*(sj3)))+(((IkReal(-0.0549798603375872))*(cj1)*(cj3)))))):(IkReal)1.0e30))*(((((r21)*(sj6)))+(((IkReal(-1.00000000000000))*(r20)*(x1291))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r00)*(sj0)*(x1291)))+(((r01)*(sj0)*(sj6)))+(((cj0)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(-0.998487463595442))*(cj3)*(sj1)))+(((IkReal(-0.998487463595442))*(cj1)*(sj3)))+(((IkReal(0.0549798603375872))*(sj1)*(sj3)))+(((IkReal(-0.0549798603375872))*(cj1)*(cj3))))) != 0)?((IkReal)1/(((((IkReal(-0.998487463595442))*(cj3)*(sj1)))+(((IkReal(-0.998487463595442))*(cj1)*(sj3)))+(((IkReal(0.0549798603375872))*(sj1)*(sj3)))+(((IkReal(-0.0549798603375872))*(cj1)*(cj3)))))):(IkReal)1.0e30))*(((((r21)*(sj6)))+(((IkReal(-1.00000000000000))*(r20)*(x1291)))))))+IKsqr(((((IkReal(-1.00000000000000))*(r00)*(sj0)*(x1291)))+(((r01)*(sj0)*(sj6)))+(((cj0)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(sj6)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(((((IkReal(-0.998487463595442))*(cj3)*(sj1)))+(((IkReal(-0.998487463595442))*(cj1)*(sj3)))+(((IkReal(0.0549798603375872))*(sj1)*(sj3)))+(((IkReal(-0.0549798603375872))*(cj1)*(cj3))))) != 0)?((IkReal)1/(((((IkReal(-0.998487463595442))*(cj3)*(sj1)))+(((IkReal(-0.998487463595442))*(cj1)*(sj3)))+(((IkReal(0.0549798603375872))*(sj1)*(sj3)))+(((IkReal(-0.0549798603375872))*(cj1)*(cj3)))))):(IkReal)1.0e30))*(((((r21)*(sj6)))+(((IkReal(-1.00000000000000))*(r20)*(x1291)))))), ((((IkReal(-1.00000000000000))*(r00)*(sj0)*(x1291)))+(((r01)*(sj0)*(sj6)))+(((cj0)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(sj6)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1292=IKsin(j4);
IkReal x1293=((cj0)*(cj6));
IkReal x1294=((IkReal(0.998487463595442))*(cj3));
IkReal x1295=((IkReal(0.0549798603375872))*(sj3));
IkReal x1296=((IkReal(1.00000000000000))*(sj6));
IkReal x1297=((cj6)*(sj0));
IkReal x1298=((IkReal(0.0549798603375872))*(cj3));
IkReal x1299=((IkReal(0.998487463595442))*(sj3));
IkReal x1300=((sj1)*(x1292));
IkReal x1301=((cj1)*(x1292));
evalcond[0]=((((IkReal(-1.00000000000000))*(r01)*(sj0)*(x1296)))+(((cj0)*(r11)*(sj6)))+(IKcos(j4))+(((IkReal(-1.00000000000000))*(r10)*(x1293)))+(((r00)*(x1297))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1299)*(x1301)))+(((IkReal(-1.00000000000000))*(r21)*(x1296)))+(((x1295)*(x1300)))+(((IkReal(-1.00000000000000))*(x1294)*(x1300)))+(((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(x1298)*(x1301))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1299)*(x1300)))+(((x1294)*(x1301)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1296)))+(((IkReal(-1.00000000000000))*(x1298)*(x1300)))+(((IkReal(-1.00000000000000))*(x1295)*(x1301)))+(((r10)*(x1297)))+(((r00)*(x1293)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x1296))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst24;
IkReal x1302=(cj6)*(cj6);
IkReal x1303=(cj0)*(cj0);
IkReal x1304=(sj0)*(sj0);
IkReal x1305=(sj6)*(sj6);
IkReal x1306=((IkReal(2.00000000000000))*(r11));
IkReal x1307=((cj0)*(sj0));
IkReal x1308=((cj6)*(sj6));
IkReal x1309=((IkReal(2.00000000000000))*(r01));
IkReal x1310=((IkReal(1.00000000000000))*(x1303));
IkReal x1311=((IkReal(1.00000000000000))*(x1304));
gconst24=IKsign(((((IkReal(2.00000000000000))*(r00)*(r10)*(x1305)*(x1307)))+(((IkReal(-1.00000000000000))*(x1310)*((r12)*(r12))))+(((IkReal(-1.00000000000000))*(x1311)*((r02)*(r02))))+(((IkReal(-1.00000000000000))*(x1305)*(x1311)*((r00)*(r00))))+(((r10)*(x1307)*(x1308)*(x1309)))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x1307)))+(((r01)*(x1302)*(x1306)*(x1307)))+(((IkReal(-1.00000000000000))*(x1302)*(x1311)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1302)*(x1310)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(x1303)*(x1306)*(x1308)))+(((IkReal(-1.00000000000000))*(r00)*(x1304)*(x1308)*(x1309)))+(((r00)*(x1306)*(x1307)*(x1308)))+(((IkReal(-1.00000000000000))*(x1305)*(x1310)*((r10)*(r10))))));
IkReal x1312=(cj6)*(cj6);
IkReal x1313=(cj0)*(cj0);
IkReal x1314=(sj0)*(sj0);
IkReal x1315=(sj6)*(sj6);
IkReal x1316=((IkReal(2.00000000000000))*(r11));
IkReal x1317=((cj0)*(sj0));
IkReal x1318=((cj6)*(sj6));
IkReal x1319=((IkReal(2.00000000000000))*(r01));
IkReal x1320=((IkReal(1.00000000000000))*(x1313));
IkReal x1321=((IkReal(1.00000000000000))*(x1314));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(x1313)*(x1316)*(x1318)))+(((r00)*(x1316)*(x1317)*(x1318)))+(((IkReal(-1.00000000000000))*(x1315)*(x1320)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1312)*(x1321)*((r01)*(r01))))+(((r01)*(x1312)*(x1316)*(x1317)))+(((IkReal(-1.00000000000000))*(x1320)*((r12)*(r12))))+(((IkReal(-1.00000000000000))*(r00)*(x1314)*(x1318)*(x1319)))+(((IkReal(-1.00000000000000))*(x1321)*((r02)*(r02))))+(((IkReal(-1.00000000000000))*(x1312)*(x1320)*((r11)*(r11))))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x1317)))+(((r10)*(x1317)*(x1318)*(x1319)))+(((IkReal(-1.00000000000000))*(x1315)*(x1321)*((r00)*(r00))))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x1315)*(x1317))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst25;
IkReal x1322=((r20)*(sj6));
IkReal x1323=((cj0)*(r12));
IkReal x1324=((r22)*(sj0));
IkReal x1325=((cj6)*(r21));
IkReal x1326=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x1327=((IkReal(1.00000000000000))*(r02)*(sj0));
gconst25=IKsign(((((IkReal(-1.00000000000000))*(x1322)*(x1327)))+(((x1323)*(x1325)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1326)))+(((cj6)*(r01)*(x1324)))+(((x1322)*(x1323)))+(((IkReal(-1.00000000000000))*(x1325)*(x1327)))+(((r00)*(sj6)*(x1324)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1326)))));
IkReal x1328=((r20)*(sj6));
IkReal x1329=((cj0)*(r12));
IkReal x1330=((r22)*(sj0));
IkReal x1331=((cj6)*(r21));
IkReal x1332=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x1333=((IkReal(1.00000000000000))*(r02)*(sj0));
dummyeval[0]=((((x1329)*(x1331)))+(((r00)*(sj6)*(x1330)))+(((IkReal(-1.00000000000000))*(x1328)*(x1333)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1332)))+(((x1328)*(x1329)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1332)))+(((IkReal(-1.00000000000000))*(x1331)*(x1333)))+(((cj6)*(r01)*(x1330))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1334=((r00)*(sj0));
IkReal x1335=((IkReal(0.0549798603375872))*(cj6));
IkReal x1336=((cj3)*(sj1));
IkReal x1337=((cj0)*(r11));
IkReal x1338=((cj0)*(r10));
IkReal x1339=((IkReal(0.998487463595442))*(sj1));
IkReal x1340=((IkReal(0.0549798603375872))*(sj3));
IkReal x1341=((r01)*(sj0));
IkReal x1342=((r02)*(sj0));
IkReal x1343=((IkReal(0.998487463595442))*(cj3));
IkReal x1344=((cj1)*(sj6));
IkReal x1345=((cj0)*(r12));
IkReal x1346=((cj1)*(cj6));
IkReal x1347=((IkReal(0.0549798603375872))*(sj6));
IkReal x1348=((sj3)*(x1341));
IkReal x1349=((cj1)*(x1345));
IkReal x1350=((sj3)*(sj6)*(x1339));
if( IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(cj1)*(x1342)*(x1343)))+(((IkReal(-1.00000000000000))*(x1340)*(x1349)))+(((IkReal(-0.0549798603375872))*(x1336)*(x1345)))+(((IkReal(0.0549798603375872))*(x1336)*(x1342)))+(((cj1)*(x1340)*(x1342)))+(((sj3)*(x1339)*(x1342)))+(((IkReal(-1.00000000000000))*(sj3)*(x1339)*(x1345)))+(((x1343)*(x1349))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(x1334)*(x1350)))+(((x1341)*(x1343)*(x1346)))+(((IkReal(-1.00000000000000))*(cj1)*(x1335)*(x1348)))+(((x1334)*(x1343)*(x1344)))+(((x1336)*(x1338)*(x1347)))+(((cj1)*(sj3)*(x1335)*(x1337)))+(((x1335)*(x1336)*(x1337)))+(((IkReal(-1.00000000000000))*(cj6)*(x1339)*(x1348)))+(((x1338)*(x1340)*(x1344)))+(((cj6)*(sj3)*(x1337)*(x1339)))+(((x1338)*(x1350)))+(((IkReal(-1.00000000000000))*(x1335)*(x1336)*(x1341)))+(((IkReal(-1.00000000000000))*(x1337)*(x1343)*(x1346)))+(((IkReal(-1.00000000000000))*(x1334)*(x1336)*(x1347)))+(((IkReal(-1.00000000000000))*(x1334)*(x1340)*(x1344)))+(((IkReal(-1.00000000000000))*(x1338)*(x1343)*(x1344))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst25)*(((((IkReal(-1.00000000000000))*(cj1)*(x1342)*(x1343)))+(((IkReal(-1.00000000000000))*(x1340)*(x1349)))+(((IkReal(-0.0549798603375872))*(x1336)*(x1345)))+(((IkReal(0.0549798603375872))*(x1336)*(x1342)))+(((cj1)*(x1340)*(x1342)))+(((sj3)*(x1339)*(x1342)))+(((IkReal(-1.00000000000000))*(sj3)*(x1339)*(x1345)))+(((x1343)*(x1349)))))), ((gconst25)*(((((IkReal(-1.00000000000000))*(x1334)*(x1350)))+(((x1341)*(x1343)*(x1346)))+(((IkReal(-1.00000000000000))*(cj1)*(x1335)*(x1348)))+(((x1334)*(x1343)*(x1344)))+(((x1336)*(x1338)*(x1347)))+(((cj1)*(sj3)*(x1335)*(x1337)))+(((x1335)*(x1336)*(x1337)))+(((IkReal(-1.00000000000000))*(cj6)*(x1339)*(x1348)))+(((x1338)*(x1340)*(x1344)))+(((cj6)*(sj3)*(x1337)*(x1339)))+(((x1338)*(x1350)))+(((IkReal(-1.00000000000000))*(x1335)*(x1336)*(x1341)))+(((IkReal(-1.00000000000000))*(x1337)*(x1343)*(x1346)))+(((IkReal(-1.00000000000000))*(x1334)*(x1336)*(x1347)))+(((IkReal(-1.00000000000000))*(x1334)*(x1340)*(x1344)))+(((IkReal(-1.00000000000000))*(x1338)*(x1343)*(x1344)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1351=IKsin(j5);
IkReal x1352=IKcos(j5);
IkReal x1353=((IkReal(1.00000000000000))*(cj0));
IkReal x1354=((IkReal(0.998487463595442))*(cj1));
IkReal x1355=((cj4)*(sj3));
IkReal x1356=((r02)*(sj0));
IkReal x1357=((cj0)*(r01));
IkReal x1358=((IkReal(0.0549798603375872))*(cj1));
IkReal x1359=((r10)*(sj0));
IkReal x1360=((IkReal(0.998487463595442))*(sj1));
IkReal x1361=((cj3)*(cj4));
IkReal x1362=((IkReal(0.0549798603375872))*(sj1));
IkReal x1363=((r11)*(sj0));
IkReal x1364=((r01)*(sj0));
IkReal x1365=((cj6)*(x1352));
IkReal x1366=((sj6)*(x1351));
IkReal x1367=((IkReal(1.00000000000000))*(x1351));
IkReal x1368=((r12)*(x1352));
IkReal x1369=((cj6)*(x1351));
IkReal x1370=((cj3)*(x1360));
IkReal x1371=((sj6)*(x1352));
IkReal x1372=((r00)*(x1371));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1353)*(x1368)))+(((IkReal(-1.00000000000000))*(r10)*(x1353)*(x1366)))+(((r00)*(sj0)*(x1366)))+(((x1364)*(x1369)))+(((IkReal(-1.00000000000000))*(r11)*(x1353)*(x1369)))+(((x1352)*(x1356))));
evalcond[1]=((((r22)*(x1352)))+(((IkReal(-1.00000000000000))*(cj3)*(x1354)))+(((r20)*(x1366)))+(((sj3)*(x1358)))+(((cj3)*(x1362)))+(((sj3)*(x1360)))+(((r21)*(x1369))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x1353)*(x1371)))+(((IkReal(-1.00000000000000))*(sj4)))+(((cj0)*(r12)*(x1351)))+(((x1364)*(x1365)))+(((IkReal(-1.00000000000000))*(x1356)*(x1367)))+(((sj0)*(x1372)))+(((IkReal(-1.00000000000000))*(r11)*(x1353)*(x1365))));
evalcond[3]=((((x1355)*(x1362)))+(((IkReal(-1.00000000000000))*(x1354)*(x1355)))+(((IkReal(-1.00000000000000))*(r22)*(x1367)))+(((IkReal(-1.00000000000000))*(x1360)*(x1361)))+(((r21)*(x1365)))+(((r20)*(x1371)))+(((IkReal(-1.00000000000000))*(x1358)*(x1361))));
evalcond[4]=((((x1357)*(x1369)))+(((sj0)*(x1368)))+(((cj0)*(r00)*(x1366)))+(((IkReal(-1.00000000000000))*(sj3)*(x1354)))+(((x1363)*(x1369)))+(((IkReal(-1.00000000000000))*(cj3)*(x1358)))+(((x1359)*(x1366)))+(((IkReal(-1.00000000000000))*(x1370)))+(((cj0)*(r02)*(x1352)))+(((sj3)*(x1362))));
evalcond[5]=((((x1357)*(x1365)))+(((IkReal(-1.00000000000000))*(r12)*(sj0)*(x1367)))+(((x1363)*(x1365)))+(((x1354)*(x1361)))+(((IkReal(-1.00000000000000))*(x1355)*(x1358)))+(((IkReal(-1.00000000000000))*(x1355)*(x1360)))+(((IkReal(-1.00000000000000))*(r02)*(x1351)*(x1353)))+(((x1359)*(x1371)))+(((cj0)*(x1372)))+(((IkReal(-1.00000000000000))*(x1361)*(x1362))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1373=((cj0)*(sj4));
IkReal x1374=((sj0)*(sj4));
if( IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r12)*(x1373)))+(((r02)*(x1374))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((cj6)*(r11)*(x1373)))+(((r10)*(sj6)*(x1373)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1374)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1374))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst24)*(((((IkReal(-1.00000000000000))*(r12)*(x1373)))+(((r02)*(x1374)))))), ((gconst24)*(((((cj6)*(r11)*(x1373)))+(((r10)*(sj6)*(x1373)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1374)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1374)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1375=IKsin(j5);
IkReal x1376=IKcos(j5);
IkReal x1377=((IkReal(1.00000000000000))*(cj0));
IkReal x1378=((IkReal(0.998487463595442))*(cj1));
IkReal x1379=((cj4)*(sj3));
IkReal x1380=((r02)*(sj0));
IkReal x1381=((cj0)*(r01));
IkReal x1382=((IkReal(0.0549798603375872))*(cj1));
IkReal x1383=((r10)*(sj0));
IkReal x1384=((IkReal(0.998487463595442))*(sj1));
IkReal x1385=((cj3)*(cj4));
IkReal x1386=((IkReal(0.0549798603375872))*(sj1));
IkReal x1387=((r11)*(sj0));
IkReal x1388=((r01)*(sj0));
IkReal x1389=((cj6)*(x1376));
IkReal x1390=((sj6)*(x1375));
IkReal x1391=((IkReal(1.00000000000000))*(x1375));
IkReal x1392=((r12)*(x1376));
IkReal x1393=((cj6)*(x1375));
IkReal x1394=((cj3)*(x1384));
IkReal x1395=((sj6)*(x1376));
IkReal x1396=((r00)*(x1395));
evalcond[0]=((((x1388)*(x1393)))+(((IkReal(-1.00000000000000))*(x1377)*(x1392)))+(((r00)*(sj0)*(x1390)))+(((IkReal(-1.00000000000000))*(r11)*(x1377)*(x1393)))+(((x1376)*(x1380)))+(((IkReal(-1.00000000000000))*(r10)*(x1377)*(x1390))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x1378)))+(((cj3)*(x1386)))+(((r21)*(x1393)))+(((r20)*(x1390)))+(((r22)*(x1376)))+(((sj3)*(x1384)))+(((sj3)*(x1382))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj4)))+(((x1388)*(x1389)))+(((IkReal(-1.00000000000000))*(r11)*(x1377)*(x1389)))+(((sj0)*(x1396)))+(((IkReal(-1.00000000000000))*(x1380)*(x1391)))+(((cj0)*(r12)*(x1375)))+(((IkReal(-1.00000000000000))*(r10)*(x1377)*(x1395))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1384)*(x1385)))+(((r21)*(x1389)))+(((IkReal(-1.00000000000000))*(x1382)*(x1385)))+(((r20)*(x1395)))+(((IkReal(-1.00000000000000))*(r22)*(x1391)))+(((x1379)*(x1386)))+(((IkReal(-1.00000000000000))*(x1378)*(x1379))));
evalcond[4]=((((cj0)*(r02)*(x1376)))+(((sj0)*(x1392)))+(((x1387)*(x1393)))+(((IkReal(-1.00000000000000))*(sj3)*(x1378)))+(((sj3)*(x1386)))+(((IkReal(-1.00000000000000))*(cj3)*(x1382)))+(((cj0)*(r00)*(x1390)))+(((x1383)*(x1390)))+(((x1381)*(x1393)))+(((IkReal(-1.00000000000000))*(x1394))));
evalcond[5]=((((x1381)*(x1389)))+(((IkReal(-1.00000000000000))*(r02)*(x1375)*(x1377)))+(((x1387)*(x1389)))+(((IkReal(-1.00000000000000))*(r12)*(sj0)*(x1391)))+(((cj0)*(x1396)))+(((x1383)*(x1395)))+(((x1378)*(x1385)))+(((IkReal(-1.00000000000000))*(x1379)*(x1384)))+(((IkReal(-1.00000000000000))*(x1379)*(x1382)))+(((IkReal(-1.00000000000000))*(x1385)*(x1386))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1397=((r02)*(sj0));
IkReal x1398=((cj0)*(r12));
IkReal x1399=((IkReal(0.0549798603375872))*(sj1)*(sj3));
IkReal x1400=((cj0)*(r10)*(sj6));
IkReal x1401=((IkReal(0.998487463595442))*(cj1)*(sj3));
IkReal x1402=((cj0)*(cj6)*(r11));
IkReal x1403=((IkReal(0.0549798603375872))*(cj1)*(cj3));
IkReal x1404=((r00)*(sj0)*(sj6));
IkReal x1405=((IkReal(0.998487463595442))*(cj3)*(sj1));
IkReal x1406=((cj6)*(r01)*(sj0));
if( IKabs(((gconst23)*(((((x1397)*(x1399)))+(((x1398)*(x1403)))+(((x1398)*(x1401)))+(((x1398)*(x1405)))+(((IkReal(-1.00000000000000))*(x1398)*(x1399)))+(((IkReal(-1.00000000000000))*(x1397)*(x1403)))+(((IkReal(-1.00000000000000))*(x1397)*(x1401)))+(((IkReal(-1.00000000000000))*(x1397)*(x1405))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(x1399)*(x1404)))+(((IkReal(-1.00000000000000))*(x1399)*(x1406)))+(((x1405)*(x1406)))+(((IkReal(-1.00000000000000))*(x1402)*(x1405)))+(((IkReal(-1.00000000000000))*(x1402)*(x1403)))+(((x1403)*(x1404)))+(((x1403)*(x1406)))+(((x1404)*(x1405)))+(((x1399)*(x1400)))+(((x1399)*(x1402)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)))+(((IkReal(-1.00000000000000))*(x1400)*(x1403)))+(((IkReal(-1.00000000000000))*(x1400)*(x1401)))+(((IkReal(-1.00000000000000))*(x1400)*(x1405)))+(((x1401)*(x1406)))+(((x1401)*(x1404))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst23)*(((((x1397)*(x1399)))+(((x1398)*(x1403)))+(((x1398)*(x1401)))+(((x1398)*(x1405)))+(((IkReal(-1.00000000000000))*(x1398)*(x1399)))+(((IkReal(-1.00000000000000))*(x1397)*(x1403)))+(((IkReal(-1.00000000000000))*(x1397)*(x1401)))+(((IkReal(-1.00000000000000))*(x1397)*(x1405)))))), ((gconst23)*(((((IkReal(-1.00000000000000))*(x1399)*(x1404)))+(((IkReal(-1.00000000000000))*(x1399)*(x1406)))+(((x1405)*(x1406)))+(((IkReal(-1.00000000000000))*(x1402)*(x1405)))+(((IkReal(-1.00000000000000))*(x1402)*(x1403)))+(((x1403)*(x1404)))+(((x1403)*(x1406)))+(((x1404)*(x1405)))+(((x1399)*(x1400)))+(((x1399)*(x1402)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)))+(((IkReal(-1.00000000000000))*(x1400)*(x1403)))+(((IkReal(-1.00000000000000))*(x1400)*(x1401)))+(((IkReal(-1.00000000000000))*(x1400)*(x1405)))+(((x1401)*(x1406)))+(((x1401)*(x1404)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1407=IKsin(j5);
IkReal x1408=IKcos(j5);
IkReal x1409=((sj1)*(sj3));
IkReal x1410=((IkReal(1.00000000000000))*(cj0));
IkReal x1411=((cj1)*(sj3));
IkReal x1412=((cj3)*(sj1));
IkReal x1413=((cj1)*(cj3));
IkReal x1414=((sj6)*(x1407));
IkReal x1415=((r12)*(x1408));
IkReal x1416=((cj6)*(x1407));
IkReal x1417=((r02)*(x1408));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1410)*(x1416)))+(((r01)*(sj0)*(x1416)))+(((IkReal(-1.00000000000000))*(x1410)*(x1415)))+(((IkReal(-1.00000000000000))*(r10)*(x1410)*(x1414)))+(((r00)*(sj0)*(x1414)))+(((sj0)*(x1417))));
evalcond[1]=((((r21)*(x1416)))+(((r20)*(x1414)))+(((IkReal(-0.998487463595442))*(x1413)))+(((IkReal(0.998487463595442))*(x1409)))+(((IkReal(0.0549798603375872))*(x1412)))+(((IkReal(0.0549798603375872))*(x1411)))+(((r22)*(x1408))));
evalcond[2]=((((IkReal(-0.998487463595442))*(x1412)))+(((IkReal(-0.998487463595442))*(x1411)))+(((IkReal(0.0549798603375872))*(x1409)))+(((cj0)*(x1417)))+(((r11)*(sj0)*(x1416)))+(((IkReal(-0.0549798603375872))*(x1413)))+(((r10)*(sj0)*(x1414)))+(((cj0)*(r01)*(x1416)))+(((cj0)*(r00)*(x1414)))+(((sj0)*(x1415))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1418=((cj0)*(cj6));
IkReal x1419=((IkReal(1.00000000000000))*(cj5));
IkReal x1420=((r01)*(sj0));
IkReal x1421=((cj0)*(sj6));
IkReal x1422=((r00)*(sj0));
if( IKabs(((((cj0)*(r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1418)*(x1419)))+(((cj5)*(cj6)*(x1420)))+(((cj5)*(sj6)*(x1422)))+(((IkReal(-1.00000000000000))*(r10)*(x1419)*(x1421))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj6)*(x1422)))+(((IkReal(-1.00000000000000))*(r11)*(x1421)))+(((sj6)*(x1420)))+(((r10)*(x1418))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj0)*(r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1418)*(x1419)))+(((cj5)*(cj6)*(x1420)))+(((cj5)*(sj6)*(x1422)))+(((IkReal(-1.00000000000000))*(r10)*(x1419)*(x1421)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(x1422)))+(((IkReal(-1.00000000000000))*(r11)*(x1421)))+(((sj6)*(x1420)))+(((r10)*(x1418)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj0)*(r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1418)*(x1419)))+(((cj5)*(cj6)*(x1420)))+(((cj5)*(sj6)*(x1422)))+(((IkReal(-1.00000000000000))*(r10)*(x1419)*(x1421)))), ((((IkReal(-1.00000000000000))*(cj6)*(x1422)))+(((IkReal(-1.00000000000000))*(r11)*(x1421)))+(((sj6)*(x1420)))+(((r10)*(x1418)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1423=IKsin(j4);
IkReal x1424=IKcos(j4);
IkReal x1425=((cj5)*(cj6));
IkReal x1426=((r01)*(sj0));
IkReal x1427=((cj0)*(sj6));
IkReal x1428=((sj0)*(sj6));
IkReal x1429=((cj5)*(r10));
IkReal x1430=((cj6)*(r00));
IkReal x1431=((cj5)*(r00));
IkReal x1432=((cj1)*(cj3));
IkReal x1433=((IkReal(0.0549798603375872))*(sj3));
IkReal x1434=((IkReal(1.00000000000000))*(sj6));
IkReal x1435=((IkReal(1.00000000000000))*(r11));
IkReal x1436=((cj6)*(r10));
IkReal x1437=((cj1)*(sj3));
IkReal x1438=((IkReal(1.00000000000000))*(cj0));
IkReal x1439=((r12)*(sj5));
IkReal x1440=((cj3)*(sj1));
IkReal x1441=((IkReal(1.00000000000000))*(sj5));
IkReal x1442=((IkReal(0.0549798603375872))*(x1423));
IkReal x1443=((sj1)*(x1424));
IkReal x1444=((IkReal(0.998487463595442))*(x1424));
IkReal x1445=((IkReal(0.998487463595442))*(x1423));
IkReal x1446=((x1423)*(x1433));
IkReal x1447=((IkReal(0.0549798603375872))*(cj3)*(x1424));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1436)*(x1438)))+(((r11)*(x1427)))+(((sj0)*(x1430)))+(x1424)+(((IkReal(-1.00000000000000))*(x1426)*(x1434))));
evalcond[1]=((((sj1)*(x1446)))+(((IkReal(-1.00000000000000))*(x1437)*(x1445)))+(((IkReal(-1.00000000000000))*(x1432)*(x1442)))+(((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x1434)))+(((IkReal(-1.00000000000000))*(x1440)*(x1445))));
evalcond[2]=((((x1428)*(x1431)))+(((x1425)*(x1426)))+(((IkReal(-1.00000000000000))*(x1427)*(x1429)))+(((IkReal(-1.00000000000000))*(cj0)*(x1425)*(x1435)))+(((cj0)*(x1439)))+(((IkReal(-1.00000000000000))*(x1423)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1441))));
evalcond[3]=((((r21)*(x1425)))+(((IkReal(-1.00000000000000))*(r22)*(x1441)))+(((cj5)*(r20)*(sj6)))+(((IkReal(-1.00000000000000))*(x1437)*(x1444)))+(((x1433)*(x1443)))+(((IkReal(-0.0549798603375872))*(x1424)*(x1432)))+(((IkReal(-1.00000000000000))*(x1440)*(x1444))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r01)*(x1427)))+(((IkReal(-1.00000000000000))*(x1428)*(x1435)))+(((cj0)*(x1430)))+(((sj0)*(x1436)))+(((IkReal(-1.00000000000000))*(sj1)*(sj3)*(x1445)))+(((IkReal(-1.00000000000000))*(cj1)*(x1446)))+(((x1432)*(x1445)))+(((IkReal(-1.00000000000000))*(x1440)*(x1442))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj0)*(x1439)))+(((IkReal(-0.0549798603375872))*(x1424)*(x1440)))+(((r11)*(sj0)*(x1425)))+(((x1427)*(x1431)))+(((IkReal(-1.00000000000000))*(cj1)*(x1424)*(x1433)))+(((x1428)*(x1429)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1438)))+(((IkReal(-0.998487463595442))*(sj3)*(x1443)))+(((cj0)*(r01)*(x1425)))+(((x1432)*(x1444))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1448=((sj0)*(sj1));
IkReal x1449=((IkReal(0.0549798603375872))*(cj3));
IkReal x1450=((cj0)*(sj1));
IkReal x1451=((cj6)*(r11));
IkReal x1452=((IkReal(0.0549798603375872))*(cj1));
IkReal x1453=((cj0)*(sj3));
IkReal x1454=((cj6)*(r01));
IkReal x1455=((IkReal(0.998487463595442))*(r02));
IkReal x1456=((cj1)*(cj3));
IkReal x1457=((r10)*(sj6));
IkReal x1458=((IkReal(0.998487463595442))*(cj0));
IkReal x1459=((IkReal(0.998487463595442))*(sj3));
IkReal x1460=((r00)*(sj6));
IkReal x1461=((sj0)*(sj3));
IkReal x1462=((IkReal(0.998487463595442))*(sj0));
IkReal x1463=((sj6)*(x1459));
IkReal x1464=((sj3)*(x1454));
if( IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(r12)*(x1449)*(x1450)))+(((IkReal(-1.00000000000000))*(sj0)*(x1455)*(x1456)))+(((sj3)*(x1448)*(x1455)))+(((r02)*(x1448)*(x1449)))+(((r02)*(x1452)*(x1461)))+(((IkReal(-1.00000000000000))*(r12)*(x1452)*(x1453)))+(((r12)*(x1456)*(x1458)))+(((IkReal(-1.00000000000000))*(r12)*(x1450)*(x1459))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((x1452)*(x1453)*(x1457)))+(((x1450)*(x1457)*(x1459)))+(((x1456)*(x1460)*(x1462)))+(((IkReal(-1.00000000000000))*(x1452)*(x1460)*(x1461)))+(((IkReal(-1.00000000000000))*(x1448)*(x1449)*(x1460)))+(((IkReal(-1.00000000000000))*(x1448)*(x1449)*(x1454)))+(((x1454)*(x1456)*(x1462)))+(((x1451)*(x1452)*(x1453)))+(((IkReal(-1.00000000000000))*(x1456)*(x1457)*(x1458)))+(((IkReal(-1.00000000000000))*(x1452)*(x1454)*(x1461)))+(((IkReal(-1.00000000000000))*(x1448)*(x1454)*(x1459)))+(((IkReal(-1.00000000000000))*(x1451)*(x1456)*(x1458)))+(((x1449)*(x1450)*(x1457)))+(((x1449)*(x1450)*(x1451)))+(((x1450)*(x1451)*(x1459)))+(((IkReal(-1.00000000000000))*(x1448)*(x1459)*(x1460))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst22)*(((((IkReal(-1.00000000000000))*(r12)*(x1449)*(x1450)))+(((IkReal(-1.00000000000000))*(sj0)*(x1455)*(x1456)))+(((sj3)*(x1448)*(x1455)))+(((r02)*(x1448)*(x1449)))+(((r02)*(x1452)*(x1461)))+(((IkReal(-1.00000000000000))*(r12)*(x1452)*(x1453)))+(((r12)*(x1456)*(x1458)))+(((IkReal(-1.00000000000000))*(r12)*(x1450)*(x1459)))))), ((gconst22)*(((((x1452)*(x1453)*(x1457)))+(((x1450)*(x1457)*(x1459)))+(((x1456)*(x1460)*(x1462)))+(((IkReal(-1.00000000000000))*(x1452)*(x1460)*(x1461)))+(((IkReal(-1.00000000000000))*(x1448)*(x1449)*(x1460)))+(((IkReal(-1.00000000000000))*(x1448)*(x1449)*(x1454)))+(((x1454)*(x1456)*(x1462)))+(((x1451)*(x1452)*(x1453)))+(((IkReal(-1.00000000000000))*(x1456)*(x1457)*(x1458)))+(((IkReal(-1.00000000000000))*(x1452)*(x1454)*(x1461)))+(((IkReal(-1.00000000000000))*(x1448)*(x1454)*(x1459)))+(((IkReal(-1.00000000000000))*(x1451)*(x1456)*(x1458)))+(((x1449)*(x1450)*(x1457)))+(((x1449)*(x1450)*(x1451)))+(((x1450)*(x1451)*(x1459)))+(((IkReal(-1.00000000000000))*(x1448)*(x1459)*(x1460)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1465=IKsin(j5);
IkReal x1466=IKcos(j5);
IkReal x1467=((sj1)*(sj3));
IkReal x1468=((IkReal(1.00000000000000))*(cj0));
IkReal x1469=((cj1)*(sj3));
IkReal x1470=((cj3)*(sj1));
IkReal x1471=((cj1)*(cj3));
IkReal x1472=((sj6)*(x1465));
IkReal x1473=((r12)*(x1466));
IkReal x1474=((cj6)*(x1465));
IkReal x1475=((r02)*(x1466));
evalcond[0]=((((r01)*(sj0)*(x1474)))+(((sj0)*(x1475)))+(((r00)*(sj0)*(x1472)))+(((IkReal(-1.00000000000000))*(x1468)*(x1473)))+(((IkReal(-1.00000000000000))*(r11)*(x1468)*(x1474)))+(((IkReal(-1.00000000000000))*(r10)*(x1468)*(x1472))));
evalcond[1]=((((IkReal(0.0549798603375872))*(x1470)))+(((r21)*(x1474)))+(((IkReal(0.998487463595442))*(x1467)))+(((r22)*(x1466)))+(((r20)*(x1472)))+(((IkReal(0.0549798603375872))*(x1469)))+(((IkReal(-0.998487463595442))*(x1471))));
evalcond[2]=((((r11)*(sj0)*(x1474)))+(((sj0)*(x1473)))+(((IkReal(-0.0549798603375872))*(x1471)))+(((IkReal(-0.998487463595442))*(x1469)))+(((r10)*(sj0)*(x1472)))+(((cj0)*(r00)*(x1472)))+(((cj0)*(r01)*(x1474)))+(((cj0)*(x1475)))+(((IkReal(0.0549798603375872))*(x1467)))+(((IkReal(-0.998487463595442))*(x1470))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1476=((cj0)*(cj6));
IkReal x1477=((IkReal(1.00000000000000))*(cj5));
IkReal x1478=((r01)*(sj0));
IkReal x1479=((cj0)*(sj6));
IkReal x1480=((r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r10)*(x1477)*(x1479)))+(((cj5)*(sj6)*(x1480)))+(((IkReal(-1.00000000000000))*(r11)*(x1476)*(x1477)))+(((cj0)*(r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(sj5)))+(((cj5)*(cj6)*(x1478))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj6)*(x1478)))+(((r10)*(x1476)))+(((IkReal(-1.00000000000000))*(cj6)*(x1480)))+(((IkReal(-1.00000000000000))*(r11)*(x1479))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r10)*(x1477)*(x1479)))+(((cj5)*(sj6)*(x1480)))+(((IkReal(-1.00000000000000))*(r11)*(x1476)*(x1477)))+(((cj0)*(r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(sj5)))+(((cj5)*(cj6)*(x1478)))))+IKsqr(((((sj6)*(x1478)))+(((r10)*(x1476)))+(((IkReal(-1.00000000000000))*(cj6)*(x1480)))+(((IkReal(-1.00000000000000))*(r11)*(x1479)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r10)*(x1477)*(x1479)))+(((cj5)*(sj6)*(x1480)))+(((IkReal(-1.00000000000000))*(r11)*(x1476)*(x1477)))+(((cj0)*(r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(sj5)))+(((cj5)*(cj6)*(x1478)))), ((((sj6)*(x1478)))+(((r10)*(x1476)))+(((IkReal(-1.00000000000000))*(cj6)*(x1480)))+(((IkReal(-1.00000000000000))*(r11)*(x1479)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1481=IKsin(j4);
IkReal x1482=IKcos(j4);
IkReal x1483=((cj5)*(cj6));
IkReal x1484=((r01)*(sj0));
IkReal x1485=((cj0)*(sj6));
IkReal x1486=((sj0)*(sj6));
IkReal x1487=((cj5)*(r10));
IkReal x1488=((cj6)*(r00));
IkReal x1489=((cj5)*(r00));
IkReal x1490=((cj1)*(cj3));
IkReal x1491=((IkReal(0.0549798603375872))*(sj3));
IkReal x1492=((IkReal(1.00000000000000))*(sj6));
IkReal x1493=((IkReal(1.00000000000000))*(r11));
IkReal x1494=((cj6)*(r10));
IkReal x1495=((cj1)*(sj3));
IkReal x1496=((IkReal(1.00000000000000))*(cj0));
IkReal x1497=((r12)*(sj5));
IkReal x1498=((cj3)*(sj1));
IkReal x1499=((IkReal(1.00000000000000))*(sj5));
IkReal x1500=((IkReal(0.0549798603375872))*(x1481));
IkReal x1501=((sj1)*(x1482));
IkReal x1502=((IkReal(0.998487463595442))*(x1482));
IkReal x1503=((IkReal(0.998487463595442))*(x1481));
IkReal x1504=((x1481)*(x1491));
IkReal x1505=((IkReal(0.0549798603375872))*(cj3)*(x1482));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1494)*(x1496)))+(((sj0)*(x1488)))+(((IkReal(-1.00000000000000))*(x1484)*(x1492)))+(((r11)*(x1485)))+(x1482));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1498)*(x1503)))+(((IkReal(-1.00000000000000))*(x1490)*(x1500)))+(((IkReal(-1.00000000000000))*(r21)*(x1492)))+(((sj1)*(x1504)))+(((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(x1495)*(x1503))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1485)*(x1487)))+(((IkReal(-1.00000000000000))*(x1481)))+(((x1486)*(x1489)))+(((x1483)*(x1484)))+(((cj0)*(x1497)))+(((IkReal(-1.00000000000000))*(cj0)*(x1483)*(x1493)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1499))));
evalcond[3]=((((IkReal(-0.0549798603375872))*(x1482)*(x1490)))+(((IkReal(-1.00000000000000))*(x1498)*(x1502)))+(((cj5)*(r20)*(sj6)))+(((r21)*(x1483)))+(((x1491)*(x1501)))+(((IkReal(-1.00000000000000))*(r22)*(x1499)))+(((IkReal(-1.00000000000000))*(x1495)*(x1502))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj1)*(x1504)))+(((IkReal(-1.00000000000000))*(x1498)*(x1500)))+(((x1490)*(x1503)))+(((sj0)*(x1494)))+(((IkReal(-1.00000000000000))*(x1486)*(x1493)))+(((IkReal(-1.00000000000000))*(r01)*(x1485)))+(((cj0)*(x1488)))+(((IkReal(-1.00000000000000))*(sj1)*(sj3)*(x1503))));
evalcond[5]=((((IkReal(-0.0549798603375872))*(x1482)*(x1498)))+(((IkReal(-1.00000000000000))*(cj1)*(x1482)*(x1491)))+(((x1490)*(x1502)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1496)))+(((IkReal(-0.998487463595442))*(sj3)*(x1501)))+(((cj0)*(r01)*(x1483)))+(((IkReal(-1.00000000000000))*(sj0)*(x1497)))+(((x1486)*(x1487)))+(((x1485)*(x1489)))+(((r11)*(sj0)*(x1483))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - clam (3a9a8c4982c11cdb1e837d6ee4b3ac00)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
