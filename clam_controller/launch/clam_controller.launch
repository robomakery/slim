<!-- -*- mode: XML -*- -->

<launch>

  <!-- Debug Info -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <!-- Start the Dynamixel motor manager to control all clam servos -->
  <node name="dynamixel_manager" pkg="dynamixel_hardware_interface" type="controller_manager"
        launch-prefix="$(arg launch_prefix)" output="screen" >
    <!-- Load all the servo properties -->
    <rosparam file="$(find clam_controller)/config/dynamixel_ports.yaml" command="load"/>
  </node>

  <!-- Load joint controller configuration from YAML file to parameter server -->
  <rosparam file="$(find clam_controller)/config/clam_controller_configuration.yaml" command="load"/>

  <!-- Start all ClamArm joint controllers -->
  <node name="clam_controller_spawner_ttl" pkg="dynamixel_hardware_interface" type="controller_spawner.py"
        args="--manager=clam_controller_manager
              --port=port_ttl
              shoulder_pan_controller
              gripper_roll_controller
              gripper_finger_controller"
        output="screen"/>

  <node name="clam_controller_spawner_rs485" pkg="dynamixel_hardware_interface" type="controller_spawner.py"
        args="--manager=clam_controller_manager
              --port=port_rs485
              shoulder_pitch_controller
              elbow_roll_controller
              elbow_pitch_controller
              wrist_roll_controller
              wrist_pitch_controller"
        output="screen"/>

  <!-- Start arm trajectory action controller. *Not sure what multi_joint_dummy_port implies... -->
  <rosparam file="$(find clam_controller)/config/clam_trajectory_controller.yaml" command="load"/>
  <node name="arm_trajectory_controller_spawner" pkg="dynamixel_hardware_interface" type="controller_spawner.py"
        args="--manager=clam_controller_manager
              --port=multi_joint_dummy_port
              clam_trajectory_controller"
        output="screen"/>

  <!-- Publish combined joint info -->
  <include file="$(find clam_controller)/launch/joint_state_aggregator.launch" />

  <!-- Launch fake joint state publisher -->
  <!--node name="joint_state_publisher" pkg="clam_controller" type="joint_state_publisher.py" output="screen">
    <rosparam param="source_list">[joint_states]</rosparam>
    <rosparam param="use_gui">FALSE</rosparam>
  </node-->

  <!--node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen">
    <rosparam param="source_list">[joint_states]</rosparam>
    <rosparam param="use_gui">FALSE</rosparam>
  </node-->

  <!-- Start the Clam Gripper Server to control the end effector -->
  <node name="clam_gripper_controller" pkg="clam_controller" type="clam_gripper_controller" output="screen"
	args="_simulate:=false" />  

</launch>
